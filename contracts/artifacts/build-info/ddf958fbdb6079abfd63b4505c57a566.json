{
	"id": "ddf958fbdb6079abfd63b4505c57a566",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"contracts/buy_back.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";  // Import OpenZeppelin's IERC20\r\n\r\nusing SafeERC20 for IERC20;\r\n\r\n/**\r\n * @dev Import the OpenZeppelin Pausable contract.\r\n * Make sure your import path matches your OpenZeppelin version.\r\n */\r\n// import \"@openzeppelin/contracts/security/Pausable.sol\";\r\n\r\n/**\r\n * @dev For demonstration, here is a minimal Pausable definition inlined.\r\n * In a real project, just import from OpenZeppelin as shown above.\r\n */\r\nabstract contract Pausable {\r\n    bool private _paused;\r\n\r\n    event Paused(address account);\r\n    event Unpaused(address account);\r\n\r\n    constructor() {\r\n        _paused = false;\r\n    }\r\n\r\n    function paused() public view virtual returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    modifier whenNotPaused() {\r\n        require(!paused(), \"Pausable: paused\");\r\n        _;\r\n    }\r\n\r\n    modifier whenPaused() {\r\n        require(paused(), \"Pausable: not paused\");\r\n        _;\r\n    }\r\n\r\n    function _pause() internal virtual whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(msg.sender);\r\n    }\r\n\r\n    function _unpause() internal virtual whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(msg.sender);\r\n    }\r\n}\r\n\r\n/**\r\n * @dev Generic ERC20 interface\r\n */\r\n// interface IERC20 {\r\n//     function approve(address spender, uint256 amount) external returns (bool);\r\n//     function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n//     function transfer(address recipient, uint256 amount) external returns (bool);\r\n//     function balanceOf(address account) external view returns (uint256);\r\n//     function allowance(address owner, address spender) external view returns (uint256);\r\n// }\r\n\r\n/**\r\n * @dev RoboMoney (or RoboMoneyAlpha) interface\r\n */\r\ninterface IRoboMoney {\r\n    function initializeSupply(uint256 amount) external;\r\n    function mint(address to, uint256 amount) external;\r\n    function burn(address from, uint256 amount) external;\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function totalSupply() external view returns (uint256);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n}\r\n\r\n/**\r\n * @title BuyBack\r\n * @dev A contract that lets users sell (buy back) RoboMoney tokens for a paymentToken,\r\n *      and then burns the RoboMoney tokens.\r\n *      Now includes Pausable functionality so the owner can temporarily halt deposits or buybacks.\r\n */\r\ncontract BuyBack is Pausable, ReentrancyGuard {\r\n    address public owner;\r\n    address public paymentToken;   // ERC20 token used to buy back RoboMoney\r\n    address public roboMoney;      // Address of the RoboMoney (or RoboMoneyAlpha) token\r\n    address public gasReserve;\r\n\r\n    // e.g., premiumRate = 5 => 5% premium\r\n    // e.g., targetPrice = 1e18 => 1 RoboMoney per 1 paymentToken in Wei\r\n    uint256 public premiumRate;    // Premium in %\r\n    uint256 public targetPrice;    // Exchange ratio (RoboMoney -> paymentToken)\r\n    uint256 public taxRate;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event BuyBackExecuted(address indexed buyer, uint256 roboMoneyAmount, uint256 tokenSpent);\r\n    event GasReserveUpdated(address indexed oldGasReserve, address indexed newGasReserve);\r\n    event TaxRateUpdated(uint256 oldTaxRate, uint256 newTaxRate);\r\n\r\n    constructor(\r\n        address _paymentToken,\r\n        address _roboMoney,\r\n        address _gasReserve,\r\n        uint256 _premiumRate,\r\n        uint256 _targetPrice,\r\n        uint256 _taxRate\r\n    ) {\r\n        owner = msg.sender;\r\n        paymentToken = _paymentToken;\r\n        gasReserve = _gasReserve;\r\n        roboMoney = _roboMoney;\r\n        premiumRate = _premiumRate;\r\n        targetPrice = _targetPrice;\r\n        taxRate = _taxRate;\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not authorized\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Owner can pause the contract (disables buyback & deposit).\r\n     */\r\n    function pause() external onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @dev Owner can unpause the contract (re-enables buyback & deposit).\r\n     */\r\n    function unpause() external onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the premium rate (in %). e.g., 5 => 5% premium.\r\n     */\r\n    function setPremiumRate(uint256 _premiumRate) external onlyOwner {\r\n        // Typically 0-100 for a simple percentage\r\n        require(_premiumRate <= 100, \"Invalid premium rate\");\r\n        premiumRate = _premiumRate;\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the base price ratio for RoboMoney vs. payment token.\r\n     */\r\n    function setTargetPrice(uint256 _targetPrice) external onlyOwner {\r\n        targetPrice = _targetPrice;\r\n    }\r\n\r\n    /**\r\n     * @dev Owner can transfer ownership.\r\n     */\r\n    function transferOwnership(address newOwner) external onlyOwner {\r\n        require(newOwner != address(0), \"New owner cannot be zero address\");\r\n        emit OwnershipTransferred(owner, newOwner);\r\n        owner = newOwner;\r\n    }\r\n\r\n    /**\r\n     * @notice Buys back RoboMoney from msg.sender at the configured premium rate,\r\n     * paying out the specified ERC20 paymentToken, and then burns the RoboMoney.\r\n     * @param roboMoneyAmount Amount of RoboMoney tokens to sell/buy back.\r\n     *\r\n     * @dev whenNotPaused ensures no buybacks are processed if contract is paused.\r\n     */\r\n    function buyback(uint256 roboMoneyAmount) external whenNotPaused nonReentrant {\r\n        require(roboMoneyAmount > 0, \"Must deposit RoboMoney\");\r\n\r\n        // Check allowance for RoboMoney\r\n        uint256 allowed = IRoboMoney(roboMoney).allowance(msg.sender, address(this));\r\n        require(allowed >= roboMoneyAmount, \"Insufficient RoboMoney allowance\");\r\n\r\n        // Transfer RoboMoney from user to contract\r\n        IERC20(roboMoney).safeTransferFrom(msg.sender, address(this), roboMoneyAmount);\r\n\r\n        // Calculate the paymentToken amount with the premium applied\r\n        // premiumPrice = targetPrice * (100 + premiumRate) / 100\r\n        uint256 premiumPrice = (targetPrice * (100 + premiumRate)) / 100;\r\n        uint256 tokenAmount = (roboMoneyAmount * premiumPrice) / 1e18;\r\n\r\n        // Check the contractâ€™s paymentToken balance\r\n        uint256 currentBalance = IERC20(paymentToken).balanceOf(address(this));\r\n        require(currentBalance >= tokenAmount, \"Not enough paymentToken in contract\");\r\n\r\n        // Transfer paymentToken to the \r\n        uint256 taxAmount = (tokenAmount * taxRate) / 10000;\r\n        uint256 userAmount = tokenAmount - taxAmount;\r\n\r\n        IERC20(paymentToken).safeTransfer(gasReserve, taxAmount);\r\n        IERC20(paymentToken).safeTransfer(msg.sender, userAmount);\r\n\r\n        // Burn the RoboMoney tokens in the contract\r\n        IRoboMoney(roboMoney).burn(address(this), roboMoneyAmount);\r\n\r\n        emit BuyBackExecuted(msg.sender, roboMoneyAmount, tokenAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Owner can deposit payment tokens into the contract to fund future buybacks.\r\n     * @dev Protected by whenNotPaused so you can prevent deposits if needed.\r\n     */\r\n    function depositPaymentToken(uint256 amount) external onlyOwner whenNotPaused {\r\n        require(amount > 0, \"Deposit must be > 0\");\r\n        bool success = IERC20(paymentToken).transferFrom(msg.sender, address(this), amount);\r\n        require(success, \"Payment token deposit failed\");\r\n    }\r\n\r\n    function setGasReserve(address _newGasReserve) external onlyOwner {\r\n        require(_newGasReserve != address(0), \"Invalid address\");\r\n        emit GasReserveUpdated(gasReserve, _newGasReserve);\r\n        gasReserve = _newGasReserve;\r\n    }\r\n\r\n    function setTaxRate(uint256 _newTaxRate) external onlyOwner {\r\n        require(_newTaxRate <= 1000, \"Tax too high\");\r\n        emit TaxRateUpdated(taxRate, _newTaxRate);\r\n        taxRate = _newTaxRate;\r\n    }\r\n\r\n    /**\r\n     * @dev Owner can withdraw payment tokens from the contract (for leftover tokens, etc.).\r\n     *      This is still allowed even if paused, in case you need to remove funds in an emergency.\r\n     */\r\n    function withdrawPaymentToken(uint256 amount) external onlyOwner {\r\n        require(amount > 0, \"Withdraw must be > 0\");\r\n        uint256 currentBalance = IERC20(paymentToken).balanceOf(address(this));\r\n        require(amount <= currentBalance, \"Not enough tokens in contract\");\r\n        bool success = IERC20(paymentToken).transfer(owner, amount);\r\n        require(success, \"Payment token withdrawal failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current contract balance of the payment token.\r\n     */\r\n    function contractTokenBalance() external view returns (uint256) {\r\n        return IERC20(paymentToken).balanceOf(address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the maximum amount of RoboMoney the contract can buy back\r\n     * given its current payment token balance and the premium rate.\r\n     */\r\n    function maxBuyableRoboMoney() external view returns (uint256) {\r\n        uint256 currentBalance = IERC20(paymentToken).balanceOf(address(this));\r\n        uint256 premiumPrice = (targetPrice * (100 + premiumRate)) / 100;\r\n\r\n        if (premiumPrice == 0) {\r\n            return 0;\r\n        }\r\n        // Convert the payment token balance into RoboMoney tokens at the premium price\r\n        return (currentBalance * 1e18) / premiumPrice;\r\n    }\r\n\r\n    /**\r\n     * @dev Checks if the contract has enough payment tokens to buy back roboMoneyAmount\r\n     *      at the current premium rate.\r\n     */\r\n    function canExecuteBuyback(uint256 roboMoneyAmount) external view returns (bool) {\r\n        uint256 premiumPrice = (targetPrice * (100 + premiumRate)) / 100;\r\n        uint256 tokenAmount = (roboMoneyAmount * premiumPrice) / 1e18;\r\n        uint256 currentBalance = IERC20(paymentToken).balanceOf(address(this));\r\n        return (currentBalance >= tokenAmount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220cfe51aef1b46091d16f3522da3b2ebad461170bcc84f3d5a182e1dca0a69209664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cfe51aef1b46091d16f3522da3b2ebad461170bcc84f3d5a182e1dca0a69209664736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xE5 BYTE 0xEF SHL CHAINID MULMOD SAR AND RETURN MSTORE 0x2D LOG3 0xB2 0xEB 0xAD CHAINID GT PUSH17 0xBCC84F3D5A182E1DCA0A69209664736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "750:8692:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;750:8692:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cfe51aef1b46091d16f3522da3b2ebad461170bcc84f3d5a182e1dca0a69209664736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xE5 BYTE 0xEF SHL CHAINID MULMOD SAR AND RETURN MSTORE 0x2D LOG3 0xB2 0xEB 0xAD CHAINID GT PUSH17 0xBCC84F3D5A182E1DCA0A69209664736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "750:8692:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cfe51aef1b46091d16f3522da3b2ebad461170bcc84f3d5a182e1dca0a69209664736f6c634300081c0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/buy_back.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c2449b78151e4df7292f7f2d07f95525e81fb5576675d57dec74639cb33aeae664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c2449b78151e4df7292f7f2d07f95525e81fb5576675d57dec74639cb33aeae664736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PREVRANDAO SWAP12 PUSH25 0x151E4DF7292F7F2D07F95525E81FB5576675D57DEC74639CB3 GASPRICE 0xEA 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "233:5799:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;233:5799:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c2449b78151e4df7292f7f2d07f95525e81fb5576675d57dec74639cb33aeae664736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 PREVRANDAO SWAP12 PUSH25 0x151E4DF7292F7F2D07F95525E81FB5576675D57DEC74639CB3 GASPRICE 0xEA 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "233:5799:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c2449b78151e4df7292f7f2d07f95525e81fb5576675d57dec74639cb33aeae664736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/buy_back.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212209e4da8aa5333ac8d389d2e409b786095cfb5076699894c42d09ca4aa483d24be64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212209e4da8aa5333ac8d389d2e409b786095cfb5076699894c42d09ca4aa483d24be64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x4D 0xA8 0xAA MSTORE8 CALLER 0xAC DUP14 CODESIZE SWAP14 0x2E BLOCKHASH SWAP12 PUSH25 0x6095CFB5076699894C42D09CA4AA483D24BE64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "411:484:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;411:484:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212209e4da8aa5333ac8d389d2e409b786095cfb5076699894c42d09ca4aa483d24be64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0x4D 0xA8 0xAA MSTORE8 CALLER 0xAC DUP14 CODESIZE SWAP14 0x2E BLOCKHASH SWAP12 PUSH25 0x6095CFB5076699894C42D09CA4AA483D24BE64736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "411:484:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209e4da8aa5333ac8d389d2e409b786095cfb5076699894c42d09ca4aa483d24be64736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/buy_back.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/buy_back.sol": {
				"BuyBack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_paymentToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_roboMoney",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_gasReserve",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_premiumRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_targetPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_taxRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "roboMoneyAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenSpent",
									"type": "uint256"
								}
							],
							"name": "BuyBackExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldGasReserve",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newGasReserve",
									"type": "address"
								}
							],
							"name": "GasReserveUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldTaxRate",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTaxRate",
									"type": "uint256"
								}
							],
							"name": "TaxRateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roboMoneyAmount",
									"type": "uint256"
								}
							],
							"name": "buyback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "roboMoneyAmount",
									"type": "uint256"
								}
							],
							"name": "canExecuteBuyback",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositPaymentToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gasReserve",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxBuyableRoboMoney",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "premiumRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "roboMoney",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newGasReserve",
									"type": "address"
								}
							],
							"name": "setGasReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_premiumRate",
									"type": "uint256"
								}
							],
							"name": "setPremiumRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_targetPrice",
									"type": "uint256"
								}
							],
							"name": "setTargetPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTaxRate",
									"type": "uint256"
								}
							],
							"name": "setTaxRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "targetPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawPaymentToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A contract that lets users sell (buy back) RoboMoney tokens for a paymentToken,      and then burns the RoboMoney tokens.      Now includes Pausable functionality so the owner can temporarily halt deposits or buybacks.",
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"buyback(uint256)": {
								"details": "whenNotPaused ensures no buybacks are processed if contract is paused.",
								"params": {
									"roboMoneyAmount": "Amount of RoboMoney tokens to sell/buy back."
								}
							},
							"canExecuteBuyback(uint256)": {
								"details": "Checks if the contract has enough payment tokens to buy back roboMoneyAmount      at the current premium rate."
							},
							"contractTokenBalance()": {
								"details": "Returns the current contract balance of the payment token."
							},
							"depositPaymentToken(uint256)": {
								"details": "Owner can deposit payment tokens into the contract to fund future buybacks.Protected by whenNotPaused so you can prevent deposits if needed."
							},
							"maxBuyableRoboMoney()": {
								"details": "Returns the maximum amount of RoboMoney the contract can buy back given its current payment token balance and the premium rate."
							},
							"pause()": {
								"details": "Owner can pause the contract (disables buyback & deposit)."
							},
							"setPremiumRate(uint256)": {
								"details": "Sets the premium rate (in %). e.g., 5 => 5% premium."
							},
							"setTargetPrice(uint256)": {
								"details": "Sets the base price ratio for RoboMoney vs. payment token."
							},
							"transferOwnership(address)": {
								"details": "Owner can transfer ownership."
							},
							"unpause()": {
								"details": "Owner can unpause the contract (re-enables buyback & deposit)."
							},
							"withdrawPaymentToken(uint256)": {
								"details": "Owner can withdraw payment tokens from the contract (for leftover tokens, etc.).      This is still allowed even if paused, in case you need to remove funds in an emergency."
							}
						},
						"title": "BuyBack",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/buy_back.sol\":2873:10336  contract BuyBack is Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/buy_back.sol\":3785:4231  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/buy_back.sol\":851:856  false */\n  0x00\n    /* \"contracts/buy_back.sol\":841:856  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"contracts/buy_back.sol\":3995:4000  owner */\n  0x02\n    /* \"contracts/buy_back.sol\":3995:4013  owner = msg.sender */\n  dup1\n  sload\n    /* \"contracts/buy_back.sol\":4003:4013  msg.sender */\n  caller\n  not(sub(shl(0xa0, 0x01), 0x01))\n    /* \"contracts/buy_back.sol\":3995:4013  owner = msg.sender */\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/buy_back.sol\":4024:4036  paymentToken */\n  0x03\n    /* \"contracts/buy_back.sol\":4024:4052  paymentToken = _paymentToken */\n  dup1\n  sload\n  dup3\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap9\n  dup10\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/buy_back.sol\":4063:4073  gasReserve */\n  0x05\n    /* \"contracts/buy_back.sol\":4063:4087  gasReserve = _gasReserve */\n  dup1\n  sload\n  dup3\n  and\n  swap6\n  dup9\n  and\n  swap6\n  swap1\n  swap6\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/buy_back.sol\":4098:4107  roboMoney */\n  0x04\n    /* \"contracts/buy_back.sol\":4098:4120  roboMoney = _roboMoney */\n  dup1\n  sload\n  swap1\n  swap5\n  and\n  swap5\n  swap1\n  swap6\n  and\n  swap4\n  swap1\n  swap4\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/buy_back.sol\":4131:4142  premiumRate */\n  0x06\n    /* \"contracts/buy_back.sol\":4131:4157  premiumRate = _premiumRate */\n  sstore\n    /* \"contracts/buy_back.sol\":4168:4179  targetPrice */\n  0x07\n    /* \"contracts/buy_back.sol\":4168:4194  targetPrice = _targetPrice */\n  sstore\n    /* \"contracts/buy_back.sol\":4205:4212  taxRate */\n  0x08\n    /* \"contracts/buy_back.sol\":4205:4223  taxRate = _taxRate */\n  sstore\n    /* \"contracts/buy_back.sol\":2873:10336  contract BuyBack is Pausable, ReentrancyGuard {... */\n  jump(tag_12)\n    /* \"#utility.yul\":14:191   */\ntag_11:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_14\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_14:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:910   */\ntag_3:\n    /* \"#utility.yul\":311:317   */\n  0x00\n    /* \"#utility.yul\":319:325   */\n  0x00\n    /* \"#utility.yul\":327:333   */\n  0x00\n    /* \"#utility.yul\":335:341   */\n  0x00\n    /* \"#utility.yul\":343:349   */\n  0x00\n    /* \"#utility.yul\":351:357   */\n  0x00\n    /* \"#utility.yul\":404:407   */\n  0xc0\n    /* \"#utility.yul\":392:401   */\n  dup8\n    /* \"#utility.yul\":383:390   */\n  dup10\n    /* \"#utility.yul\":379:402   */\n  sub\n    /* \"#utility.yul\":375:408   */\n  slt\n    /* \"#utility.yul\":372:425   */\n  iszero\n  tag_16\n  jumpi\n    /* \"#utility.yul\":421:422   */\n  0x00\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":411:423   */\n  revert\n    /* \"#utility.yul\":372:425   */\ntag_16:\n    /* \"#utility.yul\":444:484   */\n  tag_17\n    /* \"#utility.yul\":474:483   */\n  dup8\n    /* \"#utility.yul\":444:484   */\n  tag_11\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":434:484   */\n  swap6\n  pop\n    /* \"#utility.yul\":503:552   */\n  tag_18\n    /* \"#utility.yul\":548:550   */\n  0x20\n    /* \"#utility.yul\":537:546   */\n  dup9\n    /* \"#utility.yul\":533:551   */\n  add\n    /* \"#utility.yul\":503:552   */\n  tag_11\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":493:552   */\n  swap5\n  pop\n    /* \"#utility.yul\":571:620   */\n  tag_19\n    /* \"#utility.yul\":616:618   */\n  0x40\n    /* \"#utility.yul\":605:614   */\n  dup9\n    /* \"#utility.yul\":601:619   */\n  add\n    /* \"#utility.yul\":571:620   */\n  tag_11\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":682:684   */\n  0x60\n    /* \"#utility.yul\":667:685   */\n  dup9\n  add\n    /* \"#utility.yul\":661:686   */\n  mload\n    /* \"#utility.yul\":776:779   */\n  0x80\n    /* \"#utility.yul\":761:780   */\n  dup10\n  add\n    /* \"#utility.yul\":755:781   */\n  mload\n    /* \"#utility.yul\":873:876   */\n  0xa0\n    /* \"#utility.yul\":858:877   */\n  swap1\n  swap10\n  add\n    /* \"#utility.yul\":852:878   */\n  mload\n    /* \"#utility.yul\":196:910   */\n  swap8\n  swap11\n  swap7\n  swap10\n  pop\n    /* \"#utility.yul\":561:620   */\n  swap1\n  swap8\n    /* \"#utility.yul\":661:686   */\n  swap1\n  swap7\n    /* \"#utility.yul\":755:781   */\n  swap1\n  swap6\n    /* \"#utility.yul\":852:878   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":196:910   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_12:\n    /* \"contracts/buy_back.sol\":2873:10336  contract BuyBack is Pausable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/buy_back.sol\":2873:10336  contract BuyBack is Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x839ea2d9\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xc6d69a30\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xc6d69a30\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xce1d1f1f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd4a49c17\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdc38679c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xeea7570e\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      dup1\n      0x839ea2d9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9063ee20\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9e9aed62\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      dup1\n      0x6a64eff8\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x6a64eff8\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x771a3a1d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x79a9fa1c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ef7ba20\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7ff8b57a\n      eq\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      dup1\n      0x07e675fa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3013ce29\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5d0040d3\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/buy_back.sol\":8542:8959  function withdrawPaymentToken(uint256 amount) external onlyOwner {... */\n    tag_3:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/buy_back.sol\":2953:2980  address public paymentToken */\n    tag_4:\n      sload(0x03)\n      tag_31\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":363:395   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":345:396   */\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/buy_back.sol\":2953:2980  address public paymentToken */\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/buy_back.sol\":4600:4667  function unpause() external onlyOwner {... */\n    tag_5:\n      tag_27\n      tag_36\n      jump\t// in\n        /* \"contracts/buy_back.sol\":872:958  function paused() public view virtual returns (bool) {... */\n    tag_6:\n        /* \"contracts/buy_back.sol\":919:923  bool */\n      0x00\n        /* \"contracts/buy_back.sol\":943:950  _paused */\n      sload\n      0xff\n      and\n        /* \"contracts/buy_back.sol\":872:958  function paused() public view virtual returns (bool) {... */\n    tag_37:\n      mload(0x40)\n        /* \"#utility.yul\":572:586   */\n      swap1\n      iszero\n        /* \"#utility.yul\":565:587   */\n      iszero\n        /* \"#utility.yul\":547:588   */\n      dup2\n      mstore\n        /* \"#utility.yul\":535:537   */\n      0x20\n        /* \"#utility.yul\":520:538   */\n      add\n        /* \"contracts/buy_back.sol\":872:958  function paused() public view virtual returns (bool) {... */\n      tag_33\n        /* \"#utility.yul\":407:594   */\n      jump\n        /* \"contracts/buy_back.sol\":3273:3299  uint256 public premiumRate */\n    tag_7:\n      tag_41\n      sload(0x06)\n      dup2\n      jump\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":745:770   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":733:735   */\n      0x20\n        /* \"#utility.yul\":718:736   */\n      add\n        /* \"contracts/buy_back.sol\":3273:3299  uint256 public premiumRate */\n      tag_33\n        /* \"#utility.yul\":599:776   */\n      jump\n        /* \"contracts/buy_back.sol\":5082:5192  function setTargetPrice(uint256 _targetPrice) external onlyOwner {... */\n    tag_8:\n      tag_27\n      tag_46\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"contracts/buy_back.sol\":3407:3429  uint256 public taxRate */\n    tag_9:\n      tag_41\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/buy_back.sol\":5852:7372  function buyback(uint256 roboMoneyAmount) external whenNotPaused nonReentrant {... */\n    tag_10:\n      tag_27\n      tag_52\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/buy_back.sol\":3031:3055  address public roboMoney */\n    tag_11:\n      sload(0x04)\n      tag_31\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/buy_back.sol\":4759:4984  function setPremiumRate(uint256 _premiumRate) external onlyOwner {... */\n    tag_12:\n      tag_27\n      tag_58\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"contracts/buy_back.sol\":9967:10333  function canExecuteBuyback(uint256 roboMoneyAmount) external view returns (bool) {... */\n    tag_13:\n      tag_37\n      tag_61\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"contracts/buy_back.sol\":4435:4498  function pause() external onlyOwner {... */\n    tag_14:\n      tag_27\n      tag_65\n      jump\t// in\n        /* \"contracts/buy_back.sol\":2926:2946  address public owner */\n    tag_15:\n      sload(0x02)\n      tag_31\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/buy_back.sol\":7566:7858  function depositPaymentToken(uint256 amount) external onlyOwner whenNotPaused {... */\n    tag_16:\n      tag_27\n      tag_70\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"contracts/buy_back.sol\":9057:9192  function contractTokenBalance() external view returns (uint256) {... */\n    tag_17:\n      tag_41\n      tag_73\n      jump\t// in\n        /* \"contracts/buy_back.sol\":8114:8321  function setTaxRate(uint256 _newTaxRate) external onlyOwner {... */\n    tag_18:\n      tag_27\n      tag_76\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"contracts/buy_back.sol\":9367:9809  function maxBuyableRoboMoney() external view returns (uint256) {... */\n    tag_19:\n      tag_41\n      tag_79\n      jump\t// in\n        /* \"contracts/buy_back.sol\":7866:8106  function setGasReserve(address _newGasReserve) external onlyOwner {... */\n    tag_20:\n      tag_27\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"contracts/buy_back.sol\":3325:3351  uint256 public targetPrice */\n    tag_21:\n      tag_41\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/buy_back.sol\":3121:3146  address public gasReserve */\n    tag_22:\n      sload(0x05)\n      tag_31\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/buy_back.sol\":5261:5491  function transferOwnership(address newOwner) external onlyOwner {... */\n    tag_23:\n      tag_27\n      tag_92\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"contracts/buy_back.sol\":8542:8959  function withdrawPaymentToken(uint256 amount) external onlyOwner {... */\n    tag_30:\n        /* \"contracts/buy_back.sol\":4293:4298  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/buy_back.sol\":4279:4289  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":4279:4298  msg.sender == owner */\n      eq\n        /* \"contracts/buy_back.sol\":4271:4317  require(msg.sender == owner, \"Not authorized\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/buy_back.sol\":8635:8636  0 */\n      0x00\n        /* \"contracts/buy_back.sol\":8626:8632  amount */\n      dup2\n        /* \"contracts/buy_back.sol\":8626:8636  amount > 0 */\n      gt\n        /* \"contracts/buy_back.sol\":8618:8661  require(amount > 0, \"Withdraw must be > 0\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1617:1619   */\n      0x20\n        /* \"contracts/buy_back.sol\":8618:8661  require(amount > 0, \"Withdraw must be > 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1599:1620   */\n      mstore\n        /* \"#utility.yul\":1656:1658   */\n      0x14\n        /* \"#utility.yul\":1636:1654   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1629:1659   */\n      mstore\n      shl(0x64, 0x05769746864726177206d757374206265203e203)\n        /* \"#utility.yul\":1675:1693   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1668:1718   */\n      mstore\n        /* \"#utility.yul\":1735:1753   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":8618:8661  require(amount > 0, \"Withdraw must be > 0\") */\n      tag_96\n        /* \"#utility.yul\":1415:1759   */\n      jump\n        /* \"contracts/buy_back.sol\":8618:8661  require(amount > 0, \"Withdraw must be > 0\") */\n    tag_99:\n        /* \"contracts/buy_back.sol\":8704:8716  paymentToken */\n      sload(0x03)\n        /* \"contracts/buy_back.sol\":8697:8742  IERC20(paymentToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/buy_back.sol\":8736:8740  this */\n      address\n        /* \"contracts/buy_back.sol\":8697:8742  IERC20(paymentToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"contracts/buy_back.sol\":8672:8694  uint256 currentBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":8704:8716  paymentToken */\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":8697:8727  IERC20(paymentToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/buy_back.sol\":8697:8742  IERC20(paymentToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"contracts/buy_back.sol\":8672:8742  uint256 currentBalance = IERC20(paymentToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":8771:8785  currentBalance */\n      dup1\n        /* \"contracts/buy_back.sol\":8761:8767  amount */\n      dup3\n        /* \"contracts/buy_back.sol\":8761:8785  amount <= currentBalance */\n      gt\n      iszero\n        /* \"contracts/buy_back.sol\":8753:8819  require(amount <= currentBalance, \"Not enough tokens in contract\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2155:2157   */\n      0x20\n        /* \"contracts/buy_back.sol\":8753:8819  require(amount <= currentBalance, \"Not enough tokens in contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2137:2158   */\n      mstore\n        /* \"#utility.yul\":2194:2196   */\n      0x1d\n        /* \"#utility.yul\":2174:2192   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2167:2197   */\n      mstore\n        /* \"#utility.yul\":2233:2264   */\n      0x4e6f7420656e6f75676820746f6b656e7320696e20636f6e7472616374000000\n        /* \"#utility.yul\":2213:2231   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2206:2265   */\n      mstore\n        /* \"#utility.yul\":2282:2300   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":8753:8819  require(amount <= currentBalance, \"Not enough tokens in contract\") */\n      tag_96\n        /* \"#utility.yul\":1953:2306   */\n      jump\n        /* \"contracts/buy_back.sol\":8753:8819  require(amount <= currentBalance, \"Not enough tokens in contract\") */\n    tag_107:\n        /* \"contracts/buy_back.sol\":8852:8864  paymentToken */\n      sload(0x03)\n        /* \"contracts/buy_back.sol\":8875:8880  owner */\n      sload(0x02)\n        /* \"contracts/buy_back.sol\":8845:8889  IERC20(paymentToken).transfer(owner, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":8875:8880  owner */\n      swap2\n      dup3\n      and\n        /* \"contracts/buy_back.sol\":8845:8889  IERC20(paymentToken).transfer(owner, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2485:2536   */\n      mstore\n        /* \"#utility.yul\":2552:2570   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2545:2579   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/buy_back.sol\":8830:8842  bool success */\n      0x00\n      swap3\n        /* \"contracts/buy_back.sol\":8852:8864  paymentToken */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":8845:8874  IERC20(paymentToken).transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2458:2476   */\n      0x44\n      add\n        /* \"contracts/buy_back.sol\":8845:8889  IERC20(paymentToken).transfer(owner, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_113\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"contracts/buy_back.sol\":8830:8889  bool success = IERC20(paymentToken).transfer(owner, amount) */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":8908:8915  success */\n      dup1\n        /* \"contracts/buy_back.sol\":8900:8951  require(success, \"Payment token withdrawal failed\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3074:3076   */\n      0x20\n        /* \"contracts/buy_back.sol\":8900:8951  require(success, \"Payment token withdrawal failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3056:3077   */\n      mstore\n        /* \"#utility.yul\":3113:3115   */\n      0x1f\n        /* \"#utility.yul\":3093:3111   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3086:3116   */\n      mstore\n        /* \"#utility.yul\":3152:3185   */\n      0x5061796d656e7420746f6b656e207769746864726177616c206661696c656400\n        /* \"#utility.yul\":3132:3150   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3125:3186   */\n      mstore\n        /* \"#utility.yul\":3203:3221   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":8900:8951  require(success, \"Payment token withdrawal failed\") */\n      tag_96\n        /* \"#utility.yul\":2872:3227   */\n      jump\n        /* \"contracts/buy_back.sol\":8900:8951  require(success, \"Payment token withdrawal failed\") */\n    tag_116:\n        /* \"contracts/buy_back.sol\":8607:8959  {... */\n      pop\n      pop\n        /* \"contracts/buy_back.sol\":8542:8959  function withdrawPaymentToken(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/buy_back.sol\":4600:4667  function unpause() external onlyOwner {... */\n    tag_36:\n        /* \"contracts/buy_back.sol\":4293:4298  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/buy_back.sol\":4279:4289  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":4279:4298  msg.sender == owner */\n      eq\n        /* \"contracts/buy_back.sol\":4271:4317  require(msg.sender == owner, \"Not authorized\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_120:\n        /* \"contracts/buy_back.sol\":4649:4659  _unpause() */\n      tag_123\n        /* \"contracts/buy_back.sol\":4649:4657  _unpause */\n      tag_124\n        /* \"contracts/buy_back.sol\":4649:4659  _unpause() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/buy_back.sol\":4600:4667  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/buy_back.sol\":5082:5192  function setTargetPrice(uint256 _targetPrice) external onlyOwner {... */\n    tag_47:\n        /* \"contracts/buy_back.sol\":4293:4298  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/buy_back.sol\":4279:4289  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":4279:4298  msg.sender == owner */\n      eq\n        /* \"contracts/buy_back.sol\":4271:4317  require(msg.sender == owner, \"Not authorized\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_127:\n        /* \"contracts/buy_back.sol\":5158:5169  targetPrice */\n      0x07\n        /* \"contracts/buy_back.sol\":5158:5184  targetPrice = _targetPrice */\n      sstore\n        /* \"contracts/buy_back.sol\":5082:5192  function setTargetPrice(uint256 _targetPrice) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/buy_back.sol\":5852:7372  function buyback(uint256 roboMoneyAmount) external whenNotPaused nonReentrant {... */\n    tag_53:\n        /* \"contracts/buy_back.sol\":919:923  bool */\n      0x00\n        /* \"contracts/buy_back.sol\":943:950  _paused */\n      sload\n      0xff\n      and\n        /* \"contracts/buy_back.sol\":1010:1019  !paused() */\n      iszero\n        /* \"contracts/buy_back.sol\":1002:1040  require(!paused(), \"Pausable: paused\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_134\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_136\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/buy_back.sol\":5967:5968  0 */\n      0x00\n        /* \"contracts/buy_back.sol\":5949:5964  roboMoneyAmount */\n      dup2\n        /* \"contracts/buy_back.sol\":5949:5968  roboMoneyAmount > 0 */\n      gt\n        /* \"contracts/buy_back.sol\":5941:5995  require(roboMoneyAmount > 0, \"Must deposit RoboMoney\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3779:3781   */\n      0x20\n        /* \"contracts/buy_back.sol\":5941:5995  require(roboMoneyAmount > 0, \"Must deposit RoboMoney\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3761:3782   */\n      mstore\n        /* \"#utility.yul\":3818:3820   */\n      0x16\n        /* \"#utility.yul\":3798:3816   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3791:3821   */\n      mstore\n      shl(0x50, 0x4d757374206465706f73697420526f626f4d6f6e6579)\n        /* \"#utility.yul\":3837:3855   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3830:3882   */\n      mstore\n        /* \"#utility.yul\":3899:3917   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":5941:5995  require(roboMoneyAmount > 0, \"Must deposit RoboMoney\") */\n      tag_96\n        /* \"#utility.yul\":3577:3923   */\n      jump\n        /* \"contracts/buy_back.sol\":5941:5995  require(roboMoneyAmount > 0, \"Must deposit RoboMoney\") */\n    tag_139:\n        /* \"contracts/buy_back.sol\":6079:6088  roboMoney */\n      0x04\n      dup1\n      sload\n        /* \"contracts/buy_back.sol\":6068:6126  IRoboMoney(roboMoney).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/buy_back.sol\":6100:6110  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":6068:6126  IRoboMoney(roboMoney).allowance(msg.sender, address(this)) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":4102:4153   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"contracts/buy_back.sol\":6120:6124  this */\n      address\n        /* \"#utility.yul\":4169:4187   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":4162:4222   */\n      mstore\n        /* \"contracts/buy_back.sol\":6050:6065  uint256 allowed */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":6079:6088  roboMoney */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":6068:6099  IRoboMoney(roboMoney).allowance */\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":4075:4093   */\n      0x44\n      add\n        /* \"contracts/buy_back.sol\":6068:6126  IRoboMoney(roboMoney).allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_146:\n        /* \"contracts/buy_back.sol\":6050:6126  uint256 allowed = IRoboMoney(roboMoney).allowance(msg.sender, address(this)) */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":6156:6171  roboMoneyAmount */\n      dup2\n        /* \"contracts/buy_back.sol\":6145:6152  allowed */\n      dup2\n        /* \"contracts/buy_back.sol\":6145:6171  allowed >= roboMoneyAmount */\n      lt\n      iszero\n        /* \"contracts/buy_back.sol\":6137:6208  require(allowed >= roboMoneyAmount, \"Insufficient RoboMoney allowance\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4435:4437   */\n      0x20\n        /* \"contracts/buy_back.sol\":6137:6208  require(allowed >= roboMoneyAmount, \"Insufficient RoboMoney allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4417:4438   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4454:4472   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4447:4477   */\n      mstore\n        /* \"#utility.yul\":4513:4547   */\n      0x496e73756666696369656e7420526f626f4d6f6e657920616c6c6f77616e6365\n        /* \"#utility.yul\":4493:4511   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4486:4548   */\n      mstore\n        /* \"#utility.yul\":4565:4583   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":6137:6208  require(allowed >= roboMoneyAmount, \"Insufficient RoboMoney allowance\") */\n      tag_96\n        /* \"#utility.yul\":4233:4589   */\n      jump\n        /* \"contracts/buy_back.sol\":6137:6208  require(allowed >= roboMoneyAmount, \"Insufficient RoboMoney allowance\") */\n    tag_147:\n        /* \"contracts/buy_back.sol\":6281:6290  roboMoney */\n      sload(0x04)\n        /* \"contracts/buy_back.sol\":6274:6352  IERC20(roboMoney).safeTransferFrom(msg.sender, address(this), roboMoneyAmount) */\n      tag_150\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":6281:6290  roboMoney */\n      and\n        /* \"contracts/buy_back.sol\":6309:6319  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":6329:6333  this */\n      address\n        /* \"contracts/buy_back.sol\":6336:6351  roboMoneyAmount */\n      dup6\n        /* \"contracts/buy_back.sol\":6274:6308  IERC20(roboMoney).safeTransferFrom */\n      tag_151\n        /* \"contracts/buy_back.sol\":6274:6352  IERC20(roboMoney).safeTransferFrom(msg.sender, address(this), roboMoneyAmount) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/buy_back.sol\":6503:6523  uint256 premiumPrice */\n      0x00\n        /* \"contracts/buy_back.sol\":6564:6567  100 */\n      0x64\n        /* \"contracts/buy_back.sol\":6548:6559  premiumRate */\n      sload(0x06)\n        /* \"contracts/buy_back.sol\":6542:6545  100 */\n      0x64\n        /* \"contracts/buy_back.sol\":6542:6559  100 + premiumRate */\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"contracts/buy_back.sol\":6527:6538  targetPrice */\n      sload(0x07)\n        /* \"contracts/buy_back.sol\":6527:6560  targetPrice * (100 + premiumRate) */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"contracts/buy_back.sol\":6526:6567  (targetPrice * (100 + premiumRate)) / 100 */\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"contracts/buy_back.sol\":6503:6567  uint256 premiumPrice = (targetPrice * (100 + premiumRate)) / 100 */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":6578:6597  uint256 tokenAmount */\n      0x00\n        /* \"contracts/buy_back.sol\":6635:6639  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/buy_back.sol\":6601:6631  roboMoneyAmount * premiumPrice */\n      tag_158\n        /* \"contracts/buy_back.sol\":6503:6567  uint256 premiumPrice = (targetPrice * (100 + premiumRate)) / 100 */\n      dup4\n        /* \"contracts/buy_back.sol\":6601:6616  roboMoneyAmount */\n      dup7\n        /* \"contracts/buy_back.sol\":6601:6631  roboMoneyAmount * premiumPrice */\n      tag_155\n      jump\t// in\n    tag_158:\n        /* \"contracts/buy_back.sol\":6600:6639  (roboMoneyAmount * premiumPrice) / 1e18 */\n      tag_159\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_159:\n        /* \"contracts/buy_back.sol\":6740:6752  paymentToken */\n      sload(0x03)\n        /* \"contracts/buy_back.sol\":6733:6778  IERC20(paymentToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/buy_back.sol\":6772:6776  this */\n      address\n        /* \"contracts/buy_back.sol\":6733:6778  IERC20(paymentToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"contracts/buy_back.sol\":6578:6639  uint256 tokenAmount = (roboMoneyAmount * premiumPrice) / 1e18 */\n      swap2\n      swap3\n      pop\n        /* \"contracts/buy_back.sol\":6708:6730  uint256 currentBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":6740:6752  paymentToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":6733:6763  IERC20(paymentToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/buy_back.sol\":6733:6778  IERC20(paymentToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_163:\n        /* \"contracts/buy_back.sol\":6708:6778  uint256 currentBalance = IERC20(paymentToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":6815:6826  tokenAmount */\n      dup2\n        /* \"contracts/buy_back.sol\":6797:6811  currentBalance */\n      dup2\n        /* \"contracts/buy_back.sol\":6797:6826  currentBalance >= tokenAmount */\n      lt\n      iszero\n        /* \"contracts/buy_back.sol\":6789:6866  require(currentBalance >= tokenAmount, \"Not enough paymentToken in contract\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5453:5455   */\n      0x20\n        /* \"contracts/buy_back.sol\":6789:6866  require(currentBalance >= tokenAmount, \"Not enough paymentToken in contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5435:5456   */\n      mstore\n        /* \"#utility.yul\":5492:5494   */\n      0x23\n        /* \"#utility.yul\":5472:5490   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5465:5495   */\n      mstore\n        /* \"#utility.yul\":5531:5565   */\n      0x4e6f7420656e6f756768207061796d656e74546f6b656e20696e20636f6e7472\n        /* \"#utility.yul\":5511:5529   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5504:5566   */\n      mstore\n      shl(0xea, 0x1858dd)\n        /* \"#utility.yul\":5582:5600   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5575:5608   */\n      mstore\n        /* \"#utility.yul\":5625:5644   */\n      0x84\n      add\n        /* \"contracts/buy_back.sol\":6789:6866  require(currentBalance >= tokenAmount, \"Not enough paymentToken in contract\") */\n      tag_96\n        /* \"#utility.yul\":5251:5650   */\n      jump\n        /* \"contracts/buy_back.sol\":6789:6866  require(currentBalance >= tokenAmount, \"Not enough paymentToken in contract\") */\n    tag_164:\n        /* \"contracts/buy_back.sol\":6921:6938  uint256 taxAmount */\n      0x00\n        /* \"contracts/buy_back.sol\":6967:6972  10000 */\n      0x2710\n        /* \"contracts/buy_back.sol\":6956:6963  taxRate */\n      sload(0x08)\n        /* \"contracts/buy_back.sol\":6942:6953  tokenAmount */\n      dup5\n        /* \"contracts/buy_back.sol\":6942:6963  tokenAmount * taxRate */\n      tag_167\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_167:\n        /* \"contracts/buy_back.sol\":6941:6972  (tokenAmount * taxRate) / 10000 */\n      tag_168\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_168:\n        /* \"contracts/buy_back.sol\":6921:6972  uint256 taxAmount = (tokenAmount * taxRate) / 10000 */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":6983:7001  uint256 userAmount */\n      0x00\n        /* \"contracts/buy_back.sol\":7004:7027  tokenAmount - taxAmount */\n      tag_169\n        /* \"contracts/buy_back.sol\":6921:6972  uint256 taxAmount = (tokenAmount * taxRate) / 10000 */\n      dup3\n        /* \"contracts/buy_back.sol\":7004:7015  tokenAmount */\n      dup6\n        /* \"contracts/buy_back.sol\":7004:7027  tokenAmount - taxAmount */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contracts/buy_back.sol\":7074:7084  gasReserve */\n      sload(0x05)\n        /* \"contracts/buy_back.sol\":7047:7059  paymentToken */\n      sload(0x03)\n        /* \"contracts/buy_back.sol\":6983:7027  uint256 userAmount = tokenAmount - taxAmount */\n      swap2\n      swap3\n      pop\n        /* \"contracts/buy_back.sol\":7040:7096  IERC20(paymentToken).safeTransfer(gasReserve, taxAmount) */\n      tag_171\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":7047:7059  paymentToken */\n      swap1\n      dup2\n      and\n      swap2\n        /* \"contracts/buy_back.sol\":7074:7084  gasReserve */\n      and\n        /* \"contracts/buy_back.sol\":7086:7095  taxAmount */\n      dup5\n        /* \"contracts/buy_back.sol\":7040:7073  IERC20(paymentToken).safeTransfer */\n      tag_172\n        /* \"contracts/buy_back.sol\":7040:7096  IERC20(paymentToken).safeTransfer(gasReserve, taxAmount) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/buy_back.sol\":7114:7126  paymentToken */\n      sload(0x03)\n        /* \"contracts/buy_back.sol\":7107:7164  IERC20(paymentToken).safeTransfer(msg.sender, userAmount) */\n      tag_173\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":7114:7126  paymentToken */\n      and\n        /* \"contracts/buy_back.sol\":7141:7151  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":7153:7163  userAmount */\n      dup4\n        /* \"contracts/buy_back.sol\":7107:7140  IERC20(paymentToken).safeTransfer */\n      tag_172\n        /* \"contracts/buy_back.sol\":7107:7164  IERC20(paymentToken).safeTransfer(msg.sender, userAmount) */\n      jump\t// in\n    tag_173:\n        /* \"contracts/buy_back.sol\":7242:7251  roboMoney */\n      0x04\n      dup1\n      sload\n        /* \"contracts/buy_back.sol\":7231:7289  IRoboMoney(roboMoney).burn(address(this), roboMoneyAmount) */\n      mload(0x40)\n      shl(0xe2, 0x2770a7eb)\n      dup2\n      mstore\n        /* \"contracts/buy_back.sol\":7266:7270  this */\n      address\n        /* \"contracts/buy_back.sol\":7231:7289  IRoboMoney(roboMoney).burn(address(this), roboMoneyAmount) */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":2485:2536   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2552:2570   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2545:2579   */\n      dup10\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":7242:7251  roboMoney */\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":7231:7257  IRoboMoney(roboMoney).burn */\n      0x9dc29fac\n      swap1\n        /* \"#utility.yul\":2458:2476   */\n      0x44\n      add\n        /* \"contracts/buy_back.sol\":7231:7289  IRoboMoney(roboMoney).burn(address(this), roboMoneyAmount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      revert(0x00, 0x00)\n    tag_175:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_177:\n      pop\n      pop\n        /* \"contracts/buy_back.sol\":7307:7364  BuyBackExecuted(msg.sender, roboMoneyAmount, tokenAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5962:5987   */\n      dup11\n      dup2\n      mstore\n        /* \"#utility.yul\":6018:6020   */\n      0x20\n        /* \"#utility.yul\":6003:6021   */\n      dup2\n      add\n        /* \"#utility.yul\":5996:6030   */\n      dup9\n      swap1\n      mstore\n        /* \"contracts/buy_back.sol\":7323:7333  msg.sender */\n      caller\n      swap4\n      pop\n        /* \"contracts/buy_back.sol\":7307:7364  BuyBackExecuted(msg.sender, roboMoneyAmount, tokenAmount) */\n      0xcb7f55d0b91628d4520b789339dae4803ab07182ea89d138acbd965dac51dc65\n      swap3\n      pop\n        /* \"#utility.yul\":5935:5953   */\n      add\n        /* \"contracts/buy_back.sol\":7307:7364  BuyBackExecuted(msg.sender, roboMoneyAmount, tokenAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/buy_back.sol\":5930:7372  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_180\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_180:\n        /* \"contracts/buy_back.sol\":5852:7372  function buyback(uint256 roboMoneyAmount) external whenNotPaused nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"contracts/buy_back.sol\":4759:4984  function setPremiumRate(uint256 _premiumRate) external onlyOwner {... */\n    tag_59:\n        /* \"contracts/buy_back.sol\":4293:4298  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/buy_back.sol\":4279:4289  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":4279:4298  msg.sender == owner */\n      eq\n        /* \"contracts/buy_back.sol\":4271:4317  require(msg.sender == owner, \"Not authorized\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_183:\n        /* \"contracts/buy_back.sol\":4911:4914  100 */\n      0x64\n        /* \"contracts/buy_back.sol\":4895:4907  _premiumRate */\n      dup2\n        /* \"contracts/buy_back.sol\":4895:4914  _premiumRate <= 100 */\n      gt\n      iszero\n        /* \"contracts/buy_back.sol\":4887:4939  require(_premiumRate <= 100, \"Invalid premium rate\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6243:6245   */\n      0x20\n        /* \"contracts/buy_back.sol\":4887:4939  require(_premiumRate <= 100, \"Invalid premium rate\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6225:6246   */\n      mstore\n        /* \"#utility.yul\":6282:6284   */\n      0x14\n        /* \"#utility.yul\":6262:6280   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6255:6285   */\n      mstore\n      shl(0x60, 0x496e76616c6964207072656d69756d2072617465)\n        /* \"#utility.yul\":6301:6319   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6294:6344   */\n      mstore\n        /* \"#utility.yul\":6361:6379   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":4887:4939  require(_premiumRate <= 100, \"Invalid premium rate\") */\n      tag_96\n        /* \"#utility.yul\":6041:6385   */\n      jump\n        /* \"contracts/buy_back.sol\":4887:4939  require(_premiumRate <= 100, \"Invalid premium rate\") */\n    tag_186:\n        /* \"contracts/buy_back.sol\":4950:4961  premiumRate */\n      0x06\n        /* \"contracts/buy_back.sol\":4950:4976  premiumRate = _premiumRate */\n      sstore\n        /* \"contracts/buy_back.sol\":4759:4984  function setPremiumRate(uint256 _premiumRate) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/buy_back.sol\":9967:10333  function canExecuteBuyback(uint256 roboMoneyAmount) external view returns (bool) {... */\n    tag_62:\n        /* \"contracts/buy_back.sol\":10042:10046  bool */\n      0x00\n        /* \"contracts/buy_back.sol\":10059:10079  uint256 premiumPrice */\n      0x00\n        /* \"contracts/buy_back.sol\":10120:10123  100 */\n      0x64\n        /* \"contracts/buy_back.sol\":10104:10115  premiumRate */\n      sload(0x06)\n        /* \"contracts/buy_back.sol\":10098:10101  100 */\n      0x64\n        /* \"contracts/buy_back.sol\":10098:10115  100 + premiumRate */\n      tag_190\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_190:\n        /* \"contracts/buy_back.sol\":10083:10094  targetPrice */\n      sload(0x07)\n        /* \"contracts/buy_back.sol\":10083:10116  targetPrice * (100 + premiumRate) */\n      tag_191\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_191:\n        /* \"contracts/buy_back.sol\":10082:10123  (targetPrice * (100 + premiumRate)) / 100 */\n      tag_192\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_192:\n        /* \"contracts/buy_back.sol\":10059:10123  uint256 premiumPrice = (targetPrice * (100 + premiumRate)) / 100 */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":10134:10153  uint256 tokenAmount */\n      0x00\n        /* \"contracts/buy_back.sol\":10191:10195  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/buy_back.sol\":10157:10187  roboMoneyAmount * premiumPrice */\n      tag_193\n        /* \"contracts/buy_back.sol\":10059:10123  uint256 premiumPrice = (targetPrice * (100 + premiumRate)) / 100 */\n      dup4\n        /* \"contracts/buy_back.sol\":10157:10172  roboMoneyAmount */\n      dup7\n        /* \"contracts/buy_back.sol\":10157:10187  roboMoneyAmount * premiumPrice */\n      tag_155\n      jump\t// in\n    tag_193:\n        /* \"contracts/buy_back.sol\":10156:10195  (roboMoneyAmount * premiumPrice) / 1e18 */\n      tag_194\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_194:\n        /* \"contracts/buy_back.sol\":10238:10250  paymentToken */\n      sload(0x03)\n        /* \"contracts/buy_back.sol\":10231:10276  IERC20(paymentToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/buy_back.sol\":10270:10274  this */\n      address\n        /* \"contracts/buy_back.sol\":10231:10276  IERC20(paymentToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"contracts/buy_back.sol\":10134:10195  uint256 tokenAmount = (roboMoneyAmount * premiumPrice) / 1e18 */\n      swap2\n      swap3\n      pop\n        /* \"contracts/buy_back.sol\":10206:10228  uint256 currentBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":10238:10250  paymentToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":10231:10261  IERC20(paymentToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/buy_back.sol\":10231:10276  IERC20(paymentToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_198:\n        /* \"contracts/buy_back.sol\":10295:10324  currentBalance >= tokenAmount */\n      swap2\n      swap1\n      swap2\n      lt\n      iszero\n      swap5\n        /* \"contracts/buy_back.sol\":9967:10333  function canExecuteBuyback(uint256 roboMoneyAmount) external view returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/buy_back.sol\":4435:4498  function pause() external onlyOwner {... */\n    tag_65:\n        /* \"contracts/buy_back.sol\":4293:4298  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/buy_back.sol\":4279:4289  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":4279:4298  msg.sender == owner */\n      eq\n        /* \"contracts/buy_back.sol\":4271:4317  require(msg.sender == owner, \"Not authorized\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_200:\n        /* \"contracts/buy_back.sol\":4482:4490  _pause() */\n      tag_123\n        /* \"contracts/buy_back.sol\":4482:4488  _pause */\n      tag_204\n        /* \"contracts/buy_back.sol\":4482:4490  _pause() */\n      jump\t// in\n        /* \"contracts/buy_back.sol\":7566:7858  function depositPaymentToken(uint256 amount) external onlyOwner whenNotPaused {... */\n    tag_71:\n        /* \"contracts/buy_back.sol\":4293:4298  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/buy_back.sol\":4279:4289  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":4279:4298  msg.sender == owner */\n      eq\n        /* \"contracts/buy_back.sol\":4271:4317  require(msg.sender == owner, \"Not authorized\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_206:\n        /* \"contracts/buy_back.sol\":919:923  bool */\n      0x00\n        /* \"contracts/buy_back.sol\":943:950  _paused */\n      sload\n      0xff\n      and\n        /* \"contracts/buy_back.sol\":1010:1019  !paused() */\n      iszero\n        /* \"contracts/buy_back.sol\":1002:1040  require(!paused(), \"Pausable: paused\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_134\n      jump\t// in\n    tag_210:\n        /* \"contracts/buy_back.sol\":7672:7673  0 */\n      0x00\n        /* \"contracts/buy_back.sol\":7663:7669  amount */\n      dup2\n        /* \"contracts/buy_back.sol\":7663:7673  amount > 0 */\n      gt\n        /* \"contracts/buy_back.sol\":7655:7697  require(amount > 0, \"Deposit must be > 0\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6592:6594   */\n      0x20\n        /* \"contracts/buy_back.sol\":7655:7697  require(amount > 0, \"Deposit must be > 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6574:6595   */\n      mstore\n        /* \"#utility.yul\":6631:6633   */\n      0x13\n        /* \"#utility.yul\":6611:6629   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6604:6634   */\n      mstore\n      shl(0x6c, 0x04465706f736974206d757374206265203e203)\n        /* \"#utility.yul\":6650:6668   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6643:6692   */\n      mstore\n        /* \"#utility.yul\":6709:6727   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":7655:7697  require(amount > 0, \"Deposit must be > 0\") */\n      tag_96\n        /* \"#utility.yul\":6390:6733   */\n      jump\n        /* \"contracts/buy_back.sol\":7655:7697  require(amount > 0, \"Deposit must be > 0\") */\n    tag_213:\n        /* \"contracts/buy_back.sol\":7730:7742  paymentToken */\n      sload(0x03)\n        /* \"contracts/buy_back.sol\":7723:7791  IERC20(paymentToken).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/buy_back.sol\":7757:7767  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":7723:7791  IERC20(paymentToken).transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6940:6991   */\n      mstore\n        /* \"contracts/buy_back.sol\":7777:7781  this */\n      address\n        /* \"#utility.yul\":7007:7025   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7000:7060   */\n      mstore\n        /* \"#utility.yul\":7076:7094   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7069:7103   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/buy_back.sol\":7708:7720  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":7730:7742  paymentToken */\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":7723:7756  IERC20(paymentToken).transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6913:6931   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":7723:7791  IERC20(paymentToken).transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_219:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_220:\n        /* \"contracts/buy_back.sol\":7708:7791  bool success = IERC20(paymentToken).transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":7810:7817  success */\n      dup1\n        /* \"contracts/buy_back.sol\":7802:7850  require(success, \"Payment token deposit failed\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7316:7318   */\n      0x20\n        /* \"contracts/buy_back.sol\":7802:7850  require(success, \"Payment token deposit failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7298:7319   */\n      mstore\n        /* \"#utility.yul\":7355:7357   */\n      0x1c\n        /* \"#utility.yul\":7335:7353   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7328:7358   */\n      mstore\n        /* \"#utility.yul\":7394:7424   */\n      0x5061796d656e7420746f6b656e206465706f736974206661696c656400000000\n        /* \"#utility.yul\":7374:7392   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7367:7425   */\n      mstore\n        /* \"#utility.yul\":7442:7460   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":7802:7850  require(success, \"Payment token deposit failed\") */\n      tag_96\n        /* \"#utility.yul\":7114:7466   */\n      jump\n        /* \"contracts/buy_back.sol\":7802:7850  require(success, \"Payment token deposit failed\") */\n    tag_221:\n        /* \"contracts/buy_back.sol\":7644:7858  {... */\n      pop\n        /* \"contracts/buy_back.sol\":7566:7858  function depositPaymentToken(uint256 amount) external onlyOwner whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contracts/buy_back.sol\":9057:9192  function contractTokenBalance() external view returns (uint256) {... */\n    tag_73:\n        /* \"contracts/buy_back.sol\":9146:9158  paymentToken */\n      sload(0x03)\n        /* \"contracts/buy_back.sol\":9139:9184  IERC20(paymentToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/buy_back.sol\":9178:9182  this */\n      address\n        /* \"contracts/buy_back.sol\":9139:9184  IERC20(paymentToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"contracts/buy_back.sol\":9112:9119  uint256 */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":9146:9158  paymentToken */\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":9139:9169  IERC20(paymentToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/buy_back.sol\":9139:9184  IERC20(paymentToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_228:\n        /* \"contracts/buy_back.sol\":9132:9184  return IERC20(paymentToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":9057:9192  function contractTokenBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/buy_back.sol\":8114:8321  function setTaxRate(uint256 _newTaxRate) external onlyOwner {... */\n    tag_77:\n        /* \"contracts/buy_back.sol\":4293:4298  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/buy_back.sol\":4279:4289  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":4279:4298  msg.sender == owner */\n      eq\n        /* \"contracts/buy_back.sol\":4271:4317  require(msg.sender == owner, \"Not authorized\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_230:\n        /* \"contracts/buy_back.sol\":8208:8212  1000 */\n      0x03e8\n        /* \"contracts/buy_back.sol\":8193:8204  _newTaxRate */\n      dup2\n        /* \"contracts/buy_back.sol\":8193:8212  _newTaxRate <= 1000 */\n      gt\n      iszero\n        /* \"contracts/buy_back.sol\":8185:8229  require(_newTaxRate <= 1000, \"Tax too high\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7673:7675   */\n      0x20\n        /* \"contracts/buy_back.sol\":8185:8229  require(_newTaxRate <= 1000, \"Tax too high\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7655:7676   */\n      mstore\n        /* \"#utility.yul\":7712:7714   */\n      0x0c\n        /* \"#utility.yul\":7692:7710   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7685:7715   */\n      mstore\n      shl(0xa3, 0x0a8c2f040e8dede40d0d2ced)\n        /* \"#utility.yul\":7731:7749   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7724:7766   */\n      mstore\n        /* \"#utility.yul\":7783:7801   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":8185:8229  require(_newTaxRate <= 1000, \"Tax too high\") */\n      tag_96\n        /* \"#utility.yul\":7471:7807   */\n      jump\n        /* \"contracts/buy_back.sol\":8185:8229  require(_newTaxRate <= 1000, \"Tax too high\") */\n    tag_233:\n        /* \"contracts/buy_back.sol\":8260:8267  taxRate */\n      sload(0x08)\n        /* \"contracts/buy_back.sol\":8245:8281  TaxRateUpdated(taxRate, _newTaxRate) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5962:5987   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":6018:6020   */\n      0x20\n        /* \"#utility.yul\":6003:6021   */\n      dup3\n      add\n        /* \"#utility.yul\":5996:6030   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/buy_back.sol\":8245:8281  TaxRateUpdated(taxRate, _newTaxRate) */\n      0xa8ee157eb2a9aa895d74df4d2d3bc0ad165ff3162f8ec46a4ecf602dd5c48fda\n      swap2\n        /* \"#utility.yul\":5935:5953   */\n      add\n        /* \"contracts/buy_back.sol\":8245:8281  TaxRateUpdated(taxRate, _newTaxRate) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/buy_back.sol\":8292:8299  taxRate */\n      0x08\n        /* \"contracts/buy_back.sol\":8292:8313  taxRate = _newTaxRate */\n      sstore\n        /* \"contracts/buy_back.sol\":8114:8321  function setTaxRate(uint256 _newTaxRate) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/buy_back.sol\":9367:9809  function maxBuyableRoboMoney() external view returns (uint256) {... */\n    tag_79:\n        /* \"contracts/buy_back.sol\":9473:9485  paymentToken */\n      sload(0x03)\n        /* \"contracts/buy_back.sol\":9466:9511  IERC20(paymentToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/buy_back.sol\":9505:9509  this */\n      address\n        /* \"contracts/buy_back.sol\":9466:9511  IERC20(paymentToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"contracts/buy_back.sol\":9421:9428  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":9473:9485  paymentToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":9466:9496  IERC20(paymentToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"contracts/buy_back.sol\":9466:9511  IERC20(paymentToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_241:\n        /* \"contracts/buy_back.sol\":9441:9511  uint256 currentBalance = IERC20(paymentToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":9522:9542  uint256 premiumPrice */\n      0x00\n        /* \"contracts/buy_back.sol\":9583:9586  100 */\n      0x64\n        /* \"contracts/buy_back.sol\":9567:9578  premiumRate */\n      sload(0x06)\n        /* \"contracts/buy_back.sol\":9561:9564  100 */\n      0x64\n        /* \"contracts/buy_back.sol\":9561:9578  100 + premiumRate */\n      tag_242\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_242:\n        /* \"contracts/buy_back.sol\":9546:9557  targetPrice */\n      sload(0x07)\n        /* \"contracts/buy_back.sol\":9546:9579  targetPrice * (100 + premiumRate) */\n      tag_243\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_243:\n        /* \"contracts/buy_back.sol\":9545:9586  (targetPrice * (100 + premiumRate)) / 100 */\n      tag_244\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_244:\n        /* \"contracts/buy_back.sol\":9522:9586  uint256 premiumPrice = (targetPrice * (100 + premiumRate)) / 100 */\n      swap1\n      pop\n        /* \"contracts/buy_back.sol\":9603:9615  premiumPrice */\n      dup1\n        /* \"contracts/buy_back.sol\":9619:9620  0 */\n      0x00\n        /* \"contracts/buy_back.sol\":9603:9620  premiumPrice == 0 */\n      sub\n        /* \"contracts/buy_back.sol\":9599:9657  if (premiumPrice == 0) {... */\n      tag_245\n      jumpi\n        /* \"contracts/buy_back.sol\":9644:9645  0 */\n      0x00\n        /* \"contracts/buy_back.sol\":9637:9645  return 0 */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/buy_back.sol\":9367:9809  function maxBuyableRoboMoney() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/buy_back.sol\":9599:9657  if (premiumPrice == 0) {... */\n    tag_245:\n        /* \"contracts/buy_back.sol\":9789:9801  premiumPrice */\n      dup1\n        /* \"contracts/buy_back.sol\":9764:9785  currentBalance * 1e18 */\n      tag_246\n        /* \"contracts/buy_back.sol\":9764:9778  currentBalance */\n      dup4\n        /* \"contracts/buy_back.sol\":9781:9785  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/buy_back.sol\":9764:9785  currentBalance * 1e18 */\n      tag_155\n      jump\t// in\n    tag_246:\n        /* \"contracts/buy_back.sol\":9763:9801  (currentBalance * 1e18) / premiumPrice */\n      tag_247\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_247:\n        /* \"contracts/buy_back.sol\":9756:9801  return (currentBalance * 1e18) / premiumPrice */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/buy_back.sol\":9367:9809  function maxBuyableRoboMoney() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/buy_back.sol\":7866:8106  function setGasReserve(address _newGasReserve) external onlyOwner {... */\n    tag_84:\n        /* \"contracts/buy_back.sol\":4293:4298  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/buy_back.sol\":4279:4289  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":4279:4298  msg.sender == owner */\n      eq\n        /* \"contracts/buy_back.sol\":4271:4317  require(msg.sender == owner, \"Not authorized\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":7951:7979  _newGasReserve != address(0) */\n      dup2\n      and\n        /* \"contracts/buy_back.sol\":7943:7999  require(_newGasReserve != address(0), \"Invalid address\") */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8014:8016   */\n      0x20\n        /* \"contracts/buy_back.sol\":7943:7999  require(_newGasReserve != address(0), \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7996:8017   */\n      mstore\n        /* \"#utility.yul\":8053:8055   */\n      0x0f\n        /* \"#utility.yul\":8033:8051   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8026:8056   */\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n        /* \"#utility.yul\":8072:8090   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8065:8110   */\n      mstore\n        /* \"#utility.yul\":8127:8145   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":7943:7999  require(_newGasReserve != address(0), \"Invalid address\") */\n      tag_96\n        /* \"#utility.yul\":7812:8151   */\n      jump\n        /* \"contracts/buy_back.sol\":7943:7999  require(_newGasReserve != address(0), \"Invalid address\") */\n    tag_252:\n        /* \"contracts/buy_back.sol\":8033:8043  gasReserve */\n      sload(0x05)\n        /* \"contracts/buy_back.sol\":8015:8060  GasReserveUpdated(gasReserve, _newGasReserve) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"contracts/buy_back.sol\":8033:8043  gasReserve */\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":8015:8060  GasReserveUpdated(gasReserve, _newGasReserve) */\n      0xb4281bb17cdc594e3cf6d419da95f70a6b02d856b26438d381ee1246a8e89f12\n      swap1\n        /* \"contracts/buy_back.sol\":8033:8043  gasReserve */\n      0x00\n      swap1\n        /* \"contracts/buy_back.sol\":8015:8060  GasReserveUpdated(gasReserve, _newGasReserve) */\n      log3\n        /* \"contracts/buy_back.sol\":8071:8081  gasReserve */\n      0x05\n        /* \"contracts/buy_back.sol\":8071:8098  gasReserve = _newGasReserve */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/buy_back.sol\":7866:8106  function setGasReserve(address _newGasReserve) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/buy_back.sol\":5261:5491  function transferOwnership(address newOwner) external onlyOwner {... */\n    tag_93:\n        /* \"contracts/buy_back.sol\":4293:4298  owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"contracts/buy_back.sol\":4279:4289  msg.sender */\n      caller\n        /* \"contracts/buy_back.sol\":4279:4298  msg.sender == owner */\n      eq\n        /* \"contracts/buy_back.sol\":4271:4317  require(msg.sender == owner, \"Not authorized\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/buy_back.sol\":5344:5366  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/buy_back.sol\":5336:5403  require(newOwner != address(0), \"New owner cannot be zero address\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8358:8360   */\n      0x20\n        /* \"contracts/buy_back.sol\":5336:5403  require(newOwner != address(0), \"New owner cannot be zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8340:8361   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":8377:8395   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8370:8400   */\n      mstore\n        /* \"#utility.yul\":8436:8470   */\n      0x4e6577206f776e65722063616e6e6f74206265207a65726f2061646472657373\n        /* \"#utility.yul\":8416:8434   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8409:8471   */\n      mstore\n        /* \"#utility.yul\":8488:8506   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":5336:5403  require(newOwner != address(0), \"New owner cannot be zero address\") */\n      tag_96\n        /* \"#utility.yul\":8156:8512   */\n      jump\n        /* \"contracts/buy_back.sol\":5336:5403  require(newOwner != address(0), \"New owner cannot be zero address\") */\n    tag_259:\n        /* \"contracts/buy_back.sol\":5440:5445  owner */\n      sload(0x02)\n        /* \"contracts/buy_back.sol\":5419:5456  OwnershipTransferred(owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup5\n      and\n      swap3\n        /* \"contracts/buy_back.sol\":5440:5445  owner */\n      and\n      swap1\n        /* \"contracts/buy_back.sol\":5419:5456  OwnershipTransferred(owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/buy_back.sol\":5440:5445  owner */\n      0x00\n      swap1\n        /* \"contracts/buy_back.sol\":5419:5456  OwnershipTransferred(owner, newOwner) */\n      log3\n        /* \"contracts/buy_back.sol\":5467:5472  owner */\n      0x02\n        /* \"contracts/buy_back.sol\":5467:5483  owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/buy_back.sol\":5261:5491  function transferOwnership(address newOwner) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/buy_back.sol\":1294:1412  function _unpause() internal virtual whenPaused {... */\n    tag_124:\n        /* \"contracts/buy_back.sol\":919:923  bool */\n      0x00\n        /* \"contracts/buy_back.sol\":943:950  _paused */\n      sload\n      0xff\n      and\n        /* \"contracts/buy_back.sol\":1101:1142  require(paused(), \"Pausable: not paused\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8719:8721   */\n      0x20\n        /* \"contracts/buy_back.sol\":1101:1142  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8701:8722   */\n      mstore\n        /* \"#utility.yul\":8758:8760   */\n      0x14\n        /* \"#utility.yul\":8738:8756   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8731:8761   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":8777:8795   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8770:8820   */\n      mstore\n        /* \"#utility.yul\":8837:8855   */\n      0x64\n      add\n        /* \"contracts/buy_back.sol\":1101:1142  require(paused(), \"Pausable: not paused\") */\n      tag_96\n        /* \"#utility.yul\":8517:8861   */\n      jump\n        /* \"contracts/buy_back.sol\":1101:1142  require(paused(), \"Pausable: not paused\") */\n    tag_264:\n        /* \"contracts/buy_back.sol\":1363:1368  false */\n      0x00\n        /* \"contracts/buy_back.sol\":1353:1368  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/buy_back.sol\":1384:1404  Unpaused(msg.sender) */\n      mload(0x40)\n        /* \"contracts/buy_back.sol\":1393:1403  msg.sender */\n      caller\n        /* \"#utility.yul\":345:396   */\n      dup2\n      mstore\n        /* \"contracts/buy_back.sol\":1384:1404  Unpaused(msg.sender) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n      swap1\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/buy_back.sol\":1384:1404  Unpaused(msg.sender) */\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/buy_back.sol\":1294:1412  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9068:9070   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9050:9071   */\n      mstore\n        /* \"#utility.yul\":9107:9109   */\n      0x1f\n        /* \"#utility.yul\":9087:9105   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9080:9110   */\n      mstore\n        /* \"#utility.yul\":9146:9179   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":9126:9144   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9119:9180   */\n      mstore\n        /* \"#utility.yul\":9197:9215   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_96\n        /* \"#utility.yul\":8866:9221   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_270:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6958:6990   */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6940:6991   */\n      mstore\n        /* \"#utility.yul\":7027:7059   */\n      dup4\n      dup2\n      and\n        /* \"#utility.yul\":7007:7025   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":7000:7060   */\n      mstore\n        /* \"#utility.yul\":7076:7094   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7069:7103   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_274\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6913:6931   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n    tag_275:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2503:2535   */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2485:2536   */\n      mstore\n        /* \"#utility.yul\":2552:2570   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2545:2579   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_116\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      dup3\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2458:2476   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      tag_275\n        /* \"#utility.yul\":2311:2585   */\n      jump\n        /* \"contracts/buy_back.sol\":1170:1286  function _pause() internal virtual whenNotPaused {... */\n    tag_204:\n        /* \"contracts/buy_back.sol\":919:923  bool */\n      0x00\n        /* \"contracts/buy_back.sol\":943:950  _paused */\n      sload\n      0xff\n      and\n        /* \"contracts/buy_back.sol\":1010:1019  !paused() */\n      iszero\n        /* \"contracts/buy_back.sol\":1002:1040  require(!paused(), \"Pausable: paused\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_134\n      jump\t// in\n    tag_283:\n        /* \"contracts/buy_back.sol\":1230:1237  _paused */\n      0x00\n        /* \"contracts/buy_back.sol\":1230:1244  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/buy_back.sol\":1240:1244  true */\n      0x01\n        /* \"contracts/buy_back.sol\":1230:1244  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/buy_back.sol\":1260:1278  Paused(msg.sender) */\n      mload(0x40)\n        /* \"contracts/buy_back.sol\":1267:1277  msg.sender */\n      caller\n        /* \"#utility.yul\":345:396   */\n      dup2\n      mstore\n        /* \"contracts/buy_back.sol\":1260:1278  Paused(msg.sender) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n      swap1\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"contracts/buy_back.sol\":1260:1278  Paused(msg.sender) */\n      tag_268\n        /* \"#utility.yul\":199:402   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_288:\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_290)\n    tag_289:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_290:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":363:395   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":345:396   */\n      mstore\n        /* \"#utility.yul\":318:336   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      tag_96\n        /* \"#utility.yul\":199:402   */\n      jump\n        /* \"#utility.yul\":14:194   */\n    tag_29:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      0x00\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_296:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1067   */\n    tag_83:\n        /* \"#utility.yul\":840:846   */\n      0x00\n        /* \"#utility.yul\":893:895   */\n      0x20\n        /* \"#utility.yul\":881:890   */\n      dup3\n        /* \"#utility.yul\":872:879   */\n      dup5\n        /* \"#utility.yul\":868:891   */\n      sub\n        /* \"#utility.yul\":864:896   */\n      slt\n        /* \"#utility.yul\":861:913   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":909:910   */\n      0x00\n        /* \"#utility.yul\":906:907   */\n      0x00\n        /* \"#utility.yul\":899:911   */\n      revert\n        /* \"#utility.yul\":861:913   */\n    tag_301:\n        /* \"#utility.yul\":935:958   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":987:1018   */\n      dup2\n      and\n        /* \"#utility.yul\":977:1019   */\n      dup2\n      eq\n        /* \"#utility.yul\":967:1037   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1030:1031   */\n      0x00\n        /* \"#utility.yul\":1023:1035   */\n      revert\n        /* \"#utility.yul\":967:1037   */\n    tag_302:\n        /* \"#utility.yul\":1056:1061   */\n      swap4\n        /* \"#utility.yul\":781:1067   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1072:1410   */\n    tag_97:\n        /* \"#utility.yul\":1274:1276   */\n      0x20\n        /* \"#utility.yul\":1256:1277   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1313:1315   */\n      0x0e\n        /* \"#utility.yul\":1293:1311   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1286:1316   */\n      mstore\n      shl(0x92, 0x139bdd08185d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":1347:1349   */\n      0x40\n        /* \"#utility.yul\":1332:1350   */\n      dup3\n      add\n        /* \"#utility.yul\":1325:1369   */\n      mstore\n        /* \"#utility.yul\":1401:1403   */\n      0x60\n        /* \"#utility.yul\":1386:1404   */\n      add\n      swap1\n        /* \"#utility.yul\":1072:1410   */\n      jump\t// out\n        /* \"#utility.yul\":1764:1948   */\n    tag_106:\n        /* \"#utility.yul\":1834:1840   */\n      0x00\n        /* \"#utility.yul\":1887:1889   */\n      0x20\n        /* \"#utility.yul\":1875:1884   */\n      dup3\n        /* \"#utility.yul\":1866:1873   */\n      dup5\n        /* \"#utility.yul\":1862:1885   */\n      sub\n        /* \"#utility.yul\":1858:1890   */\n      slt\n        /* \"#utility.yul\":1855:1907   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":1903:1904   */\n      0x00\n        /* \"#utility.yul\":1900:1901   */\n      0x00\n        /* \"#utility.yul\":1893:1905   */\n      revert\n        /* \"#utility.yul\":1855:1907   */\n    tag_306:\n      pop\n        /* \"#utility.yul\":1926:1942   */\n      mload\n      swap2\n        /* \"#utility.yul\":1764:1948   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2590:2867   */\n    tag_115:\n        /* \"#utility.yul\":2657:2663   */\n      0x00\n        /* \"#utility.yul\":2710:2712   */\n      0x20\n        /* \"#utility.yul\":2698:2707   */\n      dup3\n        /* \"#utility.yul\":2689:2696   */\n      dup5\n        /* \"#utility.yul\":2685:2708   */\n      sub\n        /* \"#utility.yul\":2681:2713   */\n      slt\n        /* \"#utility.yul\":2678:2730   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":2726:2727   */\n      0x00\n        /* \"#utility.yul\":2723:2724   */\n      0x00\n        /* \"#utility.yul\":2716:2728   */\n      revert\n        /* \"#utility.yul\":2678:2730   */\n    tag_310:\n        /* \"#utility.yul\":2758:2767   */\n      dup2\n        /* \"#utility.yul\":2752:2768   */\n      mload\n        /* \"#utility.yul\":2811:2816   */\n      dup1\n        /* \"#utility.yul\":2804:2817   */\n      iszero\n        /* \"#utility.yul\":2797:2818   */\n      iszero\n        /* \"#utility.yul\":2790:2795   */\n      dup2\n        /* \"#utility.yul\":2787:2819   */\n      eq\n        /* \"#utility.yul\":2777:2837   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":2833:2834   */\n      0x00\n        /* \"#utility.yul\":2830:2831   */\n      0x00\n        /* \"#utility.yul\":2823:2835   */\n      revert\n        /* \"#utility.yul\":3232:3572   */\n    tag_134:\n        /* \"#utility.yul\":3434:3436   */\n      0x20\n        /* \"#utility.yul\":3416:3437   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3473:3475   */\n      0x10\n        /* \"#utility.yul\":3453:3471   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3446:3476   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":3507:3509   */\n      0x40\n        /* \"#utility.yul\":3492:3510   */\n      dup3\n      add\n        /* \"#utility.yul\":3485:3531   */\n      mstore\n        /* \"#utility.yul\":3563:3565   */\n      0x60\n        /* \"#utility.yul\":3548:3566   */\n      add\n      swap1\n        /* \"#utility.yul\":3232:3572   */\n      jump\t// out\n        /* \"#utility.yul\":4594:4721   */\n    tag_293:\n        /* \"#utility.yul\":4655:4665   */\n      0x4e487b71\n        /* \"#utility.yul\":4650:4653   */\n      0xe0\n        /* \"#utility.yul\":4646:4666   */\n      shl\n        /* \"#utility.yul\":4643:4644   */\n      0x00\n        /* \"#utility.yul\":4636:4667   */\n      mstore\n        /* \"#utility.yul\":4686:4690   */\n      0x11\n        /* \"#utility.yul\":4683:4684   */\n      0x04\n        /* \"#utility.yul\":4676:4691   */\n      mstore\n        /* \"#utility.yul\":4710:4714   */\n      0x24\n        /* \"#utility.yul\":4707:4708   */\n      0x00\n        /* \"#utility.yul\":4700:4715   */\n      revert\n        /* \"#utility.yul\":4726:4851   */\n    tag_153:\n        /* \"#utility.yul\":4791:4800   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4812:4822   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4809:4845   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4825:4843   */\n      tag_320\n      tag_293\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4726:4851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4856:5024   */\n    tag_155:\n        /* \"#utility.yul\":4929:4938   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4960:4969   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4977:4992   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4971:4993   */\n      dup5\n      eq\n        /* \"#utility.yul\":4957:4994   */\n      or\n        /* \"#utility.yul\":4947:5018   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":4998:5016   */\n      tag_320\n      tag_293\n      jump\t// in\n        /* \"#utility.yul\":5029:5246   */\n    tag_157:\n        /* \"#utility.yul\":5069:5070   */\n      0x00\n        /* \"#utility.yul\":5095:5096   */\n      dup3\n        /* \"#utility.yul\":5085:5217   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":5139:5149   */\n      0x4e487b71\n        /* \"#utility.yul\":5134:5137   */\n      0xe0\n        /* \"#utility.yul\":5130:5150   */\n      shl\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5120:5151   */\n      mstore\n        /* \"#utility.yul\":5174:5178   */\n      0x12\n        /* \"#utility.yul\":5171:5172   */\n      0x04\n        /* \"#utility.yul\":5164:5179   */\n      mstore\n        /* \"#utility.yul\":5202:5206   */\n      0x24\n        /* \"#utility.yul\":5199:5200   */\n      0x00\n        /* \"#utility.yul\":5192:5207   */\n      revert\n        /* \"#utility.yul\":5085:5217   */\n    tag_325:\n      pop\n        /* \"#utility.yul\":5231:5240   */\n      div\n      swap1\n        /* \"#utility.yul\":5029:5246   */\n      jump\t// out\n        /* \"#utility.yul\":5655:5783   */\n    tag_170:\n        /* \"#utility.yul\":5722:5731   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5743:5754   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5740:5777   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":5757:5775   */\n      tag_320\n      tag_293\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220a5b0c788fff17ecdc5cfae3ea7428ed550f741409bdcec4dfd35e0051f14d42d64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_108": {
									"entryPoint": null,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1177": {
									"entryPoint": null,
									"id": 1177,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_965": {
									"entryPoint": null,
									"id": 965,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:912:10",
										"nodeType": "YulBlock",
										"src": "0:912:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:10",
													"nodeType": "YulBlock",
													"src": "74:117:10",
													"statements": [
														{
															"nativeSrc": "84:22:10",
															"nodeType": "YulAssignment",
															"src": "84:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																"nativeSrc": "93:13:10",
																"nodeType": "YulFunctionCall",
																"src": "93:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:10",
																"nodeType": "YulBlock",
																"src": "169:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:10",
																					"nodeType": "YulLiteral",
																					"src": "178:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:10",
																					"nodeType": "YulLiteral",
																					"src": "181:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:10"
																			},
																			"nativeSrc": "171:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:10"
																		},
																		"nativeSrc": "171:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:10",
																										"nodeType": "YulLiteral",
																										"src": "154:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:10",
																										"nodeType": "YulLiteral",
																										"src": "159:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:10"
																								},
																								"nativeSrc": "150:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:10",
																								"nodeType": "YulLiteral",
																								"src": "163:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:10"
																						},
																						"nativeSrc": "146:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:10"
																				},
																				"nativeSrc": "135:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:10"
																		},
																		"nativeSrc": "125:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:10"
																},
																"nativeSrc": "118:50:10",
																"nodeType": "YulFunctionCall",
																"src": "118:50:10"
															},
															"nativeSrc": "115:70:10",
															"nodeType": "YulIf",
															"src": "115:70:10"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:10",
														"nodeType": "YulTypedName",
														"src": "53:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:10",
														"nodeType": "YulTypedName",
														"src": "64:5:10",
														"type": ""
													}
												],
												"src": "14:177:10"
											},
											{
												"body": {
													"nativeSrc": "362:548:10",
													"nodeType": "YulBlock",
													"src": "362:548:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "409:16:10",
																"nodeType": "YulBlock",
																"src": "409:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "418:1:10",
																					"nodeType": "YulLiteral",
																					"src": "418:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "421:1:10",
																					"nodeType": "YulLiteral",
																					"src": "421:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "411:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:10"
																			},
																			"nativeSrc": "411:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:10"
																		},
																		"nativeSrc": "411:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "383:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "383:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "392:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "392:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "379:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "379:3:10"
																		},
																		"nativeSrc": "379:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "379:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "404:3:10",
																		"nodeType": "YulLiteral",
																		"src": "404:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "375:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "375:3:10"
																},
																"nativeSrc": "375:33:10",
																"nodeType": "YulFunctionCall",
																"src": "375:33:10"
															},
															"nativeSrc": "372:53:10",
															"nodeType": "YulIf",
															"src": "372:53:10"
														},
														{
															"nativeSrc": "434:50:10",
															"nodeType": "YulAssignment",
															"src": "434:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "474:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "474:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "444:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "444:29:10"
																},
																"nativeSrc": "444:40:10",
																"nodeType": "YulFunctionCall",
																"src": "444:40:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "434:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "434:6:10"
																}
															]
														},
														{
															"nativeSrc": "493:59:10",
															"nodeType": "YulAssignment",
															"src": "493:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "537:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "537:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "548:2:10",
																				"nodeType": "YulLiteral",
																				"src": "548:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "533:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "533:3:10"
																		},
																		"nativeSrc": "533:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "533:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "503:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "503:29:10"
																},
																"nativeSrc": "503:49:10",
																"nodeType": "YulFunctionCall",
																"src": "503:49:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "493:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:10"
																}
															]
														},
														{
															"nativeSrc": "561:59:10",
															"nodeType": "YulAssignment",
															"src": "561:59:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "605:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "605:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "616:2:10",
																				"nodeType": "YulLiteral",
																				"src": "616:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "601:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "601:3:10"
																		},
																		"nativeSrc": "601:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "601:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "571:29:10",
																	"nodeType": "YulIdentifier",
																	"src": "571:29:10"
																},
																"nativeSrc": "571:49:10",
																"nodeType": "YulFunctionCall",
																"src": "571:49:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "561:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "561:6:10"
																}
															]
														},
														{
															"nativeSrc": "629:14:10",
															"nodeType": "YulVariableDeclaration",
															"src": "629:14:10",
															"value": {
																"kind": "number",
																"nativeSrc": "642:1:10",
																"nodeType": "YulLiteral",
																"src": "642:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "633:5:10",
																	"nodeType": "YulTypedName",
																	"src": "633:5:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "652:34:10",
															"nodeType": "YulAssignment",
															"src": "652:34:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "671:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "671:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "682:2:10",
																				"nodeType": "YulLiteral",
																				"src": "682:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "667:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "667:3:10"
																		},
																		"nativeSrc": "667:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "667:18:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "661:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "661:5:10"
																},
																"nativeSrc": "661:25:10",
																"nodeType": "YulFunctionCall",
																"src": "661:25:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "652:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "652:5:10"
																}
															]
														},
														{
															"nativeSrc": "695:15:10",
															"nodeType": "YulAssignment",
															"src": "695:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "705:5:10",
																"nodeType": "YulIdentifier",
																"src": "705:5:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "695:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:10"
																}
															]
														},
														{
															"nativeSrc": "719:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "719:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "734:1:10",
																"nodeType": "YulLiteral",
																"src": "734:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "723:7:10",
																	"nodeType": "YulTypedName",
																	"src": "723:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "744:37:10",
															"nodeType": "YulAssignment",
															"src": "744:37:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "765:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "765:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "776:3:10",
																				"nodeType": "YulLiteral",
																				"src": "776:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "761:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "761:3:10"
																		},
																		"nativeSrc": "761:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "761:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "755:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "755:5:10"
																},
																"nativeSrc": "755:26:10",
																"nodeType": "YulFunctionCall",
																"src": "755:26:10"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "744:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "744:7:10"
																}
															]
														},
														{
															"nativeSrc": "790:17:10",
															"nodeType": "YulAssignment",
															"src": "790:17:10",
															"value": {
																"name": "value_1",
																"nativeSrc": "800:7:10",
																"nodeType": "YulIdentifier",
																"src": "800:7:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "790:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "790:6:10"
																}
															]
														},
														{
															"nativeSrc": "816:16:10",
															"nodeType": "YulVariableDeclaration",
															"src": "816:16:10",
															"value": {
																"kind": "number",
																"nativeSrc": "831:1:10",
																"nodeType": "YulLiteral",
																"src": "831:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "820:7:10",
																	"nodeType": "YulTypedName",
																	"src": "820:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "841:37:10",
															"nodeType": "YulAssignment",
															"src": "841:37:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "873:3:10",
																				"nodeType": "YulLiteral",
																				"src": "873:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "858:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "858:3:10"
																		},
																		"nativeSrc": "858:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "858:19:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "852:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "852:5:10"
																},
																"nativeSrc": "852:26:10",
																"nodeType": "YulFunctionCall",
																"src": "852:26:10"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "841:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "841:7:10"
																}
															]
														},
														{
															"nativeSrc": "887:17:10",
															"nodeType": "YulAssignment",
															"src": "887:17:10",
															"value": {
																"name": "value_2",
																"nativeSrc": "897:7:10",
																"nodeType": "YulIdentifier",
																"src": "897:7:10"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "887:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "887:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "196:714:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "288:9:10",
														"nodeType": "YulTypedName",
														"src": "288:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "299:7:10",
														"nodeType": "YulTypedName",
														"src": "299:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "311:6:10",
														"nodeType": "YulTypedName",
														"src": "311:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "319:6:10",
														"nodeType": "YulTypedName",
														"src": "319:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "327:6:10",
														"nodeType": "YulTypedName",
														"src": "327:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "335:6:10",
														"nodeType": "YulTypedName",
														"src": "335:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "343:6:10",
														"nodeType": "YulTypedName",
														"src": "343:6:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "351:6:10",
														"nodeType": "YulTypedName",
														"src": "351:6:10",
														"type": ""
													}
												],
												"src": "196:714:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        let value := 0\n        value := mload(add(headStart, 96))\n        value3 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 128))\n        value4 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 160))\n        value5 := value_2\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x13BB CODESIZE SUB DUP1 PUSH2 0x13BB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xAF JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD DUP3 AND SWAP6 DUP9 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SWAP5 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP5 AND SWAP5 SWAP1 SWAP6 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE PUSH1 0x8 SSTORE PUSH2 0x10D JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xAA JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xC4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xCD DUP8 PUSH2 0x94 JUMP JUMPDEST SWAP6 POP PUSH2 0xDB PUSH1 0x20 DUP9 ADD PUSH2 0x94 JUMP JUMPDEST SWAP5 POP PUSH2 0xE9 PUSH1 0x40 DUP9 ADD PUSH2 0x94 JUMP JUMPDEST PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP10 ADD MLOAD SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP1 SWAP8 SWAP1 SWAP7 SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12A1 DUP1 PUSH2 0x11A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x839EA2D9 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xC6D69A30 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xC6D69A30 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xCE1D1F1F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xD4A49C17 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xDC38679C EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xEEA7570E EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x298 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x839EA2D9 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x9063EE20 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x9E9AED62 EQ PUSH2 0x246 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6A64EFF8 GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x6A64EFF8 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x79A9FA1C EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x7EF7BA20 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x7FF8B57A EQ PUSH2 0x1F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7E675FA EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x5D0040D3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x4AE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x1A2 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x1A2 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x149 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x149 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x1A2 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5769746864726177206D757374206265203E203 PUSH1 0x64 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E20636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x436 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420746F6B656E207769746864726177616C206661696C656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0xEE1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x53B PUSH2 0xF68 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4D757374206465706F73697420526F626F4D6F6E6579 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420526F626F4D6F6E657920616C6C6F77616E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x662 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0xFC1 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD PUSH1 0x64 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x68B SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6A1 DUP4 DUP7 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207061796D656E74546F6B656E20696E20636F6E7472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1858DD PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x8 SLOAD DUP5 PUSH2 0x78A SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7A1 DUP3 DUP6 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD SWAP2 SWAP3 POP PUSH2 0x7C1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP5 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x7D8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x822 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x834 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE CALLER SWAP4 POP PUSH32 0xCB7F55D0B91628D4520B789339DAE4803AB07182EA89D138ACBD965DAC51DC65 SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP PUSH2 0x882 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964207072656D69756D2072617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD PUSH1 0x64 PUSH2 0x90F SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x93C DUP4 DUP7 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x991 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 LT ISZERO SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0x105F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4465706F736974206D757374206265203E203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420746F6B656E206465706F736974206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB96 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBA SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0xA8C2F040E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xA8EE157EB2A9AA895D74DF4D2D3BC0AD165FF3162F8EC46A4ECF602DD5C48FDA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD9 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD PUSH1 0x64 PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0xD04 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0xD15 JUMPI PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xD28 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0xB4281BB17CDC594E3CF6D419DA95F70A6B02D856B26438D381EE1246A8E89F12 SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577206F776E65722063616E6E6F74206265207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1028 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x10BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x4A9 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0xFF6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1081 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 ADD PUSH2 0xF5E JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x10F3 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1139 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1150 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x121C JUMPI PUSH2 0x121C PUSH2 0x11F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x121C JUMPI PUSH2 0x121C PUSH2 0x11F5 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1253 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x121C JUMPI PUSH2 0x121C PUSH2 0x11F5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xB0 0xC7 DUP9 SELFDESTRUCT CALL PUSH31 0xCDC5CFAE3EA7428ED550F741409BDCEC4DFD35E0051F14D42D64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "2873:7463:9:-:0;;;3785:446;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;851:5;841:15;;-1:-1:-1;;841:15:9;;;-1:-1:-1;1821:22:3;;3995:5:9;:18;;4003:10;-1:-1:-1;;;;;;3995:18:9;;;;;;;4024:12;:28;;;;-1:-1:-1;;;;;4024:28:9;;;;;;4063:10;:24;;;;;;;;;;;;;;4098:9;:22;;;;;;;;;;;;;;;;4131:11;:26;4168:11;:26;4205:7;:18;2873:7463;;14:177:10;93:13;;-1:-1:-1;;;;;135:31:10;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:714::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;571:49;616:2;605:9;601:18;571:49;:::i;:::-;682:2;667:18;;661:25;776:3;761:19;;755:26;873:3;858:19;;;852:26;196:714;;;;-1:-1:-1;561:59:10;;661:25;;755:26;;852;;-1:-1:-1;196:714:10;-1:-1:-1;;;196:714:10:o;:::-;2873:7463:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_601": {
									"entryPoint": 4285,
									"id": 601,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_142": {
									"entryPoint": null,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_134": {
									"entryPoint": 3944,
									"id": 134,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_1009": {
									"entryPoint": 4191,
									"id": 1009,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_unpause_1024": {
									"entryPoint": 3809,
									"id": 1024,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyback_1412": {
									"entryPoint": 1297,
									"id": 1412,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@canExecuteBuyback_1660": {
									"entryPoint": 2300,
									"id": 1660,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@contractTokenBalance_1568": {
									"entryPoint": 2896,
									"id": 1568,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositPaymentToken_1450": {
									"entryPoint": 2548,
									"id": 1450,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@gasReserve_1100": {
									"entryPoint": null,
									"id": 1100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxBuyableRoboMoney_1613": {
									"entryPoint": 3179,
									"id": 1613,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1094": {
									"entryPoint": null,
									"id": 1094,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pause_1199": {
									"entryPoint": 2498,
									"id": 1199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_973": {
									"entryPoint": null,
									"id": 973,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paymentToken_1096": {
									"entryPoint": null,
									"id": 1096,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@premiumRate_1102": {
									"entryPoint": null,
									"id": 1102,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@roboMoney_1098": {
									"entryPoint": null,
									"id": 1098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_306": {
									"entryPoint": 4033,
									"id": 306,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_279": {
									"entryPoint": 4142,
									"id": 279,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setGasReserve_1477": {
									"entryPoint": 3385,
									"id": 1477,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPremiumRate_1229": {
									"entryPoint": 2181,
									"id": 1229,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTargetPrice_1242": {
									"entryPoint": 1250,
									"id": 1242,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxRate_1501": {
									"entryPoint": 3007,
									"id": 1501,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@targetPrice_1104": {
									"entryPoint": null,
									"id": 1104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@taxRate_1106": {
									"entryPoint": null,
									"id": 1106,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_1270": {
									"entryPoint": 3590,
									"id": 1270,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1209": {
									"entryPoint": 1198,
									"id": 1209,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawPaymentToken_1551": {
									"entryPoint": 683,
									"id": 1551,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_413580c2bed8f5997e496999aeae2d0944cef34dd07600d725723cfeb9a27018__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4555,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80d292cb0bbfe8a121f50ca8272137bc0920ac915af91920e9451b3f9678aeea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd9789bd50a2200c2c56ae184b05b7a27676b31a0a3efe942c8180da88e2a1b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4b03365d388099750ed6c970686ed6d0cbebc1f630a55a1dfd7c9c24d504ee8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ddbcae46186cf25f9e3ee8796d279e9031af56c8275071f75dfd014ec7d6358c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eaf628f11a54761137ed574496fc110ea1e71577aa5ec115c8b8bea70ec3328b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee2d865cbfb98f3aa18b0fbfcc15018e3b00b014b5386b45ac30273e2190b116__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fe8dfe2c977a8ed5a83423be8eb90a0f19b94c075c6783f35429a67843701ecd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9223:10",
										"nodeType": "YulBlock",
										"src": "0:9223:10",
										"statements": [
											{
												"nativeSrc": "6:3:10",
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:10",
													"nodeType": "YulBlock",
													"src": "84:110:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:10",
																"nodeType": "YulBlock",
																"src": "130:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:10",
																					"nodeType": "YulLiteral",
																					"src": "139:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:10",
																					"nodeType": "YulLiteral",
																					"src": "142:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:10"
																			},
																			"nativeSrc": "132:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:10"
																		},
																		"nativeSrc": "132:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:10"
																		},
																		"nativeSrc": "101:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:10",
																		"nodeType": "YulLiteral",
																		"src": "126:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:10"
																},
																"nativeSrc": "97:32:10",
																"nodeType": "YulFunctionCall",
																"src": "97:32:10"
															},
															"nativeSrc": "94:52:10",
															"nodeType": "YulIf",
															"src": "94:52:10"
														},
														{
															"nativeSrc": "155:33:10",
															"nodeType": "YulAssignment",
															"src": "155:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:10"
																},
																"nativeSrc": "165:23:10",
																"nodeType": "YulFunctionCall",
																"src": "165:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:10",
														"nodeType": "YulTypedName",
														"src": "50:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:10",
														"nodeType": "YulTypedName",
														"src": "61:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:10",
														"nodeType": "YulTypedName",
														"src": "73:6:10",
														"type": ""
													}
												],
												"src": "14:180:10"
											},
											{
												"body": {
													"nativeSrc": "300:102:10",
													"nodeType": "YulBlock",
													"src": "300:102:10",
													"statements": [
														{
															"nativeSrc": "310:26:10",
															"nodeType": "YulAssignment",
															"src": "310:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "322:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "333:2:10",
																		"nodeType": "YulLiteral",
																		"src": "333:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "318:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:10"
																},
																"nativeSrc": "318:18:10",
																"nodeType": "YulFunctionCall",
																"src": "318:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "310:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "352:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "367:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "367:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "383:3:10",
																								"nodeType": "YulLiteral",
																								"src": "383:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "388:1:10",
																								"nodeType": "YulLiteral",
																								"src": "388:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "379:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "379:3:10"
																						},
																						"nativeSrc": "379:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "379:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "392:1:10",
																						"nodeType": "YulLiteral",
																						"src": "392:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "375:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "375:3:10"
																				},
																				"nativeSrc": "375:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "375:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "363:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "363:3:10"
																		},
																		"nativeSrc": "363:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "363:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "345:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:10"
																},
																"nativeSrc": "345:51:10",
																"nodeType": "YulFunctionCall",
																"src": "345:51:10"
															},
															"nativeSrc": "345:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "345:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "199:203:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "269:9:10",
														"nodeType": "YulTypedName",
														"src": "269:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "280:6:10",
														"nodeType": "YulTypedName",
														"src": "280:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "291:4:10",
														"nodeType": "YulTypedName",
														"src": "291:4:10",
														"type": ""
													}
												],
												"src": "199:203:10"
											},
											{
												"body": {
													"nativeSrc": "502:92:10",
													"nodeType": "YulBlock",
													"src": "502:92:10",
													"statements": [
														{
															"nativeSrc": "512:26:10",
															"nodeType": "YulAssignment",
															"src": "512:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "524:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "524:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "535:2:10",
																		"nodeType": "YulLiteral",
																		"src": "535:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "520:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "520:3:10"
																},
																"nativeSrc": "520:18:10",
																"nodeType": "YulFunctionCall",
																"src": "520:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "512:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "512:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "554:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "554:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "579:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "579:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "572:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "572:6:10"
																				},
																				"nativeSrc": "572:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "572:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "565:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "565:6:10"
																		},
																		"nativeSrc": "565:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "565:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "547:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "547:6:10"
																},
																"nativeSrc": "547:41:10",
																"nodeType": "YulFunctionCall",
																"src": "547:41:10"
															},
															"nativeSrc": "547:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "547:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "407:187:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "471:9:10",
														"nodeType": "YulTypedName",
														"src": "471:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "482:6:10",
														"nodeType": "YulTypedName",
														"src": "482:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "493:4:10",
														"nodeType": "YulTypedName",
														"src": "493:4:10",
														"type": ""
													}
												],
												"src": "407:187:10"
											},
											{
												"body": {
													"nativeSrc": "700:76:10",
													"nodeType": "YulBlock",
													"src": "700:76:10",
													"statements": [
														{
															"nativeSrc": "710:26:10",
															"nodeType": "YulAssignment",
															"src": "710:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "722:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "722:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "733:2:10",
																		"nodeType": "YulLiteral",
																		"src": "733:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "718:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "718:3:10"
																},
																"nativeSrc": "718:18:10",
																"nodeType": "YulFunctionCall",
																"src": "718:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "710:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "710:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "752:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "763:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "763:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "745:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:10"
																},
																"nativeSrc": "745:25:10",
																"nodeType": "YulFunctionCall",
																"src": "745:25:10"
															},
															"nativeSrc": "745:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "745:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "599:177:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "669:9:10",
														"nodeType": "YulTypedName",
														"src": "669:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "680:6:10",
														"nodeType": "YulTypedName",
														"src": "680:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "691:4:10",
														"nodeType": "YulTypedName",
														"src": "691:4:10",
														"type": ""
													}
												],
												"src": "599:177:10"
											},
											{
												"body": {
													"nativeSrc": "851:216:10",
													"nodeType": "YulBlock",
													"src": "851:216:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "897:16:10",
																"nodeType": "YulBlock",
																"src": "897:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "906:1:10",
																					"nodeType": "YulLiteral",
																					"src": "906:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "909:1:10",
																					"nodeType": "YulLiteral",
																					"src": "909:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "899:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "899:6:10"
																			},
																			"nativeSrc": "899:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "899:12:10"
																		},
																		"nativeSrc": "899:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "899:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "872:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "872:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "881:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "881:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "868:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "868:3:10"
																		},
																		"nativeSrc": "868:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "868:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "893:2:10",
																		"nodeType": "YulLiteral",
																		"src": "893:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "864:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "864:3:10"
																},
																"nativeSrc": "864:32:10",
																"nodeType": "YulFunctionCall",
																"src": "864:32:10"
															},
															"nativeSrc": "861:52:10",
															"nodeType": "YulIf",
															"src": "861:52:10"
														},
														{
															"nativeSrc": "922:36:10",
															"nodeType": "YulVariableDeclaration",
															"src": "922:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "948:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "948:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "935:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "935:12:10"
																},
																"nativeSrc": "935:23:10",
																"nodeType": "YulFunctionCall",
																"src": "935:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "926:5:10",
																	"nodeType": "YulTypedName",
																	"src": "926:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1021:16:10",
																"nodeType": "YulBlock",
																"src": "1021:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1030:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1030:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1023:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1023:6:10"
																			},
																			"nativeSrc": "1023:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1023:12:10"
																		},
																		"nativeSrc": "1023:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1023:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "980:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "980:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "991:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "991:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1006:3:10",
																										"nodeType": "YulLiteral",
																										"src": "1006:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1011:1:10",
																										"nodeType": "YulLiteral",
																										"src": "1011:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1002:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "1002:3:10"
																								},
																								"nativeSrc": "1002:11:10",
																								"nodeType": "YulFunctionCall",
																								"src": "1002:11:10"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1015:1:10",
																								"nodeType": "YulLiteral",
																								"src": "1015:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "998:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "998:3:10"
																						},
																						"nativeSrc": "998:19:10",
																						"nodeType": "YulFunctionCall",
																						"src": "998:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "987:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "987:3:10"
																				},
																				"nativeSrc": "987:31:10",
																				"nodeType": "YulFunctionCall",
																				"src": "987:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "977:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "977:2:10"
																		},
																		"nativeSrc": "977:42:10",
																		"nodeType": "YulFunctionCall",
																		"src": "977:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "970:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "970:6:10"
																},
																"nativeSrc": "970:50:10",
																"nodeType": "YulFunctionCall",
																"src": "970:50:10"
															},
															"nativeSrc": "967:70:10",
															"nodeType": "YulIf",
															"src": "967:70:10"
														},
														{
															"nativeSrc": "1046:15:10",
															"nodeType": "YulAssignment",
															"src": "1046:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "1056:5:10",
																"nodeType": "YulIdentifier",
																"src": "1056:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1046:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1046:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "781:286:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "817:9:10",
														"nodeType": "YulTypedName",
														"src": "817:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "828:7:10",
														"nodeType": "YulTypedName",
														"src": "828:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "840:6:10",
														"nodeType": "YulTypedName",
														"src": "840:6:10",
														"type": ""
													}
												],
												"src": "781:286:10"
											},
											{
												"body": {
													"nativeSrc": "1246:164:10",
													"nodeType": "YulBlock",
													"src": "1246:164:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1263:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1263:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1274:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1274:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:10"
																},
																"nativeSrc": "1256:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1256:21:10"
															},
															"nativeSrc": "1256:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1256:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1297:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1297:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1308:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1308:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1293:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1293:3:10"
																		},
																		"nativeSrc": "1293:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1293:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1313:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1313:2:10",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1286:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:10"
																},
																"nativeSrc": "1286:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1286:30:10"
															},
															"nativeSrc": "1286:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1286:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1336:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1347:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1347:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1332:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:10"
																		},
																		"nativeSrc": "1332:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1332:18:10"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "1352:16:10",
																		"nodeType": "YulLiteral",
																		"src": "1352:16:10",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1325:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1325:6:10"
																},
																"nativeSrc": "1325:44:10",
																"nodeType": "YulFunctionCall",
																"src": "1325:44:10"
															},
															"nativeSrc": "1325:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "1325:44:10"
														},
														{
															"nativeSrc": "1378:26:10",
															"nodeType": "YulAssignment",
															"src": "1378:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1390:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1390:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1401:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1386:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1386:3:10"
																},
																"nativeSrc": "1386:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1386:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1378:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1378:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1072:338:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1223:9:10",
														"nodeType": "YulTypedName",
														"src": "1223:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1237:4:10",
														"nodeType": "YulTypedName",
														"src": "1237:4:10",
														"type": ""
													}
												],
												"src": "1072:338:10"
											},
											{
												"body": {
													"nativeSrc": "1589:170:10",
													"nodeType": "YulBlock",
													"src": "1589:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1606:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1606:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1617:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1617:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1599:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1599:6:10"
																},
																"nativeSrc": "1599:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1599:21:10"
															},
															"nativeSrc": "1599:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "1599:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1651:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:10"
																		},
																		"nativeSrc": "1636:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1629:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1629:6:10"
																},
																"nativeSrc": "1629:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1629:30:10"
															},
															"nativeSrc": "1629:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "1629:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1679:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1679:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1690:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1690:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1675:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1675:3:10"
																		},
																		"nativeSrc": "1675:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1675:18:10"
																	},
																	{
																		"hexValue": "5769746864726177206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "1695:22:10",
																		"nodeType": "YulLiteral",
																		"src": "1695:22:10",
																		"type": "",
																		"value": "Withdraw must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1668:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:10"
																},
																"nativeSrc": "1668:50:10",
																"nodeType": "YulFunctionCall",
																"src": "1668:50:10"
															},
															"nativeSrc": "1668:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "1668:50:10"
														},
														{
															"nativeSrc": "1727:26:10",
															"nodeType": "YulAssignment",
															"src": "1727:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1739:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1739:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1750:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1750:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1735:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1735:3:10"
																},
																"nativeSrc": "1735:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1735:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1727:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1727:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee2d865cbfb98f3aa18b0fbfcc15018e3b00b014b5386b45ac30273e2190b116__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1415:344:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1566:9:10",
														"nodeType": "YulTypedName",
														"src": "1566:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1580:4:10",
														"nodeType": "YulTypedName",
														"src": "1580:4:10",
														"type": ""
													}
												],
												"src": "1415:344:10"
											},
											{
												"body": {
													"nativeSrc": "1845:103:10",
													"nodeType": "YulBlock",
													"src": "1845:103:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1891:16:10",
																"nodeType": "YulBlock",
																"src": "1891:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1900:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1900:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:10",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1893:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1893:6:10"
																			},
																			"nativeSrc": "1893:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1893:12:10"
																		},
																		"nativeSrc": "1893:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1893:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1866:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1866:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1875:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1875:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1862:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1862:3:10"
																		},
																		"nativeSrc": "1862:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1862:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1887:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1887:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1858:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1858:3:10"
																},
																"nativeSrc": "1858:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1858:32:10"
															},
															"nativeSrc": "1855:52:10",
															"nodeType": "YulIf",
															"src": "1855:52:10"
														},
														{
															"nativeSrc": "1916:26:10",
															"nodeType": "YulAssignment",
															"src": "1916:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1932:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1932:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1926:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1926:5:10"
																},
																"nativeSrc": "1926:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1926:16:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1916:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "1764:184:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1811:9:10",
														"nodeType": "YulTypedName",
														"src": "1811:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1822:7:10",
														"nodeType": "YulTypedName",
														"src": "1822:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1834:6:10",
														"nodeType": "YulTypedName",
														"src": "1834:6:10",
														"type": ""
													}
												],
												"src": "1764:184:10"
											},
											{
												"body": {
													"nativeSrc": "2127:179:10",
													"nodeType": "YulBlock",
													"src": "2127:179:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2144:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2144:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2155:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2155:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2137:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2137:6:10"
																},
																"nativeSrc": "2137:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2137:21:10"
															},
															"nativeSrc": "2137:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "2137:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2178:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2178:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2189:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2189:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2174:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2174:3:10"
																		},
																		"nativeSrc": "2174:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2174:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2194:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2194:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2167:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:10"
																},
																"nativeSrc": "2167:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2167:30:10"
															},
															"nativeSrc": "2167:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "2167:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2217:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2217:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2228:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2228:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2213:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2213:3:10"
																		},
																		"nativeSrc": "2213:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2213:18:10"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320696e20636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "2233:31:10",
																		"nodeType": "YulLiteral",
																		"src": "2233:31:10",
																		"type": "",
																		"value": "Not enough tokens in contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2206:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:10"
																},
																"nativeSrc": "2206:59:10",
																"nodeType": "YulFunctionCall",
																"src": "2206:59:10"
															},
															"nativeSrc": "2206:59:10",
															"nodeType": "YulExpressionStatement",
															"src": "2206:59:10"
														},
														{
															"nativeSrc": "2274:26:10",
															"nodeType": "YulAssignment",
															"src": "2274:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2286:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2286:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2297:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2297:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2282:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2282:3:10"
																},
																"nativeSrc": "2282:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2282:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2274:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2274:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1953:353:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2104:9:10",
														"nodeType": "YulTypedName",
														"src": "2104:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2118:4:10",
														"nodeType": "YulTypedName",
														"src": "2118:4:10",
														"type": ""
													}
												],
												"src": "1953:353:10"
											},
											{
												"body": {
													"nativeSrc": "2440:145:10",
													"nodeType": "YulBlock",
													"src": "2440:145:10",
													"statements": [
														{
															"nativeSrc": "2450:26:10",
															"nodeType": "YulAssignment",
															"src": "2450:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2462:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2462:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2473:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2473:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2458:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2458:3:10"
																},
																"nativeSrc": "2458:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2458:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2450:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2450:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2492:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2507:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2523:3:10",
																								"nodeType": "YulLiteral",
																								"src": "2523:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2528:1:10",
																								"nodeType": "YulLiteral",
																								"src": "2528:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2519:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "2519:3:10"
																						},
																						"nativeSrc": "2519:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2519:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2532:1:10",
																						"nodeType": "YulLiteral",
																						"src": "2532:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2515:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2515:3:10"
																				},
																				"nativeSrc": "2515:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2515:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2503:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2503:3:10"
																		},
																		"nativeSrc": "2503:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2503:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2485:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2485:6:10"
																},
																"nativeSrc": "2485:51:10",
																"nodeType": "YulFunctionCall",
																"src": "2485:51:10"
															},
															"nativeSrc": "2485:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "2485:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2556:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2556:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2567:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2567:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2552:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:10"
																		},
																		"nativeSrc": "2552:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2552:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2572:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2572:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2545:6:10"
																},
																"nativeSrc": "2545:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2545:34:10"
															},
															"nativeSrc": "2545:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2545:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2311:274:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2401:9:10",
														"nodeType": "YulTypedName",
														"src": "2401:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2412:6:10",
														"nodeType": "YulTypedName",
														"src": "2412:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2420:6:10",
														"nodeType": "YulTypedName",
														"src": "2420:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2431:4:10",
														"nodeType": "YulTypedName",
														"src": "2431:4:10",
														"type": ""
													}
												],
												"src": "2311:274:10"
											},
											{
												"body": {
													"nativeSrc": "2668:199:10",
													"nodeType": "YulBlock",
													"src": "2668:199:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2714:16:10",
																"nodeType": "YulBlock",
																"src": "2714:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2723:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2723:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2726:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2726:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2716:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2716:6:10"
																			},
																			"nativeSrc": "2716:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2716:12:10"
																		},
																		"nativeSrc": "2716:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2716:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2689:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2689:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2698:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2698:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2685:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:10"
																		},
																		"nativeSrc": "2685:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2685:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2710:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2710:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2681:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:10"
																},
																"nativeSrc": "2681:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2681:32:10"
															},
															"nativeSrc": "2678:52:10",
															"nodeType": "YulIf",
															"src": "2678:52:10"
														},
														{
															"nativeSrc": "2739:29:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2739:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2758:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2758:9:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2752:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2752:5:10"
																},
																"nativeSrc": "2752:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2752:16:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2743:5:10",
																	"nodeType": "YulTypedName",
																	"src": "2743:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2821:16:10",
																"nodeType": "YulBlock",
																"src": "2821:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2830:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2830:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2833:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2833:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2823:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2823:6:10"
																			},
																			"nativeSrc": "2823:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2823:12:10"
																		},
																		"nativeSrc": "2823:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2823:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2790:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2790:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2811:5:10",
																								"nodeType": "YulIdentifier",
																								"src": "2811:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2804:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "2804:6:10"
																						},
																						"nativeSrc": "2804:13:10",
																						"nodeType": "YulFunctionCall",
																						"src": "2804:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2797:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2797:6:10"
																				},
																				"nativeSrc": "2797:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2797:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2787:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2787:2:10"
																		},
																		"nativeSrc": "2787:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2787:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2780:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:6:10"
																},
																"nativeSrc": "2780:40:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:40:10"
															},
															"nativeSrc": "2777:60:10",
															"nodeType": "YulIf",
															"src": "2777:60:10"
														},
														{
															"nativeSrc": "2846:15:10",
															"nodeType": "YulAssignment",
															"src": "2846:15:10",
															"value": {
																"name": "value",
																"nativeSrc": "2856:5:10",
																"nodeType": "YulIdentifier",
																"src": "2856:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2846:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2846:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2590:277:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2634:9:10",
														"nodeType": "YulTypedName",
														"src": "2634:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2645:7:10",
														"nodeType": "YulTypedName",
														"src": "2645:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2657:6:10",
														"nodeType": "YulTypedName",
														"src": "2657:6:10",
														"type": ""
													}
												],
												"src": "2590:277:10"
											},
											{
												"body": {
													"nativeSrc": "3046:181:10",
													"nodeType": "YulBlock",
													"src": "3046:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3063:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3074:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3074:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3056:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3056:6:10"
																},
																"nativeSrc": "3056:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3056:21:10"
															},
															"nativeSrc": "3056:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "3056:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3097:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3097:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3108:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3108:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3093:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3093:3:10"
																		},
																		"nativeSrc": "3093:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3093:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3113:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3113:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3086:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3086:6:10"
																},
																"nativeSrc": "3086:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3086:30:10"
															},
															"nativeSrc": "3086:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "3086:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3136:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3136:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3147:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3147:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3132:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3132:3:10"
																		},
																		"nativeSrc": "3132:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3132:18:10"
																	},
																	{
																		"hexValue": "5061796d656e7420746f6b656e207769746864726177616c206661696c6564",
																		"kind": "string",
																		"nativeSrc": "3152:33:10",
																		"nodeType": "YulLiteral",
																		"src": "3152:33:10",
																		"type": "",
																		"value": "Payment token withdrawal failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3125:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3125:6:10"
																},
																"nativeSrc": "3125:61:10",
																"nodeType": "YulFunctionCall",
																"src": "3125:61:10"
															},
															"nativeSrc": "3125:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "3125:61:10"
														},
														{
															"nativeSrc": "3195:26:10",
															"nodeType": "YulAssignment",
															"src": "3195:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3207:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3207:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3218:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3218:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3203:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3203:3:10"
																},
																"nativeSrc": "3203:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3203:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3195:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3195:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fe8dfe2c977a8ed5a83423be8eb90a0f19b94c075c6783f35429a67843701ecd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2872:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3023:9:10",
														"nodeType": "YulTypedName",
														"src": "3023:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3037:4:10",
														"nodeType": "YulTypedName",
														"src": "3037:4:10",
														"type": ""
													}
												],
												"src": "2872:355:10"
											},
											{
												"body": {
													"nativeSrc": "3406:166:10",
													"nodeType": "YulBlock",
													"src": "3406:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3423:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3423:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3434:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3434:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3416:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3416:6:10"
																},
																"nativeSrc": "3416:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3416:21:10"
															},
															"nativeSrc": "3416:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "3416:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3457:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3468:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3468:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3453:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:10"
																		},
																		"nativeSrc": "3453:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3453:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3473:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3473:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3446:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3446:6:10"
																},
																"nativeSrc": "3446:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3446:30:10"
															},
															"nativeSrc": "3446:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "3446:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3496:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3496:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3507:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3507:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3492:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3492:3:10"
																		},
																		"nativeSrc": "3492:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3492:18:10"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "3512:18:10",
																		"nodeType": "YulLiteral",
																		"src": "3512:18:10",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3485:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3485:6:10"
																},
																"nativeSrc": "3485:46:10",
																"nodeType": "YulFunctionCall",
																"src": "3485:46:10"
															},
															"nativeSrc": "3485:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "3485:46:10"
														},
														{
															"nativeSrc": "3540:26:10",
															"nodeType": "YulAssignment",
															"src": "3540:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3552:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3552:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3563:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3563:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3548:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3548:3:10"
																},
																"nativeSrc": "3548:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3548:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3540:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3540:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3232:340:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3383:9:10",
														"nodeType": "YulTypedName",
														"src": "3383:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3397:4:10",
														"nodeType": "YulTypedName",
														"src": "3397:4:10",
														"type": ""
													}
												],
												"src": "3232:340:10"
											},
											{
												"body": {
													"nativeSrc": "3751:172:10",
													"nodeType": "YulBlock",
													"src": "3751:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3768:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3768:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3779:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3779:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3761:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3761:6:10"
																},
																"nativeSrc": "3761:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3761:21:10"
															},
															"nativeSrc": "3761:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "3761:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3802:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3802:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3813:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3813:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3798:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3798:3:10"
																		},
																		"nativeSrc": "3798:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3798:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3818:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3818:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3791:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3791:6:10"
																},
																"nativeSrc": "3791:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3791:30:10"
															},
															"nativeSrc": "3791:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "3791:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3841:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3841:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3852:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3852:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3837:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3837:3:10"
																		},
																		"nativeSrc": "3837:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3837:18:10"
																	},
																	{
																		"hexValue": "4d757374206465706f73697420526f626f4d6f6e6579",
																		"kind": "string",
																		"nativeSrc": "3857:24:10",
																		"nodeType": "YulLiteral",
																		"src": "3857:24:10",
																		"type": "",
																		"value": "Must deposit RoboMoney"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3830:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3830:6:10"
																},
																"nativeSrc": "3830:52:10",
																"nodeType": "YulFunctionCall",
																"src": "3830:52:10"
															},
															"nativeSrc": "3830:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "3830:52:10"
														},
														{
															"nativeSrc": "3891:26:10",
															"nodeType": "YulAssignment",
															"src": "3891:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3903:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3903:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3914:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3914:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3899:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3899:3:10"
																},
																"nativeSrc": "3899:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3899:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3891:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3891:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80d292cb0bbfe8a121f50ca8272137bc0920ac915af91920e9451b3f9678aeea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3577:346:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3728:9:10",
														"nodeType": "YulTypedName",
														"src": "3728:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3742:4:10",
														"nodeType": "YulTypedName",
														"src": "3742:4:10",
														"type": ""
													}
												],
												"src": "3577:346:10"
											},
											{
												"body": {
													"nativeSrc": "4057:171:10",
													"nodeType": "YulBlock",
													"src": "4057:171:10",
													"statements": [
														{
															"nativeSrc": "4067:26:10",
															"nodeType": "YulAssignment",
															"src": "4067:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4079:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4079:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4090:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4090:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4075:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4075:3:10"
																},
																"nativeSrc": "4075:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4075:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4067:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4067:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4109:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4109:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4124:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4124:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4140:3:10",
																								"nodeType": "YulLiteral",
																								"src": "4140:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4145:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4145:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4136:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4136:3:10"
																						},
																						"nativeSrc": "4136:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4136:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4149:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4149:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4132:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4132:3:10"
																				},
																				"nativeSrc": "4132:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4132:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4120:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4120:3:10"
																		},
																		"nativeSrc": "4120:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4120:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4102:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4102:6:10"
																},
																"nativeSrc": "4102:51:10",
																"nodeType": "YulFunctionCall",
																"src": "4102:51:10"
															},
															"nativeSrc": "4102:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "4102:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4173:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4184:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4184:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4169:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4169:3:10"
																		},
																		"nativeSrc": "4169:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4169:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4193:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4193:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4209:3:10",
																								"nodeType": "YulLiteral",
																								"src": "4209:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4214:1:10",
																								"nodeType": "YulLiteral",
																								"src": "4214:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4205:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4205:3:10"
																						},
																						"nativeSrc": "4205:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4205:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4218:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4218:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4201:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4201:3:10"
																				},
																				"nativeSrc": "4201:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4201:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4189:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4189:3:10"
																		},
																		"nativeSrc": "4189:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4189:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4162:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4162:6:10"
																},
																"nativeSrc": "4162:60:10",
																"nodeType": "YulFunctionCall",
																"src": "4162:60:10"
															},
															"nativeSrc": "4162:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "4162:60:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "3928:300:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4018:9:10",
														"nodeType": "YulTypedName",
														"src": "4018:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4029:6:10",
														"nodeType": "YulTypedName",
														"src": "4029:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4037:6:10",
														"nodeType": "YulTypedName",
														"src": "4037:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4048:4:10",
														"nodeType": "YulTypedName",
														"src": "4048:4:10",
														"type": ""
													}
												],
												"src": "3928:300:10"
											},
											{
												"body": {
													"nativeSrc": "4407:182:10",
													"nodeType": "YulBlock",
													"src": "4407:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4424:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4424:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4435:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4435:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4417:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4417:6:10"
																},
																"nativeSrc": "4417:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4417:21:10"
															},
															"nativeSrc": "4417:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "4417:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4458:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4458:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4469:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4469:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4454:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4454:3:10"
																		},
																		"nativeSrc": "4454:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4454:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4474:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4474:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4447:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4447:6:10"
																},
																"nativeSrc": "4447:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4447:30:10"
															},
															"nativeSrc": "4447:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "4447:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4497:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4497:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4508:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4508:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4493:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4493:3:10"
																		},
																		"nativeSrc": "4493:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4493:18:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420526f626f4d6f6e657920616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4513:34:10",
																		"nodeType": "YulLiteral",
																		"src": "4513:34:10",
																		"type": "",
																		"value": "Insufficient RoboMoney allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4486:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4486:6:10"
																},
																"nativeSrc": "4486:62:10",
																"nodeType": "YulFunctionCall",
																"src": "4486:62:10"
															},
															"nativeSrc": "4486:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "4486:62:10"
														},
														{
															"nativeSrc": "4557:26:10",
															"nodeType": "YulAssignment",
															"src": "4557:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4569:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4569:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4580:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4580:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4565:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4565:3:10"
																},
																"nativeSrc": "4565:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4565:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4557:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4557:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4b03365d388099750ed6c970686ed6d0cbebc1f630a55a1dfd7c9c24d504ee8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4233:356:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4384:9:10",
														"nodeType": "YulTypedName",
														"src": "4384:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4398:4:10",
														"nodeType": "YulTypedName",
														"src": "4398:4:10",
														"type": ""
													}
												],
												"src": "4233:356:10"
											},
											{
												"body": {
													"nativeSrc": "4626:95:10",
													"nodeType": "YulBlock",
													"src": "4626:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4643:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4643:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4650:3:10",
																				"nodeType": "YulLiteral",
																				"src": "4650:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4655:10:10",
																				"nodeType": "YulLiteral",
																				"src": "4655:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4646:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4646:3:10"
																		},
																		"nativeSrc": "4646:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4646:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4636:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4636:6:10"
																},
																"nativeSrc": "4636:31:10",
																"nodeType": "YulFunctionCall",
																"src": "4636:31:10"
															},
															"nativeSrc": "4636:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "4636:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4683:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4683:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4686:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4686:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4676:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4676:6:10"
																},
																"nativeSrc": "4676:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4676:15:10"
															},
															"nativeSrc": "4676:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4676:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4707:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4707:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4710:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4710:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4700:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4700:6:10"
																},
																"nativeSrc": "4700:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4700:15:10"
															},
															"nativeSrc": "4700:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "4700:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4594:127:10",
												"nodeType": "YulFunctionDefinition",
												"src": "4594:127:10"
											},
											{
												"body": {
													"nativeSrc": "4774:77:10",
													"nodeType": "YulBlock",
													"src": "4774:77:10",
													"statements": [
														{
															"nativeSrc": "4784:16:10",
															"nodeType": "YulAssignment",
															"src": "4784:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4795:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4795:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4798:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4798:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4791:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4791:3:10"
																},
																"nativeSrc": "4791:9:10",
																"nodeType": "YulFunctionCall",
																"src": "4791:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4784:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4784:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4823:22:10",
																"nodeType": "YulBlock",
																"src": "4823:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4825:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4825:16:10"
																			},
																			"nativeSrc": "4825:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4825:18:10"
																		},
																		"nativeSrc": "4825:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4825:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4815:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4815:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4818:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4818:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4812:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4812:2:10"
																},
																"nativeSrc": "4812:10:10",
																"nodeType": "YulFunctionCall",
																"src": "4812:10:10"
															},
															"nativeSrc": "4809:36:10",
															"nodeType": "YulIf",
															"src": "4809:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4726:125:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4757:1:10",
														"nodeType": "YulTypedName",
														"src": "4757:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4760:1:10",
														"nodeType": "YulTypedName",
														"src": "4760:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4766:3:10",
														"nodeType": "YulTypedName",
														"src": "4766:3:10",
														"type": ""
													}
												],
												"src": "4726:125:10"
											},
											{
												"body": {
													"nativeSrc": "4908:116:10",
													"nodeType": "YulBlock",
													"src": "4908:116:10",
													"statements": [
														{
															"nativeSrc": "4918:20:10",
															"nodeType": "YulAssignment",
															"src": "4918:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4933:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4933:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4936:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4936:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4929:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:10"
																},
																"nativeSrc": "4929:9:10",
																"nodeType": "YulFunctionCall",
																"src": "4929:9:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4918:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4918:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4996:22:10",
																"nodeType": "YulBlock",
																"src": "4996:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4998:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4998:16:10"
																			},
																			"nativeSrc": "4998:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4998:18:10"
																		},
																		"nativeSrc": "4998:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4998:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4967:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "4967:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4960:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4960:6:10"
																				},
																				"nativeSrc": "4960:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4960:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4974:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "4974:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4981:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "4981:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4990:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "4990:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4977:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "4977:3:10"
																						},
																						"nativeSrc": "4977:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "4977:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4971:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "4971:2:10"
																				},
																				"nativeSrc": "4971:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4971:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4957:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4957:2:10"
																		},
																		"nativeSrc": "4957:37:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4957:37:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4950:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4950:6:10"
																},
																"nativeSrc": "4950:45:10",
																"nodeType": "YulFunctionCall",
																"src": "4950:45:10"
															},
															"nativeSrc": "4947:71:10",
															"nodeType": "YulIf",
															"src": "4947:71:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4856:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4887:1:10",
														"nodeType": "YulTypedName",
														"src": "4887:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4890:1:10",
														"nodeType": "YulTypedName",
														"src": "4890:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4896:7:10",
														"nodeType": "YulTypedName",
														"src": "4896:7:10",
														"type": ""
													}
												],
												"src": "4856:168:10"
											},
											{
												"body": {
													"nativeSrc": "5075:171:10",
													"nodeType": "YulBlock",
													"src": "5075:171:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5106:111:10",
																"nodeType": "YulBlock",
																"src": "5106:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5127:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5127:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5134:3:10",
																							"nodeType": "YulLiteral",
																							"src": "5134:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5139:10:10",
																							"nodeType": "YulLiteral",
																							"src": "5139:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5130:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5130:3:10"
																					},
																					"nativeSrc": "5130:20:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5130:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5120:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5120:6:10"
																			},
																			"nativeSrc": "5120:31:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5120:31:10"
																		},
																		"nativeSrc": "5120:31:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5120:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5171:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5171:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5174:4:10",
																					"nodeType": "YulLiteral",
																					"src": "5174:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5164:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5164:6:10"
																			},
																			"nativeSrc": "5164:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5164:15:10"
																		},
																		"nativeSrc": "5164:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5164:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5199:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5199:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5202:4:10",
																					"nodeType": "YulLiteral",
																					"src": "5202:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5192:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5192:6:10"
																			},
																			"nativeSrc": "5192:15:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5192:15:10"
																		},
																		"nativeSrc": "5192:15:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5192:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5095:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5095:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5088:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5088:6:10"
																},
																"nativeSrc": "5088:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5088:9:10"
															},
															"nativeSrc": "5085:132:10",
															"nodeType": "YulIf",
															"src": "5085:132:10"
														},
														{
															"nativeSrc": "5226:14:10",
															"nodeType": "YulAssignment",
															"src": "5226:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5235:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5235:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5238:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5238:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5231:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5231:3:10"
																},
																"nativeSrc": "5231:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5231:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5226:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "5226:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5029:217:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5060:1:10",
														"nodeType": "YulTypedName",
														"src": "5060:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5063:1:10",
														"nodeType": "YulTypedName",
														"src": "5063:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5069:1:10",
														"nodeType": "YulTypedName",
														"src": "5069:1:10",
														"type": ""
													}
												],
												"src": "5029:217:10"
											},
											{
												"body": {
													"nativeSrc": "5425:225:10",
													"nodeType": "YulBlock",
													"src": "5425:225:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5442:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5442:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5453:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5453:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5435:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5435:6:10"
																},
																"nativeSrc": "5435:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5435:21:10"
															},
															"nativeSrc": "5435:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "5435:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5476:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5476:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5487:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5487:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5472:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5472:3:10"
																		},
																		"nativeSrc": "5472:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5472:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5492:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5492:2:10",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5465:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5465:6:10"
																},
																"nativeSrc": "5465:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5465:30:10"
															},
															"nativeSrc": "5465:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "5465:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5515:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5515:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5526:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5526:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5511:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5511:3:10"
																		},
																		"nativeSrc": "5511:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5511:18:10"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768207061796d656e74546f6b656e20696e20636f6e7472",
																		"kind": "string",
																		"nativeSrc": "5531:34:10",
																		"nodeType": "YulLiteral",
																		"src": "5531:34:10",
																		"type": "",
																		"value": "Not enough paymentToken in contr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5504:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5504:6:10"
																},
																"nativeSrc": "5504:62:10",
																"nodeType": "YulFunctionCall",
																"src": "5504:62:10"
															},
															"nativeSrc": "5504:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "5504:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5586:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5586:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5597:2:10",
																				"nodeType": "YulLiteral",
																				"src": "5597:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5582:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5582:3:10"
																		},
																		"nativeSrc": "5582:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5582:18:10"
																	},
																	{
																		"hexValue": "616374",
																		"kind": "string",
																		"nativeSrc": "5602:5:10",
																		"nodeType": "YulLiteral",
																		"src": "5602:5:10",
																		"type": "",
																		"value": "act"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5575:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5575:6:10"
																},
																"nativeSrc": "5575:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5575:33:10"
															},
															"nativeSrc": "5575:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "5575:33:10"
														},
														{
															"nativeSrc": "5617:27:10",
															"nodeType": "YulAssignment",
															"src": "5617:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5629:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5629:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5640:3:10",
																		"nodeType": "YulLiteral",
																		"src": "5640:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5625:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:10"
																},
																"nativeSrc": "5625:19:10",
																"nodeType": "YulFunctionCall",
																"src": "5625:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5617:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5617:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eaf628f11a54761137ed574496fc110ea1e71577aa5ec115c8b8bea70ec3328b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5251:399:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5402:9:10",
														"nodeType": "YulTypedName",
														"src": "5402:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5416:4:10",
														"nodeType": "YulTypedName",
														"src": "5416:4:10",
														"type": ""
													}
												],
												"src": "5251:399:10"
											},
											{
												"body": {
													"nativeSrc": "5704:79:10",
													"nodeType": "YulBlock",
													"src": "5704:79:10",
													"statements": [
														{
															"nativeSrc": "5714:17:10",
															"nodeType": "YulAssignment",
															"src": "5714:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5726:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5726:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5729:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5729:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5722:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5722:3:10"
																},
																"nativeSrc": "5722:9:10",
																"nodeType": "YulFunctionCall",
																"src": "5722:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5714:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5714:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5755:22:10",
																"nodeType": "YulBlock",
																"src": "5755:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5757:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5757:16:10"
																			},
																			"nativeSrc": "5757:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5757:18:10"
																		},
																		"nativeSrc": "5757:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5757:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5746:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5746:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5752:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "5752:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5743:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5743:2:10"
																},
																"nativeSrc": "5743:11:10",
																"nodeType": "YulFunctionCall",
																"src": "5743:11:10"
															},
															"nativeSrc": "5740:37:10",
															"nodeType": "YulIf",
															"src": "5740:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5655:128:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5686:1:10",
														"nodeType": "YulTypedName",
														"src": "5686:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5689:1:10",
														"nodeType": "YulTypedName",
														"src": "5689:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5695:4:10",
														"nodeType": "YulTypedName",
														"src": "5695:4:10",
														"type": ""
													}
												],
												"src": "5655:128:10"
											},
											{
												"body": {
													"nativeSrc": "5917:119:10",
													"nodeType": "YulBlock",
													"src": "5917:119:10",
													"statements": [
														{
															"nativeSrc": "5927:26:10",
															"nodeType": "YulAssignment",
															"src": "5927:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5939:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5939:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5950:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5950:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5935:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5935:3:10"
																},
																"nativeSrc": "5935:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5935:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5927:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5927:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5969:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5969:9:10"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5980:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5980:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5962:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5962:6:10"
																},
																"nativeSrc": "5962:25:10",
																"nodeType": "YulFunctionCall",
																"src": "5962:25:10"
															},
															"nativeSrc": "5962:25:10",
															"nodeType": "YulExpressionStatement",
															"src": "5962:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6007:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6007:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6018:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6018:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6003:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6003:3:10"
																		},
																		"nativeSrc": "6003:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:18:10"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6023:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6023:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5996:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5996:6:10"
																},
																"nativeSrc": "5996:34:10",
																"nodeType": "YulFunctionCall",
																"src": "5996:34:10"
															},
															"nativeSrc": "5996:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "5996:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5788:248:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5878:9:10",
														"nodeType": "YulTypedName",
														"src": "5878:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5889:6:10",
														"nodeType": "YulTypedName",
														"src": "5889:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5897:6:10",
														"nodeType": "YulTypedName",
														"src": "5897:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5908:4:10",
														"nodeType": "YulTypedName",
														"src": "5908:4:10",
														"type": ""
													}
												],
												"src": "5788:248:10"
											},
											{
												"body": {
													"nativeSrc": "6215:170:10",
													"nodeType": "YulBlock",
													"src": "6215:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6232:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6232:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6243:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6243:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6225:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6225:6:10"
																},
																"nativeSrc": "6225:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6225:21:10"
															},
															"nativeSrc": "6225:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6225:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6266:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6266:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6277:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6277:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6262:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6262:3:10"
																		},
																		"nativeSrc": "6262:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6282:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6282:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6255:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:10"
																},
																"nativeSrc": "6255:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6255:30:10"
															},
															"nativeSrc": "6255:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6255:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6305:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6305:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6316:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6316:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6301:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6301:3:10"
																		},
																		"nativeSrc": "6301:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6301:18:10"
																	},
																	{
																		"hexValue": "496e76616c6964207072656d69756d2072617465",
																		"kind": "string",
																		"nativeSrc": "6321:22:10",
																		"nodeType": "YulLiteral",
																		"src": "6321:22:10",
																		"type": "",
																		"value": "Invalid premium rate"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6294:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6294:6:10"
																},
																"nativeSrc": "6294:50:10",
																"nodeType": "YulFunctionCall",
																"src": "6294:50:10"
															},
															"nativeSrc": "6294:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "6294:50:10"
														},
														{
															"nativeSrc": "6353:26:10",
															"nodeType": "YulAssignment",
															"src": "6353:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6365:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6365:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6376:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6376:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6361:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6361:3:10"
																},
																"nativeSrc": "6361:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6361:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6353:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6353:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ddbcae46186cf25f9e3ee8796d279e9031af56c8275071f75dfd014ec7d6358c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6041:344:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6192:9:10",
														"nodeType": "YulTypedName",
														"src": "6192:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6206:4:10",
														"nodeType": "YulTypedName",
														"src": "6206:4:10",
														"type": ""
													}
												],
												"src": "6041:344:10"
											},
											{
												"body": {
													"nativeSrc": "6564:169:10",
													"nodeType": "YulBlock",
													"src": "6564:169:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6581:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6581:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6592:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6592:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6574:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6574:6:10"
																},
																"nativeSrc": "6574:21:10",
																"nodeType": "YulFunctionCall",
																"src": "6574:21:10"
															},
															"nativeSrc": "6574:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "6574:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6615:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6615:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6626:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6626:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6611:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6611:3:10"
																		},
																		"nativeSrc": "6611:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6611:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6631:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6631:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6604:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6604:6:10"
																},
																"nativeSrc": "6604:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6604:30:10"
															},
															"nativeSrc": "6604:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6604:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6654:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6654:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6665:2:10",
																				"nodeType": "YulLiteral",
																				"src": "6665:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:10"
																		},
																		"nativeSrc": "6650:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:18:10"
																	},
																	{
																		"hexValue": "4465706f736974206d757374206265203e2030",
																		"kind": "string",
																		"nativeSrc": "6670:21:10",
																		"nodeType": "YulLiteral",
																		"src": "6670:21:10",
																		"type": "",
																		"value": "Deposit must be > 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6643:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:10"
																},
																"nativeSrc": "6643:49:10",
																"nodeType": "YulFunctionCall",
																"src": "6643:49:10"
															},
															"nativeSrc": "6643:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "6643:49:10"
														},
														{
															"nativeSrc": "6701:26:10",
															"nodeType": "YulAssignment",
															"src": "6701:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6713:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6713:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6724:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6724:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6709:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6709:3:10"
																},
																"nativeSrc": "6709:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6709:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6701:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6701:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_413580c2bed8f5997e496999aeae2d0944cef34dd07600d725723cfeb9a27018__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6390:343:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6541:9:10",
														"nodeType": "YulTypedName",
														"src": "6541:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6555:4:10",
														"nodeType": "YulTypedName",
														"src": "6555:4:10",
														"type": ""
													}
												],
												"src": "6390:343:10"
											},
											{
												"body": {
													"nativeSrc": "6895:214:10",
													"nodeType": "YulBlock",
													"src": "6895:214:10",
													"statements": [
														{
															"nativeSrc": "6905:26:10",
															"nodeType": "YulAssignment",
															"src": "6905:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6917:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6917:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6928:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6928:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6913:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6913:3:10"
																},
																"nativeSrc": "6913:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6913:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6905:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6905:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6947:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6947:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6962:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6962:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6978:3:10",
																								"nodeType": "YulLiteral",
																								"src": "6978:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6983:1:10",
																								"nodeType": "YulLiteral",
																								"src": "6983:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6974:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6974:3:10"
																						},
																						"nativeSrc": "6974:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6974:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6987:1:10",
																						"nodeType": "YulLiteral",
																						"src": "6987:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6970:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6970:3:10"
																				},
																				"nativeSrc": "6970:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6970:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6958:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:10"
																		},
																		"nativeSrc": "6958:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6958:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6940:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:10"
																},
																"nativeSrc": "6940:51:10",
																"nodeType": "YulFunctionCall",
																"src": "6940:51:10"
															},
															"nativeSrc": "6940:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "6940:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7011:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7011:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7022:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7022:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7007:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7007:3:10"
																		},
																		"nativeSrc": "7007:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7007:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7031:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7031:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7047:3:10",
																								"nodeType": "YulLiteral",
																								"src": "7047:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7052:1:10",
																								"nodeType": "YulLiteral",
																								"src": "7052:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7043:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "7043:3:10"
																						},
																						"nativeSrc": "7043:11:10",
																						"nodeType": "YulFunctionCall",
																						"src": "7043:11:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7056:1:10",
																						"nodeType": "YulLiteral",
																						"src": "7056:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7039:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7039:3:10"
																				},
																				"nativeSrc": "7039:19:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7039:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7027:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7027:3:10"
																		},
																		"nativeSrc": "7027:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7027:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7000:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7000:6:10"
																},
																"nativeSrc": "7000:60:10",
																"nodeType": "YulFunctionCall",
																"src": "7000:60:10"
															},
															"nativeSrc": "7000:60:10",
															"nodeType": "YulExpressionStatement",
															"src": "7000:60:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7080:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7080:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7091:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7091:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7076:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7076:3:10"
																		},
																		"nativeSrc": "7076:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7076:18:10"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7096:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7096:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7069:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7069:6:10"
																},
																"nativeSrc": "7069:34:10",
																"nodeType": "YulFunctionCall",
																"src": "7069:34:10"
															},
															"nativeSrc": "7069:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "7069:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6738:371:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6848:9:10",
														"nodeType": "YulTypedName",
														"src": "6848:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6859:6:10",
														"nodeType": "YulTypedName",
														"src": "6859:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6867:6:10",
														"nodeType": "YulTypedName",
														"src": "6867:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6875:6:10",
														"nodeType": "YulTypedName",
														"src": "6875:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6886:4:10",
														"nodeType": "YulTypedName",
														"src": "6886:4:10",
														"type": ""
													}
												],
												"src": "6738:371:10"
											},
											{
												"body": {
													"nativeSrc": "7288:178:10",
													"nodeType": "YulBlock",
													"src": "7288:178:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7305:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7305:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7316:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7316:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7298:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:10"
																},
																"nativeSrc": "7298:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7298:21:10"
															},
															"nativeSrc": "7298:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7298:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7339:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7339:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7350:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7350:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7335:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7335:3:10"
																		},
																		"nativeSrc": "7335:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7335:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7355:2:10",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7328:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7328:6:10"
																},
																"nativeSrc": "7328:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7328:30:10"
															},
															"nativeSrc": "7328:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7328:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7378:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7378:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7389:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7389:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7374:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7374:3:10"
																		},
																		"nativeSrc": "7374:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7374:18:10"
																	},
																	{
																		"hexValue": "5061796d656e7420746f6b656e206465706f736974206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7394:30:10",
																		"nodeType": "YulLiteral",
																		"src": "7394:30:10",
																		"type": "",
																		"value": "Payment token deposit failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7367:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7367:6:10"
																},
																"nativeSrc": "7367:58:10",
																"nodeType": "YulFunctionCall",
																"src": "7367:58:10"
															},
															"nativeSrc": "7367:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "7367:58:10"
														},
														{
															"nativeSrc": "7434:26:10",
															"nodeType": "YulAssignment",
															"src": "7434:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7446:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7446:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7457:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7457:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7442:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7442:3:10"
																},
																"nativeSrc": "7442:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7442:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7434:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7434:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd9789bd50a2200c2c56ae184b05b7a27676b31a0a3efe942c8180da88e2a1b9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7114:352:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7265:9:10",
														"nodeType": "YulTypedName",
														"src": "7265:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7279:4:10",
														"nodeType": "YulTypedName",
														"src": "7279:4:10",
														"type": ""
													}
												],
												"src": "7114:352:10"
											},
											{
												"body": {
													"nativeSrc": "7645:162:10",
													"nodeType": "YulBlock",
													"src": "7645:162:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7662:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7662:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7673:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7673:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7655:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7655:6:10"
																},
																"nativeSrc": "7655:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7655:21:10"
															},
															"nativeSrc": "7655:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7655:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7696:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7696:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7707:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7707:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7692:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7692:3:10"
																		},
																		"nativeSrc": "7692:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7692:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7712:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7712:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7685:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7685:6:10"
																},
																"nativeSrc": "7685:30:10",
																"nodeType": "YulFunctionCall",
																"src": "7685:30:10"
															},
															"nativeSrc": "7685:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "7685:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7735:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7735:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7746:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7746:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7731:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7731:3:10"
																		},
																		"nativeSrc": "7731:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7731:18:10"
																	},
																	{
																		"hexValue": "54617820746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "7751:14:10",
																		"nodeType": "YulLiteral",
																		"src": "7751:14:10",
																		"type": "",
																		"value": "Tax too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7724:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7724:6:10"
																},
																"nativeSrc": "7724:42:10",
																"nodeType": "YulFunctionCall",
																"src": "7724:42:10"
															},
															"nativeSrc": "7724:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "7724:42:10"
														},
														{
															"nativeSrc": "7775:26:10",
															"nodeType": "YulAssignment",
															"src": "7775:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7787:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7787:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7798:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7783:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7783:3:10"
																},
																"nativeSrc": "7783:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7783:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7775:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7775:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7471:336:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7622:9:10",
														"nodeType": "YulTypedName",
														"src": "7622:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7636:4:10",
														"nodeType": "YulTypedName",
														"src": "7636:4:10",
														"type": ""
													}
												],
												"src": "7471:336:10"
											},
											{
												"body": {
													"nativeSrc": "7986:165:10",
													"nodeType": "YulBlock",
													"src": "7986:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8003:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8003:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8014:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8014:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7996:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7996:6:10"
																},
																"nativeSrc": "7996:21:10",
																"nodeType": "YulFunctionCall",
																"src": "7996:21:10"
															},
															"nativeSrc": "7996:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "7996:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8037:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8037:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8048:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8048:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8033:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8033:3:10"
																		},
																		"nativeSrc": "8033:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8033:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8053:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8053:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8026:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8026:6:10"
																},
																"nativeSrc": "8026:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8026:30:10"
															},
															"nativeSrc": "8026:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8026:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8076:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8076:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8087:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8087:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8072:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8072:3:10"
																		},
																		"nativeSrc": "8072:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8072:18:10"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "8092:17:10",
																		"nodeType": "YulLiteral",
																		"src": "8092:17:10",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8065:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8065:6:10"
																},
																"nativeSrc": "8065:45:10",
																"nodeType": "YulFunctionCall",
																"src": "8065:45:10"
															},
															"nativeSrc": "8065:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "8065:45:10"
														},
														{
															"nativeSrc": "8119:26:10",
															"nodeType": "YulAssignment",
															"src": "8119:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8131:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8131:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8142:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8142:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8127:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:10"
																},
																"nativeSrc": "8127:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8127:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8119:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8119:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7812:339:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7963:9:10",
														"nodeType": "YulTypedName",
														"src": "7963:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7977:4:10",
														"nodeType": "YulTypedName",
														"src": "7977:4:10",
														"type": ""
													}
												],
												"src": "7812:339:10"
											},
											{
												"body": {
													"nativeSrc": "8330:182:10",
													"nodeType": "YulBlock",
													"src": "8330:182:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8347:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8347:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8358:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8358:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8340:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8340:6:10"
																},
																"nativeSrc": "8340:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8340:21:10"
															},
															"nativeSrc": "8340:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8340:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8381:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8381:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8392:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8392:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8377:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8377:3:10"
																		},
																		"nativeSrc": "8377:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8377:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8397:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8397:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8370:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8370:6:10"
																},
																"nativeSrc": "8370:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8370:30:10"
															},
															"nativeSrc": "8370:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8370:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8420:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8420:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8431:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8431:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8416:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8416:3:10"
																		},
																		"nativeSrc": "8416:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8416:18:10"
																	},
																	{
																		"hexValue": "4e6577206f776e65722063616e6e6f74206265207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "8436:34:10",
																		"nodeType": "YulLiteral",
																		"src": "8436:34:10",
																		"type": "",
																		"value": "New owner cannot be zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8409:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8409:6:10"
																},
																"nativeSrc": "8409:62:10",
																"nodeType": "YulFunctionCall",
																"src": "8409:62:10"
															},
															"nativeSrc": "8409:62:10",
															"nodeType": "YulExpressionStatement",
															"src": "8409:62:10"
														},
														{
															"nativeSrc": "8480:26:10",
															"nodeType": "YulAssignment",
															"src": "8480:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8492:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8492:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8503:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8503:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8488:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8488:3:10"
																},
																"nativeSrc": "8488:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8488:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8480:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8480:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8156:356:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8307:9:10",
														"nodeType": "YulTypedName",
														"src": "8307:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8321:4:10",
														"nodeType": "YulTypedName",
														"src": "8321:4:10",
														"type": ""
													}
												],
												"src": "8156:356:10"
											},
											{
												"body": {
													"nativeSrc": "8691:170:10",
													"nodeType": "YulBlock",
													"src": "8691:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8708:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8708:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8719:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8719:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8701:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8701:6:10"
																},
																"nativeSrc": "8701:21:10",
																"nodeType": "YulFunctionCall",
																"src": "8701:21:10"
															},
															"nativeSrc": "8701:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "8701:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8742:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8742:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8753:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8753:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8738:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8738:3:10"
																		},
																		"nativeSrc": "8738:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8738:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8758:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8758:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8731:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8731:6:10"
																},
																"nativeSrc": "8731:30:10",
																"nodeType": "YulFunctionCall",
																"src": "8731:30:10"
															},
															"nativeSrc": "8731:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "8731:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8781:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8781:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8792:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8792:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8777:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8777:3:10"
																		},
																		"nativeSrc": "8777:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8777:18:10"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "8797:22:10",
																		"nodeType": "YulLiteral",
																		"src": "8797:22:10",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8770:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8770:6:10"
																},
																"nativeSrc": "8770:50:10",
																"nodeType": "YulFunctionCall",
																"src": "8770:50:10"
															},
															"nativeSrc": "8770:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "8770:50:10"
														},
														{
															"nativeSrc": "8829:26:10",
															"nodeType": "YulAssignment",
															"src": "8829:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8841:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8841:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8852:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8852:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8837:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8837:3:10"
																},
																"nativeSrc": "8837:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8837:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8829:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8829:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8517:344:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8668:9:10",
														"nodeType": "YulTypedName",
														"src": "8668:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8682:4:10",
														"nodeType": "YulTypedName",
														"src": "8682:4:10",
														"type": ""
													}
												],
												"src": "8517:344:10"
											},
											{
												"body": {
													"nativeSrc": "9040:181:10",
													"nodeType": "YulBlock",
													"src": "9040:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9057:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9057:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9068:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9068:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9050:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9050:6:10"
																},
																"nativeSrc": "9050:21:10",
																"nodeType": "YulFunctionCall",
																"src": "9050:21:10"
															},
															"nativeSrc": "9050:21:10",
															"nodeType": "YulExpressionStatement",
															"src": "9050:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9091:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9091:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9102:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9102:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9087:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9087:3:10"
																		},
																		"nativeSrc": "9087:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9087:18:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9107:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9107:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9080:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9080:6:10"
																},
																"nativeSrc": "9080:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9080:30:10"
															},
															"nativeSrc": "9080:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9080:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9130:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9130:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9141:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9141:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9126:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9126:3:10"
																		},
																		"nativeSrc": "9126:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9126:18:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "9146:33:10",
																		"nodeType": "YulLiteral",
																		"src": "9146:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9119:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9119:6:10"
																},
																"nativeSrc": "9119:61:10",
																"nodeType": "YulFunctionCall",
																"src": "9119:61:10"
															},
															"nativeSrc": "9119:61:10",
															"nodeType": "YulExpressionStatement",
															"src": "9119:61:10"
														},
														{
															"nativeSrc": "9189:26:10",
															"nodeType": "YulAssignment",
															"src": "9189:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9201:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9201:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9212:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9212:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9197:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9197:3:10"
																},
																"nativeSrc": "9197:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9197:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9189:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9189:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8866:355:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9017:9:10",
														"nodeType": "YulTypedName",
														"src": "9017:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9031:4:10",
														"nodeType": "YulTypedName",
														"src": "9031:4:10",
														"type": ""
													}
												],
												"src": "8866:355:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee2d865cbfb98f3aa18b0fbfcc15018e3b00b014b5386b45ac30273e2190b116__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Withdraw must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Not enough tokens in contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fe8dfe2c977a8ed5a83423be8eb90a0f19b94c075c6783f35429a67843701ecd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Payment token withdrawal failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80d292cb0bbfe8a121f50ca8272137bc0920ac915af91920e9451b3f9678aeea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Must deposit RoboMoney\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_d4b03365d388099750ed6c970686ed6d0cbebc1f630a55a1dfd7c9c24d504ee8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Insufficient RoboMoney allowance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_eaf628f11a54761137ed574496fc110ea1e71577aa5ec115c8b8bea70ec3328b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Not enough paymentToken in contr\")\n        mstore(add(headStart, 96), \"act\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ddbcae46186cf25f9e3ee8796d279e9031af56c8275071f75dfd014ec7d6358c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid premium rate\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_413580c2bed8f5997e496999aeae2d0944cef34dd07600d725723cfeb9a27018__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Deposit must be > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_bd9789bd50a2200c2c56ae184b05b7a27676b31a0a3efe942c8180da88e2a1b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Payment token deposit failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Tax too high\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"New owner cannot be zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610132575f3560e01c8063839ea2d9116100b4578063c6d69a3011610079578063c6d69a301461024e578063ce1d1f1f14610261578063d4a49c1714610269578063dc38679c1461027c578063eea7570e14610285578063f2fde38b14610298575f5ffd5b8063839ea2d9146102055780638456cb59146102185780638da5cb5b146102205780639063ee20146102335780639e9aed6214610246575f5ffd5b80636a64eff8116100fa5780636a64eff8146101b0578063771a3a1d146101c357806379a9fa1c146101cc5780637ef7ba20146101df5780637ff8b57a146101f2575f5ffd5b806307e675fa146101365780633013ce291461014b5780633f4ba83a1461017b5780635c975abb146101835780635d0040d314610199575b5f5ffd5b610149610144366004611129565b6102ab565b005b60035461015e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6101496104ae565b5f5460ff165b6040519015158152602001610172565b6101a260065481565b604051908152602001610172565b6101496101be366004611129565b6104e2565b6101a260085481565b6101496101da366004611129565b610511565b60045461015e906001600160a01b031681565b610149610200366004611129565b610885565b610189610213366004611129565b6108fc565b6101496109c2565b60025461015e906001600160a01b031681565b610149610241366004611129565b6109f4565b6101a2610b50565b61014961025c366004611129565b610bbf565b6101a2610c6b565b610149610277366004611140565b610d39565b6101a260075481565b60055461015e906001600160a01b031681565b6101496102a6366004611140565b610e06565b6002546001600160a01b031633146102de5760405162461bcd60e51b81526004016102d59061116d565b60405180910390fd5b5f81116103245760405162461bcd60e51b815260206004820152601460248201527305769746864726177206d757374206265203e20360641b60448201526064016102d5565b6003546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa15801561036a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061038e9190611195565b9050808211156103e05760405162461bcd60e51b815260206004820152601d60248201527f4e6f7420656e6f75676820746f6b656e7320696e20636f6e747261637400000060448201526064016102d5565b60035460025460405163a9059cbb60e01b81526001600160a01b039182166004820152602481018590525f92919091169063a9059cbb906044016020604051808303815f875af1158015610436573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061045a91906111ac565b9050806104a95760405162461bcd60e51b815260206004820152601f60248201527f5061796d656e7420746f6b656e207769746864726177616c206661696c65640060448201526064016102d5565b505050565b6002546001600160a01b031633146104d85760405162461bcd60e51b81526004016102d59061116d565b6104e0610ee1565b565b6002546001600160a01b0316331461050c5760405162461bcd60e51b81526004016102d59061116d565b600755565b5f5460ff16156105335760405162461bcd60e51b81526004016102d5906111cb565b61053b610f68565b5f81116105835760405162461bcd60e51b81526020600482015260166024820152754d757374206465706f73697420526f626f4d6f6e657960501b60448201526064016102d5565b60048054604051636eb1769f60e11b815233928101929092523060248301525f916001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156105d4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105f89190611195565b90508181101561064a5760405162461bcd60e51b815260206004820181905260248201527f496e73756666696369656e7420526f626f4d6f6e657920616c6c6f77616e636560448201526064016102d5565b600454610662906001600160a01b0316333085610fc1565b5f606460065460646106749190611209565b6007546106819190611222565b61068b9190611239565b90505f670de0b6b3a76400006106a18386611222565b6106ab9190611239565b6003546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa1580156106f6573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061071a9190611195565b9050818110156107785760405162461bcd60e51b815260206004820152602360248201527f4e6f7420656e6f756768207061796d656e74546f6b656e20696e20636f6e74726044820152621858dd60ea1b60648201526084016102d5565b5f6127106008548461078a9190611222565b6107949190611239565b90505f6107a18285611258565b6005546003549192506107c1916001600160a01b0390811691168461102e565b6003546107d8906001600160a01b0316338361102e565b60048054604051632770a7eb60e21b81523092810192909252602482018990526001600160a01b031690639dc29fac906044015f604051808303815f87803b158015610822575f5ffd5b505af1158015610834573d5f5f3e3d5ffd5b5050604080518a8152602081018890523393507fcb7f55d0b91628d4520b789339dae4803ab07182ea89d138acbd965dac51dc6592500160405180910390a250505050505061088260018055565b50565b6002546001600160a01b031633146108af5760405162461bcd60e51b81526004016102d59061116d565b60648111156108f75760405162461bcd60e51b8152602060048201526014602482015273496e76616c6964207072656d69756d207261746560601b60448201526064016102d5565b600655565b5f5f6064600654606461090f9190611209565b60075461091c9190611222565b6109269190611239565b90505f670de0b6b3a764000061093c8386611222565b6109469190611239565b6003546040516370a0823160e01b81523060048201529192505f916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610991573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b59190611195565b9190911015949350505050565b6002546001600160a01b031633146109ec5760405162461bcd60e51b81526004016102d59061116d565b6104e061105f565b6002546001600160a01b03163314610a1e5760405162461bcd60e51b81526004016102d59061116d565b5f5460ff1615610a405760405162461bcd60e51b81526004016102d5906111cb565b5f8111610a855760405162461bcd60e51b815260206004820152601360248201527204465706f736974206d757374206265203e203606c1b60448201526064016102d5565b6003546040516323b872dd60e01b8152336004820152306024820152604481018390525f916001600160a01b0316906323b872dd906064016020604051808303815f875af1158015610ad9573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610afd91906111ac565b905080610b4c5760405162461bcd60e51b815260206004820152601c60248201527f5061796d656e7420746f6b656e206465706f736974206661696c65640000000060448201526064016102d5565b5050565b6003546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b96573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bba9190611195565b905090565b6002546001600160a01b03163314610be95760405162461bcd60e51b81526004016102d59061116d565b6103e8811115610c2a5760405162461bcd60e51b815260206004820152600c60248201526b0a8c2f040e8dede40d0d2ced60a31b60448201526064016102d5565b60085460408051918252602082018390527fa8ee157eb2a9aa895d74df4d2d3bc0ad165ff3162f8ec46a4ecf602dd5c48fda910160405180910390a1600855565b6003546040516370a0823160e01b81523060048201525f9182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cb5573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cd99190611195565b90505f60646006546064610ced9190611209565b600754610cfa9190611222565b610d049190611239565b9050805f03610d15575f9250505090565b80610d2883670de0b6b3a7640000611222565b610d329190611239565b9250505090565b6002546001600160a01b03163314610d635760405162461bcd60e51b81526004016102d59061116d565b6001600160a01b038116610dab5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064016102d5565b6005546040516001600160a01b038084169216907fb4281bb17cdc594e3cf6d419da95f70a6b02d856b26438d381ee1246a8e89f12905f90a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b6002546001600160a01b03163314610e305760405162461bcd60e51b81526004016102d59061116d565b6001600160a01b038116610e865760405162461bcd60e51b815260206004820181905260248201527f4e6577206f776e65722063616e6e6f74206265207a65726f206164647265737360448201526064016102d5565b6002546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b5f5460ff16610f295760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102d5565b5f805460ff191690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b600260015403610fba5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102d5565b6002600155565b6040516001600160a01b0384811660248301528381166044830152606482018390526110289186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506110bd565b50505050565b6040516001600160a01b038381166024830152604482018390526104a991859182169063a9059cbb90606401610ff6565b5f5460ff16156110815760405162461bcd60e51b81526004016102d5906111cb565b5f805460ff191660011790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25890602001610f5e565b5f5f60205f8451602086015f885af1806110dc576040513d5f823e3d81fd5b50505f513d915081156110f3578060011415611100565b6001600160a01b0384163b155b1561102857604051635274afe760e01b81526001600160a01b03851660048201526024016102d5565b5f60208284031215611139575f5ffd5b5035919050565b5f60208284031215611150575f5ffd5b81356001600160a01b0381168114611166575f5ffd5b9392505050565b6020808252600e908201526d139bdd08185d5d1a1bdc9a5e995960921b604082015260600190565b5f602082840312156111a5575f5ffd5b5051919050565b5f602082840312156111bc575f5ffd5b81518015158114611166575f5ffd5b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561121c5761121c6111f5565b92915050565b808202811582820484141761121c5761121c6111f5565b5f8261125357634e487b7160e01b5f52601260045260245ffd5b500490565b8181038181111561121c5761121c6111f556fea2646970667358221220a5b0c788fff17ecdc5cfae3ea7428ed550f741409bdcec4dfd35e0051f14d42d64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x839EA2D9 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xC6D69A30 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xC6D69A30 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0xCE1D1F1F EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xD4A49C17 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xDC38679C EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xEEA7570E EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x298 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x839EA2D9 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x9063EE20 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x9E9AED62 EQ PUSH2 0x246 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6A64EFF8 GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x6A64EFF8 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x79A9FA1C EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x7EF7BA20 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x7FF8B57A EQ PUSH2 0x1F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x7E675FA EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x17B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x5D0040D3 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x2AB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x149 PUSH2 0x4AE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x1A2 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x172 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x1BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST PUSH2 0x1A2 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x511 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x200 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x885 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST PUSH2 0x149 PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0xB50 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x1A2 PUSH2 0xC6B JUMP JUMPDEST PUSH2 0x149 PUSH2 0x277 CALLDATASIZE PUSH1 0x4 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0xD39 JUMP JUMPDEST PUSH2 0x1A2 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x15E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0xE06 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5769746864726177206D757374206265203E203 PUSH1 0x64 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x36A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38E SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E20636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x436 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x45A SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x4A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420746F6B656E207769746864726177616C206661696C656400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0xEE1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x533 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH2 0x53B PUSH2 0xF68 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x583 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4D757374206465706F73697420526F626F4D6F6E6579 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5D4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F8 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420526F626F4D6F6E657920616C6C6F77616E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x662 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER ADDRESS DUP6 PUSH2 0xFC1 JUMP JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD PUSH1 0x64 PUSH2 0x674 SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x68B SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x6A1 DUP4 DUP7 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6F6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71A SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768207061796D656E74546F6B656E20696E20636F6E7472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1858DD PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x8 SLOAD DUP5 PUSH2 0x78A SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x794 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x7A1 DUP3 DUP6 PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x3 SLOAD SWAP2 SWAP3 POP PUSH2 0x7C1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP5 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x7D8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP4 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x822 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x834 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD DUP11 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE CALLER SWAP4 POP PUSH32 0xCB7F55D0B91628D4520B789339DAE4803AB07182EA89D138ACBD965DAC51DC65 SWAP3 POP ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP PUSH2 0x882 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x8F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964207072656D69756D2072617465 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD PUSH1 0x64 PUSH2 0x90F SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x93C DUP4 DUP7 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x946 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x991 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B5 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 LT ISZERO SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x4E0 PUSH2 0x105F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xA85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4465706F736974206D757374206265203E203 PUSH1 0x6C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAD9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAFD SWAP2 SWAP1 PUSH2 0x11AC JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xB4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061796D656E7420746F6B656E206465706F736974206661696C656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB96 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBBA SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x3E8 DUP2 GT ISZERO PUSH2 0xC2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0xA8C2F040E8DEDE40D0D2CED PUSH1 0xA3 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xA8EE157EB2A9AA895D74DF4D2D3BC0AD165FF3162F8EC46A4ECF602DD5C48FDA SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCB5 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCD9 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0x6 SLOAD PUSH1 0x64 PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0xD04 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 SUB PUSH2 0xD15 JUMPI PUSH0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP1 PUSH2 0xD28 DUP4 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1222 JUMP JUMPDEST PUSH2 0xD32 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0xB4281BB17CDC594E3CF6D419DA95F70A6B02D856B26438D381EE1246A8E89F12 SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6577206F776E65722063616E6E6F74206265207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0xFBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP4 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x1028 SWAP2 DUP7 SWAP2 DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x10BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE PUSH2 0x4A9 SWAP2 DUP6 SWAP2 DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x64 ADD PUSH2 0xFF6 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1081 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x11CB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 SWAP1 PUSH1 0x20 ADD PUSH2 0xF5E JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x10DC JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST POP POP PUSH0 MLOAD RETURNDATASIZE SWAP2 POP DUP2 ISZERO PUSH2 0x10F3 JUMPI DUP1 PUSH1 0x1 EQ ISZERO PUSH2 0x1100 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1028 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x2D5 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1139 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1150 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11A5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x121C JUMPI PUSH2 0x121C PUSH2 0x11F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x121C JUMPI PUSH2 0x121C PUSH2 0x11F5 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1253 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x121C JUMPI PUSH2 0x121C PUSH2 0x11F5 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xB0 0xC7 DUP9 SELFDESTRUCT CALL PUSH31 0xCDC5CFAE3EA7428ED550F741409BDCEC4DFD35E0051F14D42D64736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "2873:7463:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8542:417;;;;;;:::i;:::-;;:::i;:::-;;2953:27;;;;;-1:-1:-1;;;;;2953:27:9;;;;;;-1:-1:-1;;;;;363:32:10;;;345:51;;333:2;318:18;2953:27:9;;;;;;;;4600:67;;;:::i;872:86::-;919:4;943:7;;;872:86;;;572:14:10;;565:22;547:41;;535:2;520:18;872:86:9;407:187:10;3273:26:9;;;;;;;;;745:25:10;;;733:2;718:18;3273:26:9;599:177:10;5082:110:9;;;;;;:::i;:::-;;:::i;3407:22::-;;;;;;5852:1520;;;;;;:::i;:::-;;:::i;3031:24::-;;;;;-1:-1:-1;;;;;3031:24:9;;;4759:225;;;;;;:::i;:::-;;:::i;9967:366::-;;;;;;:::i;:::-;;:::i;4435:63::-;;;:::i;2926:20::-;;;;;-1:-1:-1;;;;;2926:20:9;;;7566:292;;;;;;:::i;:::-;;:::i;9057:135::-;;;:::i;8114:207::-;;;;;;:::i;:::-;;:::i;9367:442::-;;;:::i;7866:240::-;;;;;;:::i;:::-;;:::i;3325:26::-;;;;;;3121:25;;;;;-1:-1:-1;;;;;3121:25:9;;;5261:230;;;;;;:::i;:::-;;:::i;8542:417::-;4293:5;;-1:-1:-1;;;;;4293:5:9;4279:10;:19;4271:46;;;;-1:-1:-1;;;4271:46:9;;;;;;;:::i;:::-;;;;;;;;;8635:1:::1;8626:6;:10;8618:43;;;::::0;-1:-1:-1;;;8618:43:9;;1617:2:10;8618:43:9::1;::::0;::::1;1599:21:10::0;1656:2;1636:18;;;1629:30;-1:-1:-1;;;1675:18:10;;;1668:50;1735:18;;8618:43:9::1;1415:344:10::0;8618:43:9::1;8704:12;::::0;8697:45:::1;::::0;-1:-1:-1;;;8697:45:9;;8736:4:::1;8697:45;::::0;::::1;345:51:10::0;8672:22:9::1;::::0;-1:-1:-1;;;;;8704:12:9::1;::::0;8697:30:::1;::::0;318:18:10;;8697:45:9::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8672:70;;8771:14;8761:6;:24;;8753:66;;;::::0;-1:-1:-1;;;8753:66:9;;2155:2:10;8753:66:9::1;::::0;::::1;2137:21:10::0;2194:2;2174:18;;;2167:30;2233:31;2213:18;;;2206:59;2282:18;;8753:66:9::1;1953:353:10::0;8753:66:9::1;8852:12;::::0;8875:5:::1;::::0;8845:44:::1;::::0;-1:-1:-1;;;8845:44:9;;-1:-1:-1;;;;;8875:5:9;;::::1;8845:44;::::0;::::1;2485:51:10::0;2552:18;;;2545:34;;;8830:12:9::1;::::0;8852;;;::::1;::::0;8845:29:::1;::::0;2458:18:10;;8845:44:9::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8830:59;;8908:7;8900:51;;;::::0;-1:-1:-1;;;8900:51:9;;3074:2:10;8900:51:9::1;::::0;::::1;3056:21:10::0;3113:2;3093:18;;;3086:30;3152:33;3132:18;;;3125:61;3203:18;;8900:51:9::1;2872:355:10::0;8900:51:9::1;8607:352;;8542:417:::0;:::o;4600:67::-;4293:5;;-1:-1:-1;;;;;4293:5:9;4279:10;:19;4271:46;;;;-1:-1:-1;;;4271:46:9;;;;;;;:::i;:::-;4649:10:::1;:8;:10::i;:::-;4600:67::o:0;5082:110::-;4293:5;;-1:-1:-1;;;;;4293:5:9;4279:10;:19;4271:46;;;;-1:-1:-1;;;4271:46:9;;;;;;;:::i;:::-;5158:11:::1;:26:::0;5082:110::o;5852:1520::-;919:4;943:7;;;1010:9;1002:38;;;;-1:-1:-1;;;1002:38:9;;;;;;;:::i;:::-;2261:21:3::1;:19;:21::i;:::-;5967:1:9::2;5949:15;:19;5941:54;;;::::0;-1:-1:-1;;;5941:54:9;;3779:2:10;5941:54:9::2;::::0;::::2;3761:21:10::0;3818:2;3798:18;;;3791:30;-1:-1:-1;;;3837:18:10;;;3830:52;3899:18;;5941:54:9::2;3577:346:10::0;5941:54:9::2;6079:9;::::0;;6068:58:::2;::::0;-1:-1:-1;;;6068:58:9;;6100:10:::2;6068:58:::0;;::::2;4102:51:10::0;;;;6120:4:9::2;4169:18:10::0;;;4162:60;6050:15:9::2;::::0;-1:-1:-1;;;;;6079:9:9;;::::2;::::0;6068:31:::2;::::0;4075:18:10;;6068:58:9::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6050:76;;6156:15;6145:7;:26;;6137:71;;;::::0;-1:-1:-1;;;6137:71:9;;4435:2:10;6137:71:9::2;::::0;::::2;4417:21:10::0;;;4454:18;;;4447:30;4513:34;4493:18;;;4486:62;4565:18;;6137:71:9::2;4233:356:10::0;6137:71:9::2;6281:9;::::0;6274:78:::2;::::0;-1:-1:-1;;;;;6281:9:9::2;6309:10;6329:4;6336:15:::0;6274:34:::2;:78::i;:::-;6503:20;6564:3;6548:11;;6542:3;:17;;;;:::i;:::-;6527:11;;:33;;;;:::i;:::-;6526:41;;;;:::i;:::-;6503:64:::0;-1:-1:-1;6578:19:9::2;6635:4;6601:30;6503:64:::0;6601:15;:30:::2;:::i;:::-;6600:39;;;;:::i;:::-;6740:12;::::0;6733:45:::2;::::0;-1:-1:-1;;;6733:45:9;;6772:4:::2;6733:45;::::0;::::2;345:51:10::0;6578:61:9;;-1:-1:-1;6708:22:9::2;::::0;-1:-1:-1;;;;;6740:12:9;;::::2;::::0;6733:30:::2;::::0;318:18:10;;6733:45:9::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6708:70;;6815:11;6797:14;:29;;6789:77;;;::::0;-1:-1:-1;;;6789:77:9;;5453:2:10;6789:77:9::2;::::0;::::2;5435:21:10::0;5492:2;5472:18;;;5465:30;5531:34;5511:18;;;5504:62;-1:-1:-1;;;5582:18:10;;;5575:33;5625:19;;6789:77:9::2;5251:399:10::0;6789:77:9::2;6921:17;6967:5;6956:7;;6942:11;:21;;;;:::i;:::-;6941:31;;;;:::i;:::-;6921:51:::0;-1:-1:-1;6983:18:9::2;7004:23;6921:51:::0;7004:11;:23:::2;:::i;:::-;7074:10;::::0;7047:12:::2;::::0;6983:44;;-1:-1:-1;7040:56:9::2;::::0;-1:-1:-1;;;;;7047:12:9;;::::2;::::0;7074:10:::2;7086:9:::0;7040:33:::2;:56::i;:::-;7114:12;::::0;7107:57:::2;::::0;-1:-1:-1;;;;;7114:12:9::2;7141:10;7153::::0;7107:33:::2;:57::i;:::-;7242:9;::::0;;7231:58:::2;::::0;-1:-1:-1;;;7231:58:9;;7266:4:::2;7231:58:::0;;::::2;2485:51:10::0;;;;2552:18;;;2545:34;;;-1:-1:-1;;;;;7242:9:9::2;::::0;7231:26:::2;::::0;2458:18:10;;7231:58:9::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;7307:57:9::2;::::0;;5962:25:10;;;6018:2;6003:18;;5996:34;;;7323:10:9::2;::::0;-1:-1:-1;7307:57:9::2;::::0;-1:-1:-1;5935:18:10;7307:57:9::2;;;;;;;5930:1442;;;;;;2303:20:3::1;1716:1:::0;2809:22;;2629:209;2303:20:::1;5852:1520:9::0;:::o;4759:225::-;4293:5;;-1:-1:-1;;;;;4293:5:9;4279:10;:19;4271:46;;;;-1:-1:-1;;;4271:46:9;;;;;;;:::i;:::-;4911:3:::1;4895:12;:19;;4887:52;;;::::0;-1:-1:-1;;;4887:52:9;;6243:2:10;4887:52:9::1;::::0;::::1;6225:21:10::0;6282:2;6262:18;;;6255:30;-1:-1:-1;;;6301:18:10;;;6294:50;6361:18;;4887:52:9::1;6041:344:10::0;4887:52:9::1;4950:11;:26:::0;4759:225::o;9967:366::-;10042:4;10059:20;10120:3;10104:11;;10098:3;:17;;;;:::i;:::-;10083:11;;:33;;;;:::i;:::-;10082:41;;;;:::i;:::-;10059:64;-1:-1:-1;10134:19:9;10191:4;10157:30;10059:64;10157:15;:30;:::i;:::-;10156:39;;;;:::i;:::-;10238:12;;10231:45;;-1:-1:-1;;;10231:45:9;;10270:4;10231:45;;;345:51:10;10134:61:9;;-1:-1:-1;10206:22:9;;-1:-1:-1;;;;;10238:12:9;;;;10231:30;;318:18:10;;10231:45:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10295:29;;;;;;9967:366;-1:-1:-1;;;;9967:366:9:o;4435:63::-;4293:5;;-1:-1:-1;;;;;4293:5:9;4279:10;:19;4271:46;;;;-1:-1:-1;;;4271:46:9;;;;;;;:::i;:::-;4482:8:::1;:6;:8::i;7566:292::-:0;4293:5;;-1:-1:-1;;;;;4293:5:9;4279:10;:19;4271:46;;;;-1:-1:-1;;;4271:46:9;;;;;;;:::i;:::-;919:4;943:7;;;1010:9:::1;1002:38;;;;-1:-1:-1::0;;;1002:38:9::1;;;;;;;:::i;:::-;7672:1:::2;7663:6;:10;7655:42;;;::::0;-1:-1:-1;;;7655:42:9;;6592:2:10;7655:42:9::2;::::0;::::2;6574:21:10::0;6631:2;6611:18;;;6604:30;-1:-1:-1;;;6650:18:10;;;6643:49;6709:18;;7655:42:9::2;6390:343:10::0;7655:42:9::2;7730:12;::::0;7723:68:::2;::::0;-1:-1:-1;;;7723:68:9;;7757:10:::2;7723:68;::::0;::::2;6940:51:10::0;7777:4:9::2;7007:18:10::0;;;7000:60;7076:18;;;7069:34;;;7708:12:9::2;::::0;-1:-1:-1;;;;;7730:12:9::2;::::0;7723:33:::2;::::0;6913:18:10;;7723:68:9::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7708:83;;7810:7;7802:48;;;::::0;-1:-1:-1;;;7802:48:9;;7316:2:10;7802:48:9::2;::::0;::::2;7298:21:10::0;7355:2;7335:18;;;7328:30;7394;7374:18;;;7367:58;7442:18;;7802:48:9::2;7114:352:10::0;7802:48:9::2;7644:214;7566:292:::0;:::o;9057:135::-;9146:12;;9139:45;;-1:-1:-1;;;9139:45:9;;9178:4;9139:45;;;345:51:10;9112:7:9;;-1:-1:-1;;;;;9146:12:9;;9139:30;;318:18:10;;9139:45:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9132:52;;9057:135;:::o;8114:207::-;4293:5;;-1:-1:-1;;;;;4293:5:9;4279:10;:19;4271:46;;;;-1:-1:-1;;;4271:46:9;;;;;;;:::i;:::-;8208:4:::1;8193:11;:19;;8185:44;;;::::0;-1:-1:-1;;;8185:44:9;;7673:2:10;8185:44:9::1;::::0;::::1;7655:21:10::0;7712:2;7692:18;;;7685:30;-1:-1:-1;;;7731:18:10;;;7724:42;7783:18;;8185:44:9::1;7471:336:10::0;8185:44:9::1;8260:7;::::0;8245:36:::1;::::0;;5962:25:10;;;6018:2;6003:18;;5996:34;;;8245:36:9::1;::::0;5935:18:10;8245:36:9::1;;;;;;;8292:7;:21:::0;8114:207::o;9367:442::-;9473:12;;9466:45;;-1:-1:-1;;;9466:45:9;;9505:4;9466:45;;;345:51:10;9421:7:9;;;;-1:-1:-1;;;;;9473:12:9;;;;9466:30;;318:18:10;;9466:45:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9441:70;;9522:20;9583:3;9567:11;;9561:3;:17;;;;:::i;:::-;9546:11;;:33;;;;:::i;:::-;9545:41;;;;:::i;:::-;9522:64;;9603:12;9619:1;9603:17;9599:58;;9644:1;9637:8;;;;9367:442;:::o;9599:58::-;9789:12;9764:21;:14;9781:4;9764:21;:::i;:::-;9763:38;;;;:::i;:::-;9756:45;;;;9367:442;:::o;7866:240::-;4293:5;;-1:-1:-1;;;;;4293:5:9;4279:10;:19;4271:46;;;;-1:-1:-1;;;4271:46:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;7951:28:9;::::1;7943:56;;;::::0;-1:-1:-1;;;7943:56:9;;8014:2:10;7943:56:9::1;::::0;::::1;7996:21:10::0;8053:2;8033:18;;;8026:30;-1:-1:-1;;;8072:18:10;;;8065:45;8127:18;;7943:56:9::1;7812:339:10::0;7943:56:9::1;8033:10;::::0;8015:45:::1;::::0;-1:-1:-1;;;;;8015:45:9;;::::1;::::0;8033:10:::1;::::0;8015:45:::1;::::0;8033:10:::1;::::0;8015:45:::1;8071:10;:27:::0;;-1:-1:-1;;;;;;8071:27:9::1;-1:-1:-1::0;;;;;8071:27:9;;;::::1;::::0;;;::::1;::::0;;7866:240::o;5261:230::-;4293:5;;-1:-1:-1;;;;;4293:5:9;4279:10;:19;4271:46;;;;-1:-1:-1;;;4271:46:9;;;;;;;:::i;:::-;-1:-1:-1;;;;;5344:22:9;::::1;5336:67;;;::::0;-1:-1:-1;;;5336:67:9;;8358:2:10;5336:67:9::1;::::0;::::1;8340:21:10::0;;;8377:18;;;8370:30;8436:34;8416:18;;;8409:62;8488:18;;5336:67:9::1;8156:356:10::0;5336:67:9::1;5440:5;::::0;5419:37:::1;::::0;-1:-1:-1;;;;;5419:37:9;;::::1;::::0;5440:5:::1;::::0;5419:37:::1;::::0;5440:5:::1;::::0;5419:37:::1;5467:5;:16:::0;;-1:-1:-1;;;;;;5467:16:9::1;-1:-1:-1::0;;;;;5467:16:9;;;::::1;::::0;;;::::1;::::0;;5261:230::o;1294:118::-;919:4;943:7;;;1101:41;;;;-1:-1:-1;;;1101:41:9;;8719:2:10;1101:41:9;;;8701:21:10;8758:2;8738:18;;;8731:30;-1:-1:-1;;;8777:18:10;;;8770:50;8837:18;;1101:41:9;8517:344:10;1101:41:9;1363:5:::1;1353:15:::0;;-1:-1:-1;;1353:15:9::1;::::0;;1384:20:::1;::::0;1393:10:::1;345:51:10::0;;1384:20:9::1;::::0;333:2:10;318:18;1384:20:9::1;;;;;;;;1294:118::o:0;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:3;;9068:2:10;2460:63:3;;;9050:21:10;9107:2;9087:18;;;9080:30;9146:33;9126:18;;;9119:61;9197:18;;2460:63:3;8866:355:10;2460:63:3;1759:1;2598:7;:18;2336:287::o;1670:188:5:-;1797:53;;-1:-1:-1;;;;;6958:32:10;;;1797:53:5;;;6940:51:10;7027:32;;;7007:18;;;7000:60;7076:18;;;7069:34;;;1770:81:5;;1790:5;;1812:18;;;;;6913::10;;1797:53:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1797:53:5;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;1271:160::-;1380:43;;-1:-1:-1;;;;;2503:32:10;;;1380:43:5;;;2485:51:10;2552:18;;;2545:34;;;1353:71:5;;1373:5;;1395:14;;;;;2458:18:10;;1380:43:5;2311:274:10;1170:116:9;919:4;943:7;;;1010:9;1002:38;;;;-1:-1:-1;;;1002:38:9;;;;;;;:::i;:::-;1230:7:::1;:14:::0;;-1:-1:-1;;1230:14:9::1;1240:4;1230:14;::::0;;1260:18:::1;::::0;1267:10:::1;345:51:10::0;;1260:18:9::1;::::0;333:2:10;318:18;1260::9::1;199:203:10::0;7738:720:5;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;-1:-1:-1;;8284:1:5;8278:8;8234:16;;-1:-1:-1;8310:15:5;;:68;;8362:11;8377:1;8362:16;;8310:68;;;-1:-1:-1;;;;;8328:26:5;;;:31;8310:68;8306:146;;;8401:40;;-1:-1:-1;;;8401:40:5;;-1:-1:-1;;;;;363:32:10;;8401:40:5;;;345:51:10;318:18;;8401:40:5;199:203:10;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:10;;14:180;-1:-1:-1;14:180:10:o;781:286::-;840:6;893:2;881:9;872:7;868:23;864:32;861:52;;;909:1;906;899:12;861:52;935:23;;-1:-1:-1;;;;;987:31:10;;977:42;;967:70;;1033:1;1030;1023:12;967:70;1056:5;781:286;-1:-1:-1;;;781:286:10:o;1072:338::-;1274:2;1256:21;;;1313:2;1293:18;;;1286:30;-1:-1:-1;;;1347:2:10;1332:18;;1325:44;1401:2;1386:18;;1072:338::o;1764:184::-;1834:6;1887:2;1875:9;1866:7;1862:23;1858:32;1855:52;;;1903:1;1900;1893:12;1855:52;-1:-1:-1;1926:16:10;;1764:184;-1:-1:-1;1764:184:10:o;2590:277::-;2657:6;2710:2;2698:9;2689:7;2685:23;2681:32;2678:52;;;2726:1;2723;2716:12;2678:52;2758:9;2752:16;2811:5;2804:13;2797:21;2790:5;2787:32;2777:60;;2833:1;2830;2823:12;3232:340;3434:2;3416:21;;;3473:2;3453:18;;;3446:30;-1:-1:-1;;;3507:2:10;3492:18;;3485:46;3563:2;3548:18;;3232:340::o;4594:127::-;4655:10;4650:3;4646:20;4643:1;4636:31;4686:4;4683:1;4676:15;4710:4;4707:1;4700:15;4726:125;4791:9;;;4812:10;;;4809:36;;;4825:18;;:::i;:::-;4726:125;;;;:::o;4856:168::-;4929:9;;;4960;;4977:15;;;4971:22;;4957:37;4947:71;;4998:18;;:::i;5029:217::-;5069:1;5095;5085:132;;5139:10;5134:3;5130:20;5127:1;5120:31;5174:4;5171:1;5164:15;5202:4;5199:1;5192:15;5085:132;-1:-1:-1;5231:9:10;;5029:217::o;5655:128::-;5722:9;;;5743:11;;;5740:37;;;5757:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "953800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyback(uint256)": "infinite",
								"canExecuteBuyback(uint256)": "infinite",
								"contractTokenBalance()": "infinite",
								"depositPaymentToken(uint256)": "infinite",
								"gasReserve()": "2435",
								"maxBuyableRoboMoney()": "infinite",
								"owner()": "2392",
								"pause()": "29768",
								"paused()": "2381",
								"paymentToken()": "2371",
								"premiumRate()": "2406",
								"roboMoney()": "2414",
								"setGasReserve(address)": "30428",
								"setPremiumRate(uint256)": "24599",
								"setTargetPrice(uint256)": "24485",
								"setTaxRate(uint256)": "27947",
								"targetPrice()": "2382",
								"taxRate()": "2339",
								"transferOwnership(address)": "30494",
								"unpause()": "29771",
								"withdrawPaymentToken(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2873,
									"end": 10336,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3785,
									"end": 4231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3785,
									"end": 4231,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 851,
									"end": 856,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 841,
									"end": 856,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 841,
									"end": 856,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 841,
									"end": 856,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3995,
									"end": 4000,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3995,
									"end": 4013,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3995,
									"end": 4013,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4003,
									"end": 4013,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3995,
									"end": 4013,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3995,
									"end": 4013,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3995,
									"end": 4013,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3995,
									"end": 4013,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3995,
									"end": 4013,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3995,
									"end": 4013,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3995,
									"end": 4013,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4024,
									"end": 4036,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 4024,
									"end": 4052,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4024,
									"end": 4052,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4024,
									"end": 4052,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4024,
									"end": 4052,
									"name": "AND",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4024,
									"end": 4052,
									"name": "SWAP9",
									"source": 9
								},
								{
									"begin": 4024,
									"end": 4052,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 4024,
									"end": 4052,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4024,
									"end": 4052,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4024,
									"end": 4052,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4024,
									"end": 4052,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4073,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4087,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4107,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4098,
									"end": 4120,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 4131,
									"end": 4157,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4168,
									"end": 4179,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 4168,
									"end": 4194,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 4205,
									"end": 4212,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4205,
									"end": 4223,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 910,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 910,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 311,
									"end": 317,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 319,
									"end": 325,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 333,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 349,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 351,
									"end": 357,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 404,
									"end": 407,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 392,
									"end": 401,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 383,
									"end": 390,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 379,
									"end": 402,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 375,
									"end": 408,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 372,
									"end": 425,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 372,
									"end": 425,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 372,
									"end": 425,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 421,
									"end": 422,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 423,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 372,
									"end": 425,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 372,
									"end": 425,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 444,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 474,
									"end": 483,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 444,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 444,
									"end": 484,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 444,
									"end": 484,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 444,
									"end": 484,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 434,
									"end": 484,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 434,
									"end": 484,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 503,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 548,
									"end": 550,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 546,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 533,
									"end": 551,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 503,
									"end": 552,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 503,
									"end": 552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 503,
									"end": 552,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 503,
									"end": 552,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 493,
									"end": 552,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 493,
									"end": 552,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 571,
									"end": 620,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 616,
									"end": 618,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 605,
									"end": 614,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 601,
									"end": 619,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 571,
									"end": 620,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 571,
									"end": 620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 571,
									"end": 620,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 571,
									"end": 620,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 682,
									"end": 684,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 667,
									"end": 685,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 667,
									"end": 685,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 661,
									"end": 686,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 776,
									"end": 779,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 761,
									"end": 780,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 755,
									"end": 781,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 873,
									"end": 876,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 858,
									"end": 877,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 858,
									"end": 877,
									"name": "SWAP10",
									"source": 10
								},
								{
									"begin": 858,
									"end": 877,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 852,
									"end": 878,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 196,
									"end": 910,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 196,
									"end": 910,
									"name": "SWAP11",
									"source": 10
								},
								{
									"begin": 196,
									"end": 910,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 196,
									"end": 910,
									"name": "SWAP10",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 561,
									"end": 620,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 561,
									"end": 620,
									"name": "SWAP8",
									"source": 10
								},
								{
									"begin": 661,
									"end": 686,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 661,
									"end": 686,
									"name": "SWAP7",
									"source": 10
								},
								{
									"begin": 755,
									"end": 781,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 755,
									"end": 781,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 852,
									"end": 878,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 852,
									"end": 878,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 910,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 910,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 196,
									"end": 910,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 196,
									"end": 910,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2873,
									"end": 10336,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a5b0c788fff17ecdc5cfae3ea7428ed550f741409bdcec4dfd35e0051f14d42d64736f6c634300081c0033",
									".code": [
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "839EA2D9"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "C6D69A30"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "C6D69A30"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "CE1D1F1F"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "D4A49C17"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "DC38679C"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "EEA7570E"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "839EA2D9"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "9063EE20"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "9E9AED62"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "6A64EFF8"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "6A64EFF8"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "771A3A1D"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "79A9FA1C"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "7EF7BA20"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "7FF8B57A"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "7E675FA"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "3013CE29"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "3F4BA83A"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "5D0040D3"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2873,
											"end": 10336,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 8542,
											"end": 8959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 8542,
											"end": 8959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 363,
											"end": 395,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 363,
											"end": 395,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 345,
											"end": 396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2953,
											"end": 2980,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4667,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4600,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4600,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 4600,
											"end": 4667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 872,
											"end": 958,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 872,
											"end": 958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 943,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 872,
											"end": 958,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 872,
											"end": 958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 872,
											"end": 958,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 958,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 572,
											"end": 586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 572,
											"end": 586,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 565,
											"end": 587,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 547,
											"end": 588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 547,
											"end": 588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 520,
											"end": 538,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 872,
											"end": 958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 407,
											"end": 594,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 745,
											"end": 770,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 745,
											"end": 770,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 745,
											"end": 770,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 733,
											"end": 735,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 718,
											"end": 736,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 599,
											"end": 776,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 5082,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5082,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 5852,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 5852,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3055,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3031,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3055,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3031,
											"end": 3055,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3031,
											"end": 3055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3031,
											"end": 3055,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3055,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3031,
											"end": 3055,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4759,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4759,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 9967,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 9967,
											"end": 10333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4498,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 4435,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4435,
											"end": 4498,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4435,
											"end": 4498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 7566,
											"end": 7858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7566,
											"end": 7858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9057,
											"end": 9192,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 9057,
											"end": 9192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9057,
											"end": 9192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9057,
											"end": 9192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 9057,
											"end": 9192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 8114,
											"end": 8321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 8114,
											"end": 8321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9809,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 9367,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 9367,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 9367,
											"end": 9809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 7866,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7866,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3325,
											"end": 3351,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3121,
											"end": 3146,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 5261,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 5261,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4271,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8635,
											"end": 8636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8626,
											"end": 8632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8636,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 8618,
											"end": 8661,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8618,
											"end": 8661,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8618,
											"end": 8661,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8661,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1617,
											"end": 1619,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8618,
											"end": 8661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8618,
											"end": 8661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1599,
											"end": 1620,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1636,
											"end": 1654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1629,
											"end": 1659,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5769746864726177206D757374206265203E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1668,
											"end": 1718,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1753,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1735,
											"end": 1753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8618,
											"end": 8661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1415,
											"end": 1759,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8618,
											"end": 8661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 8618,
											"end": 8661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8704,
											"end": 8716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8704,
											"end": 8716,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8742,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8697,
											"end": 8742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8736,
											"end": 8740,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8697,
											"end": 8742,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8672,
											"end": 8694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8704,
											"end": 8716,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8704,
											"end": 8716,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 8697,
											"end": 8727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 8697,
											"end": 8742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 8697,
											"end": 8742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8672,
											"end": 8742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8771,
											"end": 8785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8767,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8785,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8785,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 8819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 8753,
											"end": 8819,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 8819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8753,
											"end": 8819,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8753,
											"end": 8819,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 8819,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2155,
											"end": 2157,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8753,
											"end": 8819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8753,
											"end": 8819,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8753,
											"end": 8819,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2137,
											"end": 2158,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2174,
											"end": 2192,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2167,
											"end": 2197,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2233,
											"end": 2264,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420656E6F75676820746F6B656E7320696E20636F6E7472616374000000"
										},
										{
											"begin": 2213,
											"end": 2231,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2213,
											"end": 2231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2213,
											"end": 2231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2206,
											"end": 2265,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1953,
											"end": 2306,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8753,
											"end": 8819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 8753,
											"end": 8819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8875,
											"end": 8880,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8845,
											"end": 8889,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8845,
											"end": 8889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8875,
											"end": 8880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8880,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8875,
											"end": 8880,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8845,
											"end": 8889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2485,
											"end": 2536,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2545,
											"end": 2579,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2545,
											"end": 2579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2545,
											"end": 2579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8830,
											"end": 8842,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8864,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 8845,
											"end": 8874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 8845,
											"end": 8889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 8845,
											"end": 8889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8830,
											"end": 8889,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8908,
											"end": 8915,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8900,
											"end": 8951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 8900,
											"end": 8951,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8900,
											"end": 8951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8951,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8900,
											"end": 8951,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8900,
											"end": 8951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3076,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8900,
											"end": 8951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8900,
											"end": 8951,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8900,
											"end": 8951,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3056,
											"end": 3077,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3113,
											"end": 3115,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3093,
											"end": 3111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3086,
											"end": 3116,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3152,
											"end": 3185,
											"name": "PUSH",
											"source": 10,
											"value": "5061796D656E7420746F6B656E207769746864726177616C206661696C656400"
										},
										{
											"begin": 3132,
											"end": 3150,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3132,
											"end": 3150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3132,
											"end": 3150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3125,
											"end": 3186,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8900,
											"end": 8951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 2872,
											"end": 3227,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8900,
											"end": 8951,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 8900,
											"end": 8951,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8607,
											"end": 8959,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8607,
											"end": 8959,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8959,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8542,
											"end": 8959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4667,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 4600,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4271,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4649,
											"end": 4659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4649,
											"end": 4657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 4649,
											"end": 4659,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4649,
											"end": 4659,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4649,
											"end": 4659,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5082,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4271,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5158,
											"end": 5169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5158,
											"end": 5184,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5082,
											"end": 5192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 943,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1002,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 5968,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5949,
											"end": 5964,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5949,
											"end": 5968,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5941,
											"end": 5995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5941,
											"end": 5995,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5941,
											"end": 5995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5941,
											"end": 5995,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5941,
											"end": 5995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5941,
											"end": 5995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3781,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 5995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5941,
											"end": 5995,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5941,
											"end": 5995,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3761,
											"end": 3782,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3818,
											"end": 3820,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3791,
											"end": 3821,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D757374206465706F73697420526F626F4D6F6E6579"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3837,
											"end": 3855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3882,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3899,
											"end": 3917,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3899,
											"end": 3917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5941,
											"end": 5995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 3577,
											"end": 3923,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5941,
											"end": 5995,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 5941,
											"end": 5995,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6079,
											"end": 6088,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6079,
											"end": 6088,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6079,
											"end": 6088,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6068,
											"end": 6126,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6068,
											"end": 6126,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6100,
											"end": 6110,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4102,
											"end": 4153,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4153,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4102,
											"end": 4153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6120,
											"end": 6124,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4162,
											"end": 4222,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6050,
											"end": 6065,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6065,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6079,
											"end": 6088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6079,
											"end": 6088,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6079,
											"end": 6088,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6079,
											"end": 6088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 6068,
											"end": 6099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4075,
											"end": 4093,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 6068,
											"end": 6126,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 6068,
											"end": 6126,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6050,
											"end": 6126,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6050,
											"end": 6126,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6171,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6152,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6171,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6145,
											"end": 6171,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6137,
											"end": 6208,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 6137,
											"end": 6208,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6137,
											"end": 6208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6137,
											"end": 6208,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6137,
											"end": 6208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6137,
											"end": 6208,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4437,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6137,
											"end": 6208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6137,
											"end": 6208,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4417,
											"end": 4438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4417,
											"end": 4438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4454,
											"end": 4472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4447,
											"end": 4477,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4513,
											"end": 4547,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E7420526F626F4D6F6E657920616C6C6F77616E6365"
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4511,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4486,
											"end": 4548,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 4565,
											"end": 4583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6208,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4233,
											"end": 4589,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6137,
											"end": 6208,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 6137,
											"end": 6208,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6281,
											"end": 6290,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6274,
											"end": 6352,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 6274,
											"end": 6352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6281,
											"end": 6290,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6309,
											"end": 6319,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6333,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6351,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6274,
											"end": 6308,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 6274,
											"end": 6352,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6274,
											"end": 6352,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 6274,
											"end": 6352,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6523,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6564,
											"end": 6567,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6548,
											"end": 6559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6548,
											"end": 6559,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6542,
											"end": 6559,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 6542,
											"end": 6559,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6559,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6559,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 6542,
											"end": 6559,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6542,
											"end": 6559,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 6542,
											"end": 6559,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6527,
											"end": 6538,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6560,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 6527,
											"end": 6560,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6560,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6560,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 6527,
											"end": 6560,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6560,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 6527,
											"end": 6560,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6567,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6526,
											"end": 6567,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6567,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6567,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 6526,
											"end": 6567,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6526,
											"end": 6567,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6526,
											"end": 6567,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6503,
											"end": 6567,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6578,
											"end": 6597,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6635,
											"end": 6639,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6601,
											"end": 6631,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 6503,
											"end": 6567,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6616,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6631,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 6601,
											"end": 6631,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6631,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 6601,
											"end": 6631,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6600,
											"end": 6639,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 6600,
											"end": 6639,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6600,
											"end": 6639,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6600,
											"end": 6639,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 6600,
											"end": 6639,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6600,
											"end": 6639,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 6600,
											"end": 6639,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6740,
											"end": 6752,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6740,
											"end": 6752,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6733,
											"end": 6778,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6733,
											"end": 6778,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6772,
											"end": 6776,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6733,
											"end": 6778,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6578,
											"end": 6639,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6578,
											"end": 6639,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6708,
											"end": 6730,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6730,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6740,
											"end": 6752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6740,
											"end": 6752,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6740,
											"end": 6752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6763,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 6733,
											"end": 6763,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 6733,
											"end": 6778,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6733,
											"end": 6778,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 6778,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 6778,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6815,
											"end": 6826,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6811,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6826,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6797,
											"end": 6826,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6866,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 6789,
											"end": 6866,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6789,
											"end": 6866,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6789,
											"end": 6866,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6866,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5453,
											"end": 5455,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6789,
											"end": 6866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6789,
											"end": 6866,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6789,
											"end": 6866,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5492,
											"end": 5494,
											"name": "PUSH",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 5472,
											"end": 5490,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5472,
											"end": 5490,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5472,
											"end": 5490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5465,
											"end": 5495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5531,
											"end": 5565,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420656E6F756768207061796D656E74546F6B656E20696E20636F6E7472"
										},
										{
											"begin": 5511,
											"end": 5529,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 5511,
											"end": 5529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5511,
											"end": 5529,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5504,
											"end": 5566,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5582,
											"end": 5600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5575,
											"end": 5608,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5625,
											"end": 5644,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 5625,
											"end": 5644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 6866,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 5251,
											"end": 5650,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6789,
											"end": 6866,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 6789,
											"end": 6866,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6938,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 6972,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 6956,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6956,
											"end": 6963,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6942,
											"end": 6953,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6942,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 6942,
											"end": 6963,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6942,
											"end": 6963,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6942,
											"end": 6963,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 6942,
											"end": 6963,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6942,
											"end": 6963,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 6942,
											"end": 6963,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 6972,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6941,
											"end": 6972,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 6972,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 6972,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 6941,
											"end": 6972,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6941,
											"end": 6972,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 6941,
											"end": 6972,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6921,
											"end": 6972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6983,
											"end": 7001,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7004,
											"end": 7027,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 6921,
											"end": 6972,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7004,
											"end": 7015,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7004,
											"end": 7027,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 7004,
											"end": 7027,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7004,
											"end": 7027,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 7004,
											"end": 7027,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7084,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7074,
											"end": 7084,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7047,
											"end": 7059,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 7027,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6983,
											"end": 7027,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7040,
											"end": 7096,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 7040,
											"end": 7096,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7047,
											"end": 7059,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7059,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7047,
											"end": 7059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7074,
											"end": 7084,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7073,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 7040,
											"end": 7096,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7040,
											"end": 7096,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 7040,
											"end": 7096,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7114,
											"end": 7126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7114,
											"end": 7126,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7107,
											"end": 7164,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 7107,
											"end": 7164,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7114,
											"end": 7126,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7141,
											"end": 7151,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7153,
											"end": 7163,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7107,
											"end": 7140,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 7107,
											"end": 7164,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7107,
											"end": 7164,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 7107,
											"end": 7164,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7251,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7242,
											"end": 7251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7251,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7231,
											"end": 7289,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2770A7EB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7231,
											"end": 7289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7266,
											"end": 7270,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2485,
											"end": 2536,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2485,
											"end": 2536,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2485,
											"end": 2536,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2485,
											"end": 2536,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2545,
											"end": 2579,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2545,
											"end": 2579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2545,
											"end": 2579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7242,
											"end": 7251,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7242,
											"end": 7251,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7257,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "9DC29FAC"
										},
										{
											"begin": 7231,
											"end": 7257,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "EXTCODESIZE",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 7231,
											"end": 7289,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7307,
											"end": 7364,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7307,
											"end": 7364,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7307,
											"end": 7364,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6030,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7323,
											"end": 7333,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7333,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7307,
											"end": 7364,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "CB7F55D0B91628D4520B789339DAE4803AB07182EA89D138ACBD965DAC51DC65"
										},
										{
											"begin": 7307,
											"end": 7364,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5935,
											"end": 5953,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7307,
											"end": 7364,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7307,
											"end": 7364,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7307,
											"end": 7364,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7307,
											"end": 7364,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7307,
											"end": 7364,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7307,
											"end": 7364,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7307,
											"end": 7364,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 7372,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 7372,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 7372,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 7372,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 7372,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5930,
											"end": 7372,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5852,
											"end": 7372,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5852,
											"end": 7372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4759,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4271,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4911,
											"end": 4914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4895,
											"end": 4907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4914,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4914,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 4939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4887,
											"end": 4939,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 4939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4887,
											"end": 4939,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4887,
											"end": 4939,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 4939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6243,
											"end": 6245,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4887,
											"end": 4939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4887,
											"end": 4939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4887,
											"end": 4939,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6225,
											"end": 6246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6282,
											"end": 6284,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6262,
											"end": 6280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6255,
											"end": 6285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207072656D69756D2072617465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6294,
											"end": 6344,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6361,
											"end": 6379,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4887,
											"end": 4939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6041,
											"end": 6385,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4887,
											"end": 4939,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4887,
											"end": 4939,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4950,
											"end": 4976,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4759,
											"end": 4984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10042,
											"end": 10046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10079,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10120,
											"end": 10123,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10104,
											"end": 10115,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 10104,
											"end": 10115,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10098,
											"end": 10101,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10098,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 10098,
											"end": 10115,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10098,
											"end": 10115,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10098,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 10098,
											"end": 10115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10098,
											"end": 10115,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 10098,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10094,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 10083,
											"end": 10094,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 10083,
											"end": 10116,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10116,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10083,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10083,
											"end": 10116,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 10083,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 10082,
											"end": 10123,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 10082,
											"end": 10123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10082,
											"end": 10123,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 10082,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10059,
											"end": 10123,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10134,
											"end": 10153,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10191,
											"end": 10195,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10157,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 10059,
											"end": 10123,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10172,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10187,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 10157,
											"end": 10187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10187,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 10157,
											"end": 10187,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10156,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 10156,
											"end": 10195,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10156,
											"end": 10195,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10156,
											"end": 10195,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 10156,
											"end": 10195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10156,
											"end": 10195,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 10156,
											"end": 10195,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10270,
											"end": 10274,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10134,
											"end": 10195,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10195,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10206,
											"end": 10228,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10238,
											"end": 10250,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10261,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 10231,
											"end": 10261,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 10231,
											"end": 10276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 10231,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10324,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10324,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10324,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9967,
											"end": 10333,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9967,
											"end": 10333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4498,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 4435,
											"end": 4498,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4271,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4482,
											"end": 4490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 4482,
											"end": 4488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4482,
											"end": 4490,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4271,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 943,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1019,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1002,
											"end": 1040,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 1002,
											"end": 1040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7672,
											"end": 7673,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7663,
											"end": 7669,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7663,
											"end": 7673,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7697,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7655,
											"end": 7697,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7697,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7655,
											"end": 7697,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7697,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6592,
											"end": 6594,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7655,
											"end": 7697,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7655,
											"end": 7697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7697,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6631,
											"end": 6633,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6611,
											"end": 6629,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6604,
											"end": 6634,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4465706F736974206D757374206265203E203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6643,
											"end": 6692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6709,
											"end": 6727,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6709,
											"end": 6727,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7655,
											"end": 7697,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6390,
											"end": 6733,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7655,
											"end": 7697,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7655,
											"end": 7697,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7730,
											"end": 7742,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7730,
											"end": 7742,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7757,
											"end": 7767,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7723,
											"end": 7791,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6940,
											"end": 6991,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7777,
											"end": 7781,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7000,
											"end": 7060,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7103,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7708,
											"end": 7720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7730,
											"end": 7742,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7730,
											"end": 7742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 7723,
											"end": 7756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6913,
											"end": 6931,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 6913,
											"end": 6931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 7723,
											"end": 7791,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7723,
											"end": 7791,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7708,
											"end": 7791,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7708,
											"end": 7791,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7810,
											"end": 7817,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7802,
											"end": 7850,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7802,
											"end": 7850,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7802,
											"end": 7850,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7802,
											"end": 7850,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7802,
											"end": 7850,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7802,
											"end": 7850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7318,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7802,
											"end": 7850,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7802,
											"end": 7850,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7802,
											"end": 7850,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7298,
											"end": 7319,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7355,
											"end": 7357,
											"name": "PUSH",
											"source": 10,
											"value": "1C"
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7335,
											"end": 7353,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7328,
											"end": 7358,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7424,
											"name": "PUSH",
											"source": 10,
											"value": "5061796D656E7420746F6B656E206465706F736974206661696C656400000000"
										},
										{
											"begin": 7374,
											"end": 7392,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7374,
											"end": 7392,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7374,
											"end": 7392,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7367,
											"end": 7425,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7442,
											"end": 7460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7850,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7114,
											"end": 7466,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7802,
											"end": 7850,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7802,
											"end": 7850,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7858,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7858,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7566,
											"end": 7858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9057,
											"end": 9192,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 9057,
											"end": 9192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9146,
											"end": 9158,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9146,
											"end": 9158,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9178,
											"end": 9182,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9112,
											"end": 9119,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9112,
											"end": 9119,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9146,
											"end": 9158,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9146,
											"end": 9158,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9169,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 9139,
											"end": 9169,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 9139,
											"end": 9184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 9139,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9057,
											"end": 9192,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9057,
											"end": 9192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 8114,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4271,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8208,
											"end": 8212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3E8"
										},
										{
											"begin": 8193,
											"end": 8204,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8193,
											"end": 8212,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8193,
											"end": 8212,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 8185,
											"end": 8229,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8185,
											"end": 8229,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8185,
											"end": 8229,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8229,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7673,
											"end": 7675,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8185,
											"end": 8229,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8185,
											"end": 8229,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8185,
											"end": 8229,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7655,
											"end": 7676,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7712,
											"end": 7714,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7685,
											"end": 7715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8C2F040E8DEDE40D0D2CED"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7731,
											"end": 7749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7724,
											"end": 7766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7783,
											"end": 7801,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8185,
											"end": 8229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7471,
											"end": 7807,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8185,
											"end": 8229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 8185,
											"end": 8229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8260,
											"end": 8267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 8260,
											"end": 8267,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8245,
											"end": 8281,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8281,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6018,
											"end": 6020,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6003,
											"end": 6021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6030,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6030,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5996,
											"end": 6030,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8245,
											"end": 8281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A8EE157EB2A9AA895D74DF4D2D3BC0AD165FF3162F8EC46A4ECF602DD5C48FDA"
										},
										{
											"begin": 8245,
											"end": 8281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5935,
											"end": 5953,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8245,
											"end": 8281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8245,
											"end": 8281,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8281,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8281,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8281,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8245,
											"end": 8281,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 8292,
											"end": 8299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 8292,
											"end": 8313,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9809,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 9367,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9505,
											"end": 9509,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9421,
											"end": 9428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9421,
											"end": 9428,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9421,
											"end": 9428,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9473,
											"end": 9485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9496,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 9466,
											"end": 9496,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 9466,
											"end": 9511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 9466,
											"end": 9511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9586,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9561,
											"end": 9564,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9561,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 9561,
											"end": 9578,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9561,
											"end": 9578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9561,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 9561,
											"end": 9578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9561,
											"end": 9578,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 9561,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9546,
											"end": 9557,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 9546,
											"end": 9557,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9546,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 9546,
											"end": 9579,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9546,
											"end": 9579,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9546,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 9546,
											"end": 9579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9546,
											"end": 9579,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 9546,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9545,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 9545,
											"end": 9586,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9545,
											"end": 9586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9545,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 9545,
											"end": 9586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9545,
											"end": 9586,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 9545,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9586,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9522,
											"end": 9586,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9603,
											"end": 9615,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9619,
											"end": 9620,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9603,
											"end": 9620,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9657,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 9599,
											"end": 9657,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9644,
											"end": 9645,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9637,
											"end": 9645,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9637,
											"end": 9645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9637,
											"end": 9645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9637,
											"end": 9645,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9599,
											"end": 9657,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 9599,
											"end": 9657,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9789,
											"end": 9801,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 9764,
											"end": 9778,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9785,
											"name": "PUSH",
											"source": 9,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 9764,
											"end": 9785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 9764,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 9763,
											"end": 9801,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 9763,
											"end": 9801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9763,
											"end": 9801,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 9763,
											"end": 9801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9756,
											"end": 9801,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9756,
											"end": 9801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9756,
											"end": 9801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9756,
											"end": 9801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9367,
											"end": 9809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7866,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4271,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7951,
											"end": 7979,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7951,
											"end": 7979,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7943,
											"end": 7999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7943,
											"end": 7999,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7943,
											"end": 7999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7943,
											"end": 7999,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7943,
											"end": 7999,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7943,
											"end": 7999,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8014,
											"end": 8016,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7943,
											"end": 7999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7943,
											"end": 7999,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7943,
											"end": 7999,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7996,
											"end": 8017,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8053,
											"end": 8055,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8033,
											"end": 8051,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8026,
											"end": 8056,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8072,
											"end": 8090,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8072,
											"end": 8090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8072,
											"end": 8090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8065,
											"end": 8110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8127,
											"end": 8145,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8127,
											"end": 8145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7943,
											"end": 7999,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 7812,
											"end": 8151,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7943,
											"end": 7999,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 7943,
											"end": 7999,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8033,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8033,
											"end": 8043,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8015,
											"end": 8060,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8015,
											"end": 8060,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8060,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8060,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8060,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8033,
											"end": 8043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8033,
											"end": 8043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B4281BB17CDC594E3CF6D419DA95F70A6B02D856B26438D381EE1246A8E89F12"
										},
										{
											"begin": 8015,
											"end": 8060,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8033,
											"end": 8043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8043,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8015,
											"end": 8060,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8071,
											"end": 8098,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8098,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8071,
											"end": 8098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8071,
											"end": 8098,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8098,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8098,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8098,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8098,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8071,
											"end": 8098,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 8106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 5261,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4289,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 4271,
											"end": 4317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 4271,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5344,
											"end": 5366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5344,
											"end": 5366,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 5336,
											"end": 5403,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8358,
											"end": 8360,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5336,
											"end": 5403,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5336,
											"end": 5403,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5336,
											"end": 5403,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8340,
											"end": 8361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8340,
											"end": 8361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8340,
											"end": 8361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8377,
											"end": 8395,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8377,
											"end": 8395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8377,
											"end": 8395,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8370,
											"end": 8400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8436,
											"end": 8470,
											"name": "PUSH",
											"source": 10,
											"value": "4E6577206F776E65722063616E6E6F74206265207A65726F2061646472657373"
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8434,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8409,
											"end": 8471,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8488,
											"end": 8506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 8156,
											"end": 8512,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5336,
											"end": 5403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 5336,
											"end": 5403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5440,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5440,
											"end": 5445,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5419,
											"end": 5456,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5419,
											"end": 5456,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5456,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5456,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5440,
											"end": 5445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5440,
											"end": 5445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 5419,
											"end": 5456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5440,
											"end": 5445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5445,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5419,
											"end": 5456,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5467,
											"end": 5483,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5483,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5483,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5483,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5483,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5483,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5483,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5261,
											"end": 5491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1412,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1294,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 943,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8719,
											"end": 8721,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8760,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8731,
											"end": 8761,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8777,
											"end": 8795,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 8777,
											"end": 8795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8777,
											"end": 8795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8820,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 8837,
											"end": 8855,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 8517,
											"end": 8861,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 1101,
											"end": 1142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1363,
											"end": 1368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1368,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1368,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1353,
											"end": 1368,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1368,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1353,
											"end": 1368,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1384,
											"end": 1404,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1393,
											"end": 1403,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 345,
											"end": 396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 1384,
											"end": 1404,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1384,
											"end": 1404,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1294,
											"end": 1412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9068,
											"end": 9070,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9050,
											"end": 9071,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9107,
											"end": 9109,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 9087,
											"end": 9105,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9087,
											"end": 9105,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9080,
											"end": 9110,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9146,
											"end": 9179,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9126,
											"end": 9144,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9119,
											"end": 9180,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9197,
											"end": 9215,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 9197,
											"end": 9215,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 8866,
											"end": 9221,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6958,
											"end": 6990,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6958,
											"end": 6990,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6958,
											"end": 6990,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6940,
											"end": 6991,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7059,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7059,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7027,
											"end": 7059,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7000,
											"end": 7060,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7076,
											"end": 7094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7103,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7069,
											"end": 7103,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6913,
											"end": 6931,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6913,
											"end": 6931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2503,
											"end": 2535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2535,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2535,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2536,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2552,
											"end": 2570,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2545,
											"end": 2579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2545,
											"end": 2579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2545,
											"end": 2579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 2311,
											"end": 2585,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1170,
											"end": 1286,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 1170,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 943,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 943,
											"end": 950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 1002,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1002,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1230,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1244,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1240,
											"end": 1244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1230,
											"end": 1244,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1267,
											"end": 1277,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 345,
											"end": 396,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1260,
											"end": 1278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 199,
											"end": 402,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 363,
											"end": 395,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 363,
											"end": 395,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 345,
											"end": 396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 318,
											"end": 336,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 199,
											"end": 402,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 840,
											"end": 846,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 895,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 881,
											"end": 890,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 872,
											"end": 879,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 868,
											"end": 891,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 864,
											"end": 896,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 913,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 861,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 907,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 911,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 861,
											"end": 913,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 861,
											"end": 913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 935,
											"end": 958,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 935,
											"end": 958,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 987,
											"end": 1018,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 977,
											"end": 1019,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1023,
											"end": 1035,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 967,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1061,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 781,
											"end": 1067,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 1067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1410,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1072,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1274,
											"end": 1276,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1277,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1313,
											"end": 1315,
											"name": "PUSH",
											"source": 10,
											"value": "E"
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1311,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1286,
											"end": 1316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08185D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1347,
											"end": 1349,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1325,
											"end": 1369,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1386,
											"end": 1404,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1072,
											"end": 1410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1948,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1764,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1889,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1862,
											"end": 1885,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1903,
											"end": 1904,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1905,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 1855,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1942,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1942,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1764,
											"end": 1948,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1764,
											"end": 1948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2590,
											"end": 2867,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2590,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2657,
											"end": 2663,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2712,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2685,
											"end": 2708,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2681,
											"end": 2713,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2678,
											"end": 2730,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2678,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 2678,
											"end": 2730,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2728,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2678,
											"end": 2730,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 2678,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2758,
											"end": 2767,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2752,
											"end": 2768,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2816,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2804,
											"end": 2817,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2797,
											"end": 2818,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2787,
											"end": 2819,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2777,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 2777,
											"end": 2837,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2833,
											"end": 2834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2835,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3572,
											"name": "tag",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 3232,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3436,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3416,
											"end": 3437,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3416,
											"end": 3437,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3416,
											"end": 3437,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3475,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 3453,
											"end": 3471,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3471,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3476,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3510,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3485,
											"end": 3531,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3563,
											"end": 3565,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3232,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4594,
											"end": 4721,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4594,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4655,
											"end": 4665,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 4650,
											"end": 4653,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4646,
											"end": 4666,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4667,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4686,
											"end": 4690,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 4683,
											"end": 4684,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4676,
											"end": 4691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4714,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4700,
											"end": 4715,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4726,
											"end": 4851,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 4726,
											"end": 4851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4822,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4822,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4822,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4809,
											"end": 4845,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4809,
											"end": 4845,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 4809,
											"end": 4845,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 4825,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4825,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4843,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 4825,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4726,
											"end": 4851,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4726,
											"end": 4851,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4726,
											"end": 4851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4726,
											"end": 4851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4726,
											"end": 4851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4856,
											"end": 5024,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 4856,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4929,
											"end": 4938,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 4969,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4960,
											"end": 4969,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4992,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 4993,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4957,
											"end": 4994,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4947,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 4947,
											"end": 5018,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 4998,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4998,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5246,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 5029,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5095,
											"end": 5096,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5085,
											"end": 5217,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5139,
											"end": 5149,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 5134,
											"end": 5137,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5151,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5178,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 5171,
											"end": 5172,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5164,
											"end": 5179,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5202,
											"end": 5206,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5199,
											"end": 5200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5207,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5217,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 5085,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5231,
											"end": 5240,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5231,
											"end": 5240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5029,
											"end": 5246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5655,
											"end": 5783,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 5655,
											"end": 5783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5754,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5754,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5777,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5740,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 5740,
											"end": 5777,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 5757,
											"end": 5775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/buy_back.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyback(uint256)": "79a9fa1c",
							"canExecuteBuyback(uint256)": "839ea2d9",
							"contractTokenBalance()": "9e9aed62",
							"depositPaymentToken(uint256)": "9063ee20",
							"gasReserve()": "eea7570e",
							"maxBuyableRoboMoney()": "ce1d1f1f",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"paymentToken()": "3013ce29",
							"premiumRate()": "5d0040d3",
							"roboMoney()": "7ef7ba20",
							"setGasReserve(address)": "d4a49c17",
							"setPremiumRate(uint256)": "7ff8b57a",
							"setTargetPrice(uint256)": "6a64eff8",
							"setTaxRate(uint256)": "c6d69a30",
							"targetPrice()": "dc38679c",
							"taxRate()": "771a3a1d",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdrawPaymentToken(uint256)": "07e675fa"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_roboMoney\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gasReserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_premiumRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_taxRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"roboMoneyAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenSpent\",\"type\":\"uint256\"}],\"name\":\"BuyBackExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldGasReserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGasReserve\",\"type\":\"address\"}],\"name\":\"GasReserveUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldTaxRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTaxRate\",\"type\":\"uint256\"}],\"name\":\"TaxRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roboMoneyAmount\",\"type\":\"uint256\"}],\"name\":\"buyback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roboMoneyAmount\",\"type\":\"uint256\"}],\"name\":\"canExecuteBuyback\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasReserve\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBuyableRoboMoney\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"premiumRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"roboMoney\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newGasReserve\",\"type\":\"address\"}],\"name\":\"setGasReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_premiumRate\",\"type\":\"uint256\"}],\"name\":\"setPremiumRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_targetPrice\",\"type\":\"uint256\"}],\"name\":\"setTargetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTaxRate\",\"type\":\"uint256\"}],\"name\":\"setTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A contract that lets users sell (buy back) RoboMoney tokens for a paymentToken,      and then burns the RoboMoney tokens.      Now includes Pausable functionality so the owner can temporarily halt deposits or buybacks.\",\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"buyback(uint256)\":{\"details\":\"whenNotPaused ensures no buybacks are processed if contract is paused.\",\"params\":{\"roboMoneyAmount\":\"Amount of RoboMoney tokens to sell/buy back.\"}},\"canExecuteBuyback(uint256)\":{\"details\":\"Checks if the contract has enough payment tokens to buy back roboMoneyAmount      at the current premium rate.\"},\"contractTokenBalance()\":{\"details\":\"Returns the current contract balance of the payment token.\"},\"depositPaymentToken(uint256)\":{\"details\":\"Owner can deposit payment tokens into the contract to fund future buybacks.Protected by whenNotPaused so you can prevent deposits if needed.\"},\"maxBuyableRoboMoney()\":{\"details\":\"Returns the maximum amount of RoboMoney the contract can buy back given its current payment token balance and the premium rate.\"},\"pause()\":{\"details\":\"Owner can pause the contract (disables buyback & deposit).\"},\"setPremiumRate(uint256)\":{\"details\":\"Sets the premium rate (in %). e.g., 5 => 5% premium.\"},\"setTargetPrice(uint256)\":{\"details\":\"Sets the base price ratio for RoboMoney vs. payment token.\"},\"transferOwnership(address)\":{\"details\":\"Owner can transfer ownership.\"},\"unpause()\":{\"details\":\"Owner can unpause the contract (re-enables buyback & deposit).\"},\"withdrawPaymentToken(uint256)\":{\"details\":\"Owner can withdraw payment tokens from the contract (for leftover tokens, etc.).      This is still allowed even if paused, in case you need to remove funds in an emergency.\"}},\"title\":\"BuyBack\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyback(uint256)\":{\"notice\":\"Buys back RoboMoney from msg.sender at the configured premium rate, paying out the specified ERC20 paymentToken, and then burns the RoboMoney.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/buy_back.sol\":\"BuyBack\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/buy_back.sol\":{\"keccak256\":\"0x4b367e4b7e355b93a37b0f1467692f83208deb1230c3add80fd1ec4807e773c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a3e16d872b521277fc1b7bb860a975073d2f49f1ef56a56395cab452a03b6f4\",\"dweb:/ipfs/QmdMvAJYpvhvGmwBLYpNhy5ST6UuRZWfoM6bJs55uHum6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 949,
								"contract": "contracts/buy_back.sol:BuyBack",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 100,
								"contract": "contracts/buy_back.sol:BuyBack",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1094,
								"contract": "contracts/buy_back.sol:BuyBack",
								"label": "owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1096,
								"contract": "contracts/buy_back.sol:BuyBack",
								"label": "paymentToken",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 1098,
								"contract": "contracts/buy_back.sol:BuyBack",
								"label": "roboMoney",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1100,
								"contract": "contracts/buy_back.sol:BuyBack",
								"label": "gasReserve",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1102,
								"contract": "contracts/buy_back.sol:BuyBack",
								"label": "premiumRate",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1104,
								"contract": "contracts/buy_back.sol:BuyBack",
								"label": "targetPrice",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1106,
								"contract": "contracts/buy_back.sol:BuyBack",
								"label": "taxRate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"buyback(uint256)": {
								"notice": "Buys back RoboMoney from msg.sender at the configured premium rate, paying out the specified ERC20 paymentToken, and then burns the RoboMoney."
							}
						},
						"version": 1
					}
				},
				"IRoboMoney": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "initializeSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "RoboMoney (or RoboMoneyAlpha) interface",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"initializeSupply(uint256)": "d9e63bb1",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"initializeSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"RoboMoney (or RoboMoneyAlpha) interface\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/buy_back.sol\":\"IRoboMoney\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/buy_back.sol\":{\"keccak256\":\"0x4b367e4b7e355b93a37b0f1467692f83208deb1230c3add80fd1ec4807e773c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a3e16d872b521277fc1b7bb860a975073d2f49f1ef56a56395cab452a03b6f4\",\"dweb:/ipfs/QmdMvAJYpvhvGmwBLYpNhy5ST6UuRZWfoM6bJs55uHum6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "For demonstration, here is a minimal Pausable definition inlined. In a real project, just import from OpenZeppelin as shown above.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"For demonstration, here is a minimal Pausable definition inlined. In a real project, just import from OpenZeppelin as shown above.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/buy_back.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/buy_back.sol\":{\"keccak256\":\"0x4b367e4b7e355b93a37b0f1467692f83208deb1230c3add80fd1ec4807e773c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a3e16d872b521277fc1b7bb860a975073d2f49f1ef56a56395cab452a03b6f4\",\"dweb:/ipfs/QmdMvAJYpvhvGmwBLYpNhy5ST6UuRZWfoM6bJs55uHum6J\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 949,
								"contract": "contracts/buy_back.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							936
						],
						"IERC20": [
							232
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 936,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 232,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 936,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								936,
								232
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							936
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 937,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 936,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 233,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							154
						]
					},
					"id": 155,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 154,
							"linearizedBaseContracts": [
								154
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 98,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 97,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 154,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 99,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 108,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 154,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 134,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 114,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 119,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 123,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 124,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 128,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 129,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 130,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 154,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 137,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 138,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 154,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 152,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 148,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 149,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 147,
												"id": 151,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 153,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 145,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 154,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 155,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							232
						]
					},
					"id": 233,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 156,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 157,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 232,
							"linearizedBaseContracts": [
								232
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 166,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 175,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 232,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 232,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 232,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 232,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 232,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 232,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 233,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								166,
								175
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							902
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							232
						],
						"SafeERC20": [
							643
						]
					},
					"id": 644,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 234,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 644,
							"sourceUnit": 233,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 232,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 238,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 644,
							"sourceUnit": 82,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 237,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 240,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 644,
							"sourceUnit": 903,
							"src": "238:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 239,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 902,
										"src": "246:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 241,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 643,
							"linearizedBaseContracts": [
								643
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 246,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "875:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:5"
									},
									"src": "844:46:5"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 255,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1011:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1028:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "1054:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:5"
									},
									"src": "972:109:5"
								},
								{
									"body": {
										"id": 278,
										"nodeType": "Block",
										"src": "1343:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 267,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "1373:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 270,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "1395:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 199,
																	"src": "1395:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 272,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1412:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 273,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 263,
																			"src": "1416:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 274,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 268,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 266,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "1353:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:5"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1293:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 257,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1293:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1293:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1307:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1319:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:5"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:5"
									},
									"scope": 643,
									"src": "1271:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "1760:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 293,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "1790:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 296,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "1812:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 231,
																	"src": "1812:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 298,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 285,
																			"src": "1833:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 299,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "1839:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 300,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 289,
																			"src": "1843:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 301,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 294,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 292,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 601,
														"src": "1770:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:5"
											}
										]
									},
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1696:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 281,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "1696:6:5"
													},
													"referencedDeclaration": 232,
													"src": "1696:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1710:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1724:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1736:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:5"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:5"
									},
									"scope": 643,
									"src": "1670:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2600:139:5",
										"statements": [
											{
												"assignments": [
													318
												],
												"declarations": [
													{
														"constant": false,
														"id": 318,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "2610:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 317,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 327,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 323,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$643",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$643",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 321,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 325,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "2664:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 319,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "2633:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 320,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 209,
														"src": "2633:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "2695:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 330,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "2702:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 331,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "2711:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 332,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "2726:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 328,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "2682:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:5"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2545:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 309,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 308,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "2545:6:5"
													},
													"referencedDeclaration": 232,
													"src": "2545:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2559:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2576:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:5"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:5"
									},
									"scope": 643,
									"src": "2514:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "3505:370:5",
										"statements": [
											{
												"id": 378,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:5",
												"statements": [
													{
														"assignments": [
															349
														],
														"declarations": [
															{
																"constant": false,
																"id": 349,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 378,
																"src": "3539:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 348,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 358,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 354,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$643",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$643",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 352,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 356,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "3597:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 350,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "3566:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 209,
																"src": "3566:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 359,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "3623:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 360,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "3642:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 369,
														"nodeType": "IfStatement",
														"src": "3619:160:5",
														"trueBody": {
															"id": 368,
															"nodeType": "Block",
															"src": "3661:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 363,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 343,
																				"src": "3719:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 364,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 349,
																				"src": "3728:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 365,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 345,
																				"src": "3746:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 362,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 255,
																			"src": "3686:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 367,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 371,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "3805:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 372,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "3812:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 373,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "3821:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 374,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "3840:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$232",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 370,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "3792:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 377,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "3438:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "3438:6:5"
													},
													"referencedDeclaration": 232,
													"src": "3438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "3452:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "3469:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:5"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:5"
									},
									"scope": 643,
									"src": "3407:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "4529:303:5",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 426,
														"src": "4539:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 391,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 395,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "4582:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 219,
															"src": "4582:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 397,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "4598:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "4607:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 399,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 393,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:5"
											},
											{
												"condition": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 403,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 384,
																"src": "4654:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 404,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "4661:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$232",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 402,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "4630:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 425,
												"nodeType": "IfStatement",
												"src": "4625:201:5",
												"trueBody": {
													"id": 424,
													"nodeType": "Block",
													"src": "4676:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 408,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "4710:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 411,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "4732:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$232",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 412,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 219,
																				"src": "4732:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 413,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 386,
																						"src": "4748:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 414,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 415,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 409,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 407,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "4690:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 418,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 420,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "4795:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 421,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "4802:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$232",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 419,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "4775:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 423,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4474:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 383,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 382,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "4474:6:5"
													},
													"referencedDeclaration": 232,
													"src": "4474:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4488:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "4505:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:5"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:5"
									},
									"scope": 643,
									"src": "4452:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "5279:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 440,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "5293:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 454,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "5402:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 455,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "5406:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 456,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "5413:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 452,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "5380:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "5380:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 467,
													"nodeType": "IfStatement",
													"src": "5375:117:5",
													"trueBody": {
														"id": 466,
														"nodeType": "Block",
														"src": "5420:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 462,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 431,
																					"src": "5474:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 460,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 459,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "5441:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 465,
																"nodeType": "RevertStatement",
																"src": "5434:47:5"
															}
														]
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5289:203:5",
												"trueBody": {
													"id": 451,
													"nodeType": "Block",
													"src": "5314:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 446,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "5341:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 447,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "5348:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 448,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "5352:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 445,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "5328:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "5208:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 430,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 429,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5208:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5208:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "5224:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "5236:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "5251:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 436,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:5"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:5"
									},
									"scope": 643,
									"src": "5176:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6017:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 485,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 478,
																"src": "6031:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 500,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 476,
																	"src": "6154:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 501,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "6160:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 502,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6164:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 503,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "6171:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 498,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "6128:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6128:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 514,
													"nodeType": "IfStatement",
													"src": "6123:127:5",
													"trueBody": {
														"id": 513,
														"nodeType": "Block",
														"src": "6178:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 509,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 474,
																					"src": "6232:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 507,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 506,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "6199:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 512,
																"nodeType": "RevertStatement",
																"src": "6192:47:5"
															}
														]
													}
												},
												"id": 515,
												"nodeType": "IfStatement",
												"src": "6027:223:5",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "6052:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 491,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 474,
																		"src": "6083:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 492,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 476,
																		"src": "6090:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 493,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6096:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 494,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 480,
																		"src": "6100:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 490,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "6066:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5895:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 473,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 472,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5895:8:5"
													},
													"referencedDeclaration": 81,
													"src": "5895:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5919:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5941:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5961:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5984:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:5"
									},
									"scope": 643,
									"src": "5850:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "7023:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 530,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 523,
																"src": "7037:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 532,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 544,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "7145:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 545,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "7149:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 546,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "7156:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 542,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "7124:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7124:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 557,
													"nodeType": "IfStatement",
													"src": "7119:116:5",
													"trueBody": {
														"id": 556,
														"nodeType": "Block",
														"src": "7163:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 552,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 521,
																					"src": "7217:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 550,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 549,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 246,
																		"src": "7184:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 555,
																"nodeType": "RevertStatement",
																"src": "7177:47:5"
															}
														]
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "7033:202:5",
												"trueBody": {
													"id": 541,
													"nodeType": "Block",
													"src": "7058:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 536,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 521,
																		"src": "7085:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 537,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 523,
																		"src": "7092:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 538,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 525,
																		"src": "7096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 535,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 427,
																	"src": "7072:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 540,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "6952:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 520,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 519,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6952:8:5"
													},
													"referencedDeclaration": 81,
													"src": "6952:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "6968:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "6980:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "6995:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:5"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:5"
									},
									"scope": 643,
									"src": "6921:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 600,
										"nodeType": "Block",
										"src": "7808:650:5",
										"statements": [
											{
												"assignments": [
													570
												],
												"declarations": [
													{
														"constant": false,
														"id": 570,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "7818:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:5"
											},
											{
												"assignments": [
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 600,
														"src": "7846:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 572,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:5"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:5",
													"nodeType": "YulBlock",
													"src": "7900:396:5",
													"statements": [
														{
															"nativeSrc": "7914:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:5"
																		},
																		"nativeSrc": "7934:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:5",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:5"
																		},
																		"nativeSrc": "7951:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:5"
																		},
																		"nativeSrc": "7968:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:5"
																},
																"nativeSrc": "7929:60:5",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:5",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:5",
																"nodeType": "YulBlock",
																"src": "8050:157:5",
																"statements": [
																	{
																		"nativeSrc": "8068:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:5"
																			},
																			"nativeSrc": "8079:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:5"
																					},
																					"nativeSrc": "8130:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:5"
																			},
																			"nativeSrc": "8107:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:5"
																		},
																		"nativeSrc": "8107:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:5"
																					},
																					"nativeSrc": "8176:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:5"
																			},
																			"nativeSrc": "8164:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:5"
																		},
																		"nativeSrc": "8164:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:5"
																},
																"nativeSrc": "8034:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:5"
															},
															"nativeSrc": "8031:176:5",
															"nodeType": "YulIf",
															"src": "8031:176:5"
														},
														{
															"nativeSrc": "8220:30:5",
															"nodeType": "YulAssignment",
															"src": "8220:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:5"
																},
																"nativeSrc": "8234:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:5"
																}
															]
														},
														{
															"nativeSrc": "8263:23:5",
															"nodeType": "YulAssignment",
															"src": "8263:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:5"
																},
																"nativeSrc": "8278:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 566,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:5",
														"valueSize": 1
													},
													{
														"declaration": 566,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:5",
														"valueSize": 1
													},
													{
														"declaration": 570,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:5",
														"valueSize": 1
													},
													{
														"declaration": 573,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:5",
														"valueSize": 1
													},
													{
														"declaration": 564,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 575,
												"nodeType": "InlineAssembly",
												"src": "7875:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 576,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "8310:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 587,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 573,
															"src": "8362:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 581,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "8336:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$232",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 579,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 599,
												"nodeType": "IfStatement",
												"src": "8306:146:5",
												"trueBody": {
													"id": 598,
													"nodeType": "Block",
													"src": "8380:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 594,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "8434:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$232",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 592,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 595,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 591,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "8401:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 597,
															"nodeType": "RevertStatement",
															"src": "8394:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 601,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "7767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 563,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 562,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "7767:6:5"
													},
													"referencedDeclaration": 232,
													"src": "7767:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "7781:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:5"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:5"
									},
									"scope": 643,
									"src": "7738:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 641,
										"nodeType": "Block",
										"src": "9049:391:5",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "9059:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 612,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:5"
											},
											{
												"assignments": [
													616
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "9081:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 615,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 617,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:5"
											},
											{
												"assignments": [
													619
												],
												"declarations": [
													{
														"constant": false,
														"id": 619,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 641,
														"src": "9109:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:5",
													"nodeType": "YulBlock",
													"src": "9163:174:5",
													"statements": [
														{
															"nativeSrc": "9177:71:5",
															"nodeType": "YulAssignment",
															"src": "9177:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:5"
																		},
																		"nativeSrc": "9193:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:5"
																		},
																		"nativeSrc": "9210:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:5"
																		},
																		"nativeSrc": "9227:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:5"
																},
																"nativeSrc": "9188:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:5"
																}
															]
														},
														{
															"nativeSrc": "9261:30:5",
															"nodeType": "YulAssignment",
															"src": "9261:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:5"
																},
																"nativeSrc": "9275:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:5"
																}
															]
														},
														{
															"nativeSrc": "9304:23:5",
															"nodeType": "YulAssignment",
															"src": "9304:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:5"
																},
																"nativeSrc": "9319:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 607,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:5",
														"valueSize": 1
													},
													{
														"declaration": 607,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:5",
														"valueSize": 1
													},
													{
														"declaration": 616,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:5",
														"valueSize": 1
													},
													{
														"declaration": 619,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:5",
														"valueSize": 1
													},
													{
														"declaration": 613,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:5",
														"valueSize": 1
													},
													{
														"declaration": 605,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 621,
												"nodeType": "InlineAssembly",
												"src": "9138:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 622,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "9353:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 623,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "9365:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 634,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "9416:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 628,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 605,
																						"src": "9391:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$232",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 627,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 626,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 631,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 638,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 611,
												"id": 640,
												"nodeType": "Return",
												"src": "9346:87:5"
											}
										]
									},
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "8993:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$232",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 604,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 603,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 232,
														"src": "8993:6:5"
													},
													"referencedDeclaration": 232,
													"src": "8993:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$232",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "9007:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 606,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:5"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "9043:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:5"
									},
									"scope": 643,
									"src": "8960:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 644,
							"src": "750:8692:5",
							"usedErrors": [
								246,
								255
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							902
						],
						"Errors": [
							924
						]
					},
					"id": 903,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 645,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 903,
							"sourceUnit": 925,
							"src": "127:36:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 646,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 924,
										"src": "135:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 648,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 902,
							"linearizedBaseContracts": [
								902
							],
							"name": "Address",
							"nameLocation": "241:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:6",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 653,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "358:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:6"
									},
									"src": "335:39:6"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "1361:278:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 663,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$902",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$902",
																		"typeString": "library Address"
																	}
																],
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 661,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 666,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "1399:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 680,
												"nodeType": "IfStatement",
												"src": "1371:125:6",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "1407:89:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 673,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$902",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$902",
																						"typeString": "library Address"
																					}
																				],
																				"id": 672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 671,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 676,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "1478:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 668,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "1428:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$924_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:6",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 912,
																	"src": "1428:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 678,
															"nodeType": "RevertStatement",
															"src": "1421:64:6"
														}
													]
												}
											},
											{
												"assignments": [
													682,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 699,
														"src": "1507:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 683,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "1525:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 685,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "1547:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:6"
											},
											{
												"condition": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:6",
													"subExpression": {
														"id": 690,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1573:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "1568:65:6",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "1582:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 692,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "1603:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$924_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:6",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 915,
																	"src": "1603:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 696,
															"nodeType": "RevertStatement",
															"src": "1596:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "1309:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "1336:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:6"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:6"
									},
									"scope": 902,
									"src": "1290:349:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "2573:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "2612:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "2620:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 710,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "2590:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 709,
												"id": 715,
												"nodeType": "Return",
												"src": "2583:45:6"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2506:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2522:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:6"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "2559:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 707,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:6"
									},
									"scope": 902,
									"src": "2484:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "3072:294:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 731,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$902",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$902",
																		"typeString": "library Address"
																	}
																],
																"id": 730,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 729,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 734,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "3110:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "3082:123:6",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "3117:88:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 741,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$902",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$902",
																						"typeString": "library Address"
																					}
																				],
																				"id": 740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 739,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "3188:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 736,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "3138:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$924_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:6",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 912,
																	"src": "3138:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 746,
															"nodeType": "RevertStatement",
															"src": "3131:63:6"
														}
													]
												}
											},
											{
												"assignments": [
													750,
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 750,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "3215:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 749,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 766,
														"src": "3229:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 751,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 759,
												"initialValue": {
													"arguments": [
														{
															"id": 757,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "3282:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 753,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "3256:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 755,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "3275:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 761,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "3331:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 762,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "3339:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 763,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3348:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 760,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "3304:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 728,
												"id": 765,
												"nodeType": "Return",
												"src": "3297:62:6"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2990:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3006:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3025:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:6"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3058:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 726,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:6"
									},
									"scope": 902,
									"src": "2959:407:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "3605:154:6",
										"statements": [
											{
												"assignments": [
													778,
													780
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "3616:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 777,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 780,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "3630:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 779,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 785,
												"initialValue": {
													"arguments": [
														{
															"id": 783,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 772,
															"src": "3675:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 781,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3657:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3724:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 788,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "3732:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 789,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "3741:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 786,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "3697:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 776,
												"id": 791,
												"nodeType": "Return",
												"src": "3690:62:6"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3533:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3549:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:6"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3591:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 774,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:6"
									},
									"scope": 902,
									"src": "3505:254:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "3997:156:6",
										"statements": [
											{
												"assignments": [
													804,
													806
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 818,
														"src": "4008:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 803,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 806,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 818,
														"src": "4022:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 805,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 811,
												"initialValue": {
													"arguments": [
														{
															"id": 809,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "4069:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 807,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4049:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 813,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "4118:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 814,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "4126:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 815,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4135:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 812,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 859,
														"src": "4091:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 802,
												"id": 817,
												"nodeType": "Return",
												"src": "4084:62:6"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "3930:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "3946:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 797,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:6"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "3983:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 800,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:6"
									},
									"scope": 902,
									"src": "3900:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "4579:424:6",
										"statements": [
											{
												"condition": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:6",
													"subExpression": {
														"id": 831,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "4594:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 856,
													"nodeType": "Block",
													"src": "4653:344:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 838,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "4841:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 842,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 822,
																				"src": "4867:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 853,
															"nodeType": "IfStatement",
															"src": "4837:119:6",
															"trueBody": {
																"id": 852,
																"nodeType": "Block",
																"src": "4892:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 849,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "4934:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 848,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 653,
																				"src": "4917:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 851,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 854,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "4976:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 830,
															"id": 855,
															"nodeType": "Return",
															"src": "4969:17:6"
														}
													]
												},
												"id": 857,
												"nodeType": "IfStatement",
												"src": "4589:408:6",
												"trueBody": {
													"id": 837,
													"nodeType": "Block",
													"src": "4603:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 834,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "4625:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 833,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "4617:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 836,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4466:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4490:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4512:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 825,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:6"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4565:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:6"
									},
									"scope": 902,
									"src": "4421:582:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "5307:122:6",
										"statements": [
											{
												"condition": {
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:6",
													"subExpression": {
														"id": 869,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "5322:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 878,
													"nodeType": "Block",
													"src": "5381:42:6",
													"statements": [
														{
															"expression": {
																"id": 876,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "5402:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 868,
															"id": 877,
															"nodeType": "Return",
															"src": "5395:17:6"
														}
													]
												},
												"id": 879,
												"nodeType": "IfStatement",
												"src": "5317:106:6",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "5331:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 872,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "5353:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 871,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 901,
																	"src": "5345:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 874,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:6",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "5231:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "5245:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:6"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "5293:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 866,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:6"
									},
									"scope": 902,
									"src": "5205:224:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "5598:432:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 887,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "5674:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 898,
													"nodeType": "Block",
													"src": "5973:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 893,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "5994:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$924_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:6",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 915,
																	"src": "5994:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 897,
															"nodeType": "RevertStatement",
															"src": "5987:26:6"
														}
													]
												},
												"id": 899,
												"nodeType": "IfStatement",
												"src": "5670:354:6",
												"trueBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "5697:270:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:6",
																"nodeType": "YulBlock",
																"src": "5824:133:6",
																"statements": [
																	{
																		"nativeSrc": "5842:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:6"
																			},
																			"nativeSrc": "5865:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:6",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:6",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:6"
																					},
																					"nativeSrc": "5906:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:6"
																			},
																			"nativeSrc": "5899:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:6"
																		},
																		"nativeSrc": "5899:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:6"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 884,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 884,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:6",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 891,
															"nodeType": "InlineAssembly",
															"src": "5799:158:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:6",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5560:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:6"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:6"
									},
									"scope": 902,
									"src": "5543:487:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 903,
							"src": "233:5799:6",
							"usedErrors": [
								653
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							924
						]
					},
					"id": 925,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 904,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 905,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:7",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 924,
							"linearizedBaseContracts": [
								924
							],
							"name": "Errors",
							"nameLocation": "419:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:7",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 912,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "557:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "574:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:7"
									},
									"src": "531:59:7"
								},
								{
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:7",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 915,
									"name": "FailedCall",
									"nameLocation": "696:10:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:7"
									},
									"src": "690:19:7"
								},
								{
									"documentation": {
										"id": 916,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:7",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 918,
									"name": "FailedDeployment",
									"nameLocation": "772:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:7"
									},
									"src": "766:25:7"
								},
								{
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:7",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 923,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "884:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:7"
									},
									"src": "860:33:7"
								}
							],
							"scope": 925,
							"src": "411:484:7",
							"usedErrors": [
								912,
								915,
								918,
								923
							],
							"usedEvents": []
						}
					],
					"src": "100:796:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							936
						]
					},
					"id": 937,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 926,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 927,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 936,
							"linearizedBaseContracts": [
								936
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 935,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 929,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 936,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 937,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"contracts/buy_back.sol": {
				"ast": {
					"absolutePath": "contracts/buy_back.sol",
					"exportedSymbols": {
						"BuyBack": [
							1661
						],
						"IERC20": [
							232
						],
						"IRoboMoney": [
							1087
						],
						"Pausable": [
							1025
						],
						"ReentrancyGuard": [
							154
						],
						"SafeERC20": [
							643
						]
					},
					"id": 1662,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 938,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 939,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 155,
							"src": "61:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 941,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 644,
							"src": "125:82:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 940,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 643,
										"src": "133:9:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 942,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1662,
							"sourceUnit": 233,
							"src": "209:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"global": false,
							"id": 946,
							"libraryName": {
								"id": 943,
								"name": "SafeERC20",
								"nameLocations": [
									"308:9:9"
								],
								"nodeType": "IdentifierPath",
								"referencedDeclaration": 643,
								"src": "308:9:9"
							},
							"nodeType": "UsingForDirective",
							"src": "302:27:9",
							"typeName": {
								"id": 945,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 944,
									"name": "IERC20",
									"nameLocations": [
										"322:6:9"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 232,
									"src": "322:6:9"
								},
								"referencedDeclaration": 232,
								"src": "322:6:9",
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_IERC20_$232",
									"typeString": "contract IERC20"
								}
							}
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 947,
								"nodeType": "StructuredDocumentation",
								"src": "523:152:9",
								"text": " @dev For demonstration, here is a minimal Pausable definition inlined.\n In a real project, just import from OpenZeppelin as shown above."
							},
							"fullyImplemented": true,
							"id": 1025,
							"linearizedBaseContracts": [
								1025
							],
							"name": "Pausable",
							"nameLocation": "695:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 949,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "724:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1025,
									"src": "711:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 948,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "711:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 953,
									"name": "Paused",
									"nameLocation": "746:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "761:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "753:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:17:9"
									},
									"src": "740:30:9"
								},
								{
									"anonymous": false,
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 957,
									"name": "Unpaused",
									"nameLocation": "782:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "791:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:9"
									},
									"src": "776:32:9"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "830:34:9",
										"statements": [
											{
												"expression": {
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 960,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "841:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "851:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "841:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "841:15:9"
											}
										]
									},
									"id": 965,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "827:2:9"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:0:9"
									},
									"scope": 1025,
									"src": "816:48:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "925:33:9",
										"statements": [
											{
												"expression": {
													"id": 970,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 949,
													"src": "943:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 969,
												"id": 971,
												"nodeType": "Return",
												"src": "936:14:9"
											}
										]
									},
									"functionSelector": "5c975abb",
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "881:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:2:9"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "919:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "919:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "918:6:9"
									},
									"scope": 1025,
									"src": "872:86:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "991:69:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1010:9:9",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 976,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "1011:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1011:8:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1021:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1002:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1002:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "1002:38:9"
											},
											{
												"id": 982,
												"nodeType": "PlaceholderStatement",
												"src": "1051:1:9"
											}
										]
									},
									"id": 984,
									"name": "whenNotPaused",
									"nameLocation": "975:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:2:9"
									},
									"src": "966:94:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "1090:72:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 987,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "1109:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1109:8:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1119:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 986,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1101:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1101:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "1101:41:9"
											},
											{
												"id": 992,
												"nodeType": "PlaceholderStatement",
												"src": "1153:1:9"
											}
										]
									},
									"id": 994,
									"name": "whenPaused",
									"nameLocation": "1077:10:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:2:9"
									},
									"src": "1068:94:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "1219:67:9",
										"statements": [
											{
												"expression": {
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 999,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1230:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1240:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1230:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "1230:14:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1004,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1267:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1271:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1267:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1003,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1260:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1260:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "EmitStatement",
												"src": "1255:23:9"
											}
										]
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 997,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 996,
												"name": "whenNotPaused",
												"nameLocations": [
													"1205:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 984,
												"src": "1205:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1205:13:9"
										}
									],
									"name": "_pause",
									"nameLocation": "1179:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1185:2:9"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:0:9"
									},
									"scope": 1025,
									"src": "1170:116:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "1342:70:9",
										"statements": [
											{
												"expression": {
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1014,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1353:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1363:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1353:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "1353:15:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1019,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1393:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1397:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1393:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1018,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "1384:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1384:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "EmitStatement",
												"src": "1379:25:9"
											}
										]
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1012,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1011,
												"name": "whenPaused",
												"nameLocations": [
													"1331:10:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 994,
												"src": "1331:10:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1331:10:9"
										}
									],
									"name": "_unpause",
									"nameLocation": "1303:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1311:2:9"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:0:9"
									},
									"scope": 1025,
									"src": "1294:118:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1662,
							"src": "677:738:9",
							"usedErrors": [],
							"usedEvents": [
								953,
								957
							]
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRoboMoney",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1026,
								"nodeType": "StructuredDocumentation",
								"src": "1937:57:9",
								"text": " @dev RoboMoney (or RoboMoneyAlpha) interface"
							},
							"fullyImplemented": false,
							"id": 1087,
							"linearizedBaseContracts": [
								1087
							],
							"name": "IRoboMoney",
							"nameLocation": "2006:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d9e63bb1",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initializeSupply",
									"nameLocation": "2033:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2058:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "2050:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:16:9"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2074:0:9"
									},
									"scope": 1087,
									"src": "2024:51:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 1038,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "2090:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2103:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2095:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2095:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2115:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "2107:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:28:9"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2131:0:9"
									},
									"scope": 1087,
									"src": "2081:51:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 1045,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "2147:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2160:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "2152:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2152:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2174:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "2166:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2166:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:30:9"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2190:0:9"
									},
									"scope": 1087,
									"src": "2138:53:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1054,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2206:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2223:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "2215:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2242:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "2234:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:35:9"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "2268:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2268:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:6:9"
									},
									"scope": 1087,
									"src": "2197:77:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2289:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2307:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2299:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:17:9"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "2339:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2339:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2338:9:9"
									},
									"scope": 1087,
									"src": "2280:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1066,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2363:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:2:9"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2400:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2399:9:9"
									},
									"scope": 1087,
									"src": "2354:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2424:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2445:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2437:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2437:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2461:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2453:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2453:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2480:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2472:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2472:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:51:9"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2506:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1074,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2506:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:6:9"
									},
									"scope": 1087,
									"src": "2415:97:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1086,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2527:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2545:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2537:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2537:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2560:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2552:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2536:32:9"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "2592:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2592:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:9:9"
									},
									"scope": 1087,
									"src": "2518:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1662,
							"src": "1996:608:9",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1089,
										"name": "Pausable",
										"nameLocations": [
											"2893:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1025,
										"src": "2893:8:9"
									},
									"id": 1090,
									"nodeType": "InheritanceSpecifier",
									"src": "2893:8:9"
								},
								{
									"baseName": {
										"id": 1091,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"2903:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 154,
										"src": "2903:15:9"
									},
									"id": 1092,
									"nodeType": "InheritanceSpecifier",
									"src": "2903:15:9"
								}
							],
							"canonicalName": "BuyBack",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1088,
								"nodeType": "StructuredDocumentation",
								"src": "2608:263:9",
								"text": " @title BuyBack\n @dev A contract that lets users sell (buy back) RoboMoney tokens for a paymentToken,\n      and then burns the RoboMoney tokens.\n      Now includes Pausable functionality so the owner can temporarily halt deposits or buybacks."
							},
							"fullyImplemented": true,
							"id": 1661,
							"linearizedBaseContracts": [
								1661,
								154,
								1025
							],
							"name": "BuyBack",
							"nameLocation": "2882:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1094,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "2941:5:9",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "2926:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1093,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2926:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3013ce29",
									"id": 1096,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "2968:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "2953:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1095,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2953:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7ef7ba20",
									"id": 1098,
									"mutability": "mutable",
									"name": "roboMoney",
									"nameLocation": "3046:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "3031:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1097,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3031:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eea7570e",
									"id": 1100,
									"mutability": "mutable",
									"name": "gasReserve",
									"nameLocation": "3136:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "3121:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1099,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "3121:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5d0040d3",
									"id": 1102,
									"mutability": "mutable",
									"name": "premiumRate",
									"nameLocation": "3288:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "3273:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1101,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3273:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc38679c",
									"id": 1104,
									"mutability": "mutable",
									"name": "targetPrice",
									"nameLocation": "3340:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "3325:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1103,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3325:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "771a3a1d",
									"id": 1106,
									"mutability": "mutable",
									"name": "taxRate",
									"nameLocation": "3422:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1661,
									"src": "3407:22:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1105,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3407:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1112,
									"name": "OwnershipTransferred",
									"nameLocation": "3444:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "3481:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "3465:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3465:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3512:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "3496:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3496:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3464:57:9"
									},
									"src": "3438:84:9"
								},
								{
									"anonymous": false,
									"eventSelector": "cb7f55d0b91628d4520b789339dae4803ab07182ea89d138acbd965dac51dc65",
									"id": 1120,
									"name": "BuyBackExecuted",
									"nameLocation": "3534:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "3566:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3550:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3550:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"indexed": false,
												"mutability": "mutable",
												"name": "roboMoneyAmount",
												"nameLocation": "3581:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3573:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3573:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenSpent",
												"nameLocation": "3606:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "3598:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3598:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3549:68:9"
									},
									"src": "3528:90:9"
								},
								{
									"anonymous": false,
									"eventSelector": "b4281bb17cdc594e3cf6d419da95f70a6b02d856b26438d381ee1246a8e89f12",
									"id": 1126,
									"name": "GasReserveUpdated",
									"nameLocation": "3630:17:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldGasReserve",
												"nameLocation": "3664:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3648:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3648:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": true,
												"mutability": "mutable",
												"name": "newGasReserve",
												"nameLocation": "3695:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "3679:29:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3679:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3647:62:9"
									},
									"src": "3624:86:9"
								},
								{
									"anonymous": false,
									"eventSelector": "a8ee157eb2a9aa895d74df4d2d3bc0ad165ff3162f8ec46a4ecf602dd5c48fda",
									"id": 1132,
									"name": "TaxRateUpdated",
									"nameLocation": "3722:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldTaxRate",
												"nameLocation": "3745:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3737:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3737:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTaxRate",
												"nameLocation": "3765:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "3757:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3757:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3736:40:9"
									},
									"src": "3716:61:9"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "3984:247:9",
										"statements": [
											{
												"expression": {
													"id": 1150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1147,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "3995:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1148,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4003:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4007:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4003:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3995:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1151,
												"nodeType": "ExpressionStatement",
												"src": "3995:18:9"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1152,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "4024:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1153,
														"name": "_paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "4039:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4024:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "4024:28:9"
											},
											{
												"expression": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1156,
														"name": "gasReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "4063:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1157,
														"name": "_gasReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "4076:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4063:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1159,
												"nodeType": "ExpressionStatement",
												"src": "4063:24:9"
											},
											{
												"expression": {
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1160,
														"name": "roboMoney",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1098,
														"src": "4098:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1161,
														"name": "_roboMoney",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "4110:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4098:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1163,
												"nodeType": "ExpressionStatement",
												"src": "4098:22:9"
											},
											{
												"expression": {
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1164,
														"name": "premiumRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "4131:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1165,
														"name": "_premiumRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "4145:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4131:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "4131:26:9"
											},
											{
												"expression": {
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1168,
														"name": "targetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "4168:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1169,
														"name": "_targetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "4182:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4168:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "4168:26:9"
											},
											{
												"expression": {
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1172,
														"name": "taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "4205:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1173,
														"name": "_taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "4215:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4205:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1175,
												"nodeType": "ExpressionStatement",
												"src": "4205:18:9"
											}
										]
									},
									"id": 1177,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "_paymentToken",
												"nameLocation": "3815:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "3807:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3807:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "_roboMoney",
												"nameLocation": "3847:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "3839:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "_gasReserve",
												"nameLocation": "3876:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "3868:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3868:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "_premiumRate",
												"nameLocation": "3906:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "3898:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "_targetPrice",
												"nameLocation": "3937:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "3929:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "_taxRate",
												"nameLocation": "3968:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "3960:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3960:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:187:9"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3984:0:9"
									},
									"scope": 1661,
									"src": "3785:446:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "4260:77:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1180,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4279:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4283:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4279:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1182,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "4293:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4279:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4300:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 1179,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4271:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4271:46:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "4271:46:9"
											},
											{
												"id": 1187,
												"nodeType": "PlaceholderStatement",
												"src": "4328:1:9"
											}
										]
									},
									"id": 1189,
									"name": "onlyOwner",
									"nameLocation": "4248:9:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4257:2:9"
									},
									"src": "4239:98:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "4471:27:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1195,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "4482:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4482:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "4482:8:9"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "4345:84:9",
										"text": " @dev Owner can pause the contract (disables buyback & deposit)."
									},
									"functionSelector": "8456cb59",
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1193,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1192,
												"name": "onlyOwner",
												"nameLocations": [
													"4461:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "4461:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4461:9:9"
										}
									],
									"name": "pause",
									"nameLocation": "4444:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4449:2:9"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4471:0:9"
									},
									"scope": 1661,
									"src": "4435:63:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "4638:29:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1205,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "4649:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4649:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "4649:10:9"
											}
										]
									},
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "4506:88:9",
										"text": " @dev Owner can unpause the contract (re-enables buyback & deposit)."
									},
									"functionSelector": "3f4ba83a",
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1202,
												"name": "onlyOwner",
												"nameLocations": [
													"4628:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "4628:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4628:9:9"
										}
									],
									"name": "unpause",
									"nameLocation": "4609:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4616:2:9"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4638:0:9"
									},
									"scope": 1661,
									"src": "4600:67:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "4824:160:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1218,
																"name": "_premiumRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "4895:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4911:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "4895:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207072656d69756d2072617465",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4916:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ddbcae46186cf25f9e3ee8796d279e9031af56c8275071f75dfd014ec7d6358c",
																"typeString": "literal_string \"Invalid premium rate\""
															},
															"value": "Invalid premium rate"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ddbcae46186cf25f9e3ee8796d279e9031af56c8275071f75dfd014ec7d6358c",
																"typeString": "literal_string \"Invalid premium rate\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4887:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4887:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "4887:52:9"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1224,
														"name": "premiumRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1102,
														"src": "4950:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1225,
														"name": "_premiumRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "4964:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4950:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "4950:26:9"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "4675:78:9",
										"text": " @dev Sets the premium rate (in %). e.g., 5 => 5% premium."
									},
									"functionSelector": "7ff8b57a",
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1215,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1214,
												"name": "onlyOwner",
												"nameLocations": [
													"4814:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "4814:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4814:9:9"
										}
									],
									"name": "setPremiumRate",
									"nameLocation": "4768:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "_premiumRate",
												"nameLocation": "4791:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "4783:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4783:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4782:22:9"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4824:0:9"
									},
									"scope": 1661,
									"src": "4759:225:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "5147:45:9",
										"statements": [
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "targetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "5158:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1238,
														"name": "_targetPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "5172:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5158:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "5158:26:9"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "4992:84:9",
										"text": " @dev Sets the base price ratio for RoboMoney vs. payment token."
									},
									"functionSelector": "6a64eff8",
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1235,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1234,
												"name": "onlyOwner",
												"nameLocations": [
													"5137:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "5137:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5137:9:9"
										}
									],
									"name": "setTargetPrice",
									"nameLocation": "5091:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "_targetPrice",
												"nameLocation": "5114:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "5106:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5106:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:22:9"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5147:0:9"
									},
									"scope": 1661,
									"src": "5082:110:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "5325:166:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "5344:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5364:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5356:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1252,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5356:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5356:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5344:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6577206f776e65722063616e6e6f74206265207a65726f2061646472657373",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5368:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2",
																"typeString": "literal_string \"New owner cannot be zero address\""
															},
															"value": "New owner cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f16f43cb73d56e0745728a6b55de7a4e958d36df2c8d7b1ccb6242c8ad2ba8d2",
																"typeString": "literal_string \"New owner cannot be zero address\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5336:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5336:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "5336:67:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1261,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "5440:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1262,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "5447:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1260,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "5419:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5419:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "EmitStatement",
												"src": "5414:42:9"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1265,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "5467:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1266,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "5475:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5467:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "5467:16:9"
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "5200:55:9",
										"text": " @dev Owner can transfer ownership."
									},
									"functionSelector": "f2fde38b",
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1248,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1247,
												"name": "onlyOwner",
												"nameLocations": [
													"5315:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "5315:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5315:9:9"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "5270:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "5296:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "5288:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5288:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5287:18:9"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5325:0:9"
									},
									"scope": 1661,
									"src": "5261:230:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "5930:1442:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1281,
																"name": "roboMoneyAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "5949:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5967:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5949:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206465706f73697420526f626f4d6f6e6579",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5970:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80d292cb0bbfe8a121f50ca8272137bc0920ac915af91920e9451b3f9678aeea",
																"typeString": "literal_string \"Must deposit RoboMoney\""
															},
															"value": "Must deposit RoboMoney"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80d292cb0bbfe8a121f50ca8272137bc0920ac915af91920e9451b3f9678aeea",
																"typeString": "literal_string \"Must deposit RoboMoney\""
															}
														],
														"id": 1280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5941:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5941:54:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "5941:54:9"
											},
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "allowed",
														"nameLocation": "6058:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "6050:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6050:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1293,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6100:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6104:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6100:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1297,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6120:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																],
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6112:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1295,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6112:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6112:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1290,
																	"name": "roboMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "6079:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1289,
																"name": "IRoboMoney",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "6068:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRoboMoney_$1087_$",
																	"typeString": "type(contract IRoboMoney)"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6068:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoboMoney_$1087",
																"typeString": "contract IRoboMoney"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6090:9:9",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1086,
														"src": "6068:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6068:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6050:76:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1302,
																"name": "allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "6145:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1303,
																"name": "roboMoneyAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "6156:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6145:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420526f626f4d6f6e657920616c6c6f77616e6365",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6173:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4b03365d388099750ed6c970686ed6d0cbebc1f630a55a1dfd7c9c24d504ee8",
																"typeString": "literal_string \"Insufficient RoboMoney allowance\""
															},
															"value": "Insufficient RoboMoney allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4b03365d388099750ed6c970686ed6d0cbebc1f630a55a1dfd7c9c24d504ee8",
																"typeString": "literal_string \"Insufficient RoboMoney allowance\""
															}
														],
														"id": 1301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6137:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6137:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "6137:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1312,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6309:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6313:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6309:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1316,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6329:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																],
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6321:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1314,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6321:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6321:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1318,
															"name": "roboMoneyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "6336:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1309,
																	"name": "roboMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "6281:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1308,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "6274:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6274:17:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6292:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 306,
														"src": "6274:34:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6274:78:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "6274:78:9"
											},
											{
												"assignments": [
													1322
												],
												"declarations": [
													{
														"constant": false,
														"id": 1322,
														"mutability": "mutable",
														"name": "premiumPrice",
														"nameLocation": "6511:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "6503:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6503:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1332,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1323,
																	"name": "targetPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "6527:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313030",
																				"id": 1324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6542:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1325,
																				"name": "premiumRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "6548:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6542:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1327,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6541:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6527:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1329,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6526:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6564:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "6526:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6503:64:9"
											},
											{
												"assignments": [
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "6586:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "6578:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6578:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1341,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1335,
																	"name": "roboMoneyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "6601:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1336,
																	"name": "premiumPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1322,
																	"src": "6619:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6601:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1338,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6600:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6635:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "6600:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6578:61:9"
											},
											{
												"assignments": [
													1343
												],
												"declarations": [
													{
														"constant": false,
														"id": 1343,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "6716:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "6708:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1342,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6708:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1353,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1350,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6772:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																],
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6764:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1348,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6764:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6764:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1345,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "6740:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1344,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "6733:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6733:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6754:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "6733:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6733:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6708:70:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1355,
																"name": "currentBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "6797:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1356,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "6815:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6797:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768207061796d656e74546f6b656e20696e20636f6e7472616374",
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6828:37:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eaf628f11a54761137ed574496fc110ea1e71577aa5ec115c8b8bea70ec3328b",
																"typeString": "literal_string \"Not enough paymentToken in contract\""
															},
															"value": "Not enough paymentToken in contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eaf628f11a54761137ed574496fc110ea1e71577aa5ec115c8b8bea70ec3328b",
																"typeString": "literal_string \"Not enough paymentToken in contract\""
															}
														],
														"id": 1354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6789:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6789:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "6789:77:9"
											},
											{
												"assignments": [
													1362
												],
												"declarations": [
													{
														"constant": false,
														"id": 1362,
														"mutability": "mutable",
														"name": "taxAmount",
														"nameLocation": "6929:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "6921:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1361,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6921:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1369,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1363,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "6942:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1364,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "6956:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6942:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1366,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6941:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6967:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "6941:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6921:51:9"
											},
											{
												"assignments": [
													1371
												],
												"declarations": [
													{
														"constant": false,
														"id": 1371,
														"mutability": "mutable",
														"name": "userAmount",
														"nameLocation": "6991:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "6983:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1370,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6983:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1375,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1372,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "7004:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1373,
														"name": "taxAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "7018:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7004:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6983:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1380,
															"name": "gasReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "7074:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1381,
															"name": "taxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1362,
															"src": "7086:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1377,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "7047:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1376,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7040:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7040:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7061:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "7040:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7040:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "7040:56:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1388,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7141:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7145:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7141:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1390,
															"name": "userAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "7153:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1385,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "7114:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1384,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7107:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7107:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7128:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "7107:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$232_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$232_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7107:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1392,
												"nodeType": "ExpressionStatement",
												"src": "7107:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1399,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7266:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																],
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7258:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1397,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7258:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7258:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1401,
															"name": "roboMoneyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "7273:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1394,
																	"name": "roboMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1098,
																	"src": "7242:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1393,
																"name": "IRoboMoney",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "7231:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IRoboMoney_$1087_$",
																	"typeString": "type(contract IRoboMoney)"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7231:21:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IRoboMoney_$1087",
																"typeString": "contract IRoboMoney"
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7253:4:9",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1045,
														"src": "7231:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7231:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "7231:58:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1405,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7323:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7327:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7323:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1407,
															"name": "roboMoneyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "7335:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1408,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "7352:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1404,
														"name": "BuyBackExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "7307:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "EmitStatement",
												"src": "7302:62:9"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "5499:347:9",
										"text": " @notice Buys back RoboMoney from msg.sender at the configured premium rate,\n paying out the specified ERC20 paymentToken, and then burns the RoboMoney.\n @param roboMoneyAmount Amount of RoboMoney tokens to sell/buy back.\n @dev whenNotPaused ensures no buybacks are processed if contract is paused."
									},
									"functionSelector": "79a9fa1c",
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1276,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1275,
												"name": "whenNotPaused",
												"nameLocations": [
													"5903:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 984,
												"src": "5903:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5903:13:9"
										},
										{
											"id": 1278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1277,
												"name": "nonReentrant",
												"nameLocations": [
													"5917:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "5917:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5917:12:9"
										}
									],
									"name": "buyback",
									"nameLocation": "5861:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "roboMoneyAmount",
												"nameLocation": "5877:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "5869:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5869:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5868:25:9"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5930:0:9"
									},
									"scope": 1661,
									"src": "5852:1520:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "7644:214:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1423,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1415,
																"src": "7663:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7672:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7663:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f736974206d757374206265203e2030",
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7675:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_413580c2bed8f5997e496999aeae2d0944cef34dd07600d725723cfeb9a27018",
																"typeString": "literal_string \"Deposit must be > 0\""
															},
															"value": "Deposit must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_413580c2bed8f5997e496999aeae2d0944cef34dd07600d725723cfeb9a27018",
																"typeString": "literal_string \"Deposit must be > 0\""
															}
														],
														"id": 1422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7655:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7655:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "7655:42:9"
											},
											{
												"assignments": [
													1430
												],
												"declarations": [
													{
														"constant": false,
														"id": 1430,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7713:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1449,
														"src": "7708:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1429,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7708:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1435,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7757:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7761:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7757:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1439,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7777:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																],
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7769:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1437,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7769:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7769:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1441,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "7784:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1432,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "7730:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1431,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "7723:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7723:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7744:12:9",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 231,
														"src": "7723:33:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7723:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7708:83:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1445,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "7810:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061796d656e7420746f6b656e206465706f736974206661696c6564",
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7819:30:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd9789bd50a2200c2c56ae184b05b7a27676b31a0a3efe942c8180da88e2a1b9",
																"typeString": "literal_string \"Payment token deposit failed\""
															},
															"value": "Payment token deposit failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd9789bd50a2200c2c56ae184b05b7a27676b31a0a3efe942c8180da88e2a1b9",
																"typeString": "literal_string \"Payment token deposit failed\""
															}
														],
														"id": 1444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7802:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7802:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1448,
												"nodeType": "ExpressionStatement",
												"src": "7802:48:9"
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "7380:180:9",
										"text": " @dev Owner can deposit payment tokens into the contract to fund future buybacks.\n @dev Protected by whenNotPaused so you can prevent deposits if needed."
									},
									"functionSelector": "9063ee20",
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1417,
												"name": "onlyOwner",
												"nameLocations": [
													"7620:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "7620:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7620:9:9"
										},
										{
											"id": 1420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1419,
												"name": "whenNotPaused",
												"nameLocations": [
													"7630:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 984,
												"src": "7630:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7630:13:9"
										}
									],
									"name": "depositPaymentToken",
									"nameLocation": "7575:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7603:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "7595:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7595:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7594:16:9"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7644:0:9"
									},
									"scope": 1661,
									"src": "7566:292:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "7932:174:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1458,
																"name": "_newGasReserve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "7951:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7977:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7969:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1459,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7969:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7969:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7951:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7981:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7943:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7943:56:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "7943:56:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1468,
															"name": "gasReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "8033:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1469,
															"name": "_newGasReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "8045:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1467,
														"name": "GasReserveUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "8015:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8015:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "EmitStatement",
												"src": "8010:50:9"
											},
											{
												"expression": {
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1472,
														"name": "gasReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "8071:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1473,
														"name": "_newGasReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "8084:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8071:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "8071:27:9"
											}
										]
									},
									"functionSelector": "d4a49c17",
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1455,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1454,
												"name": "onlyOwner",
												"nameLocations": [
													"7922:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "7922:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7922:9:9"
										}
									],
									"name": "setGasReserve",
									"nameLocation": "7875:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "_newGasReserve",
												"nameLocation": "7897:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "7889:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7889:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7888:24:9"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7932:0:9"
									},
									"scope": 1661,
									"src": "7866:240:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1500,
										"nodeType": "Block",
										"src": "8174:147:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1485,
																"name": "_newTaxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1479,
																"src": "8193:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "31303030",
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8208:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"src": "8193:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617820746f6f2068696768",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8214:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef",
																"typeString": "literal_string \"Tax too high\""
															},
															"value": "Tax too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ccafab9e5ca3f26fd468d00a5b63aeaacac6c13f6526b972341448ea26c3deef",
																"typeString": "literal_string \"Tax too high\""
															}
														],
														"id": 1484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8185:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8185:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "ExpressionStatement",
												"src": "8185:44:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1492,
															"name": "taxRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1106,
															"src": "8260:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1493,
															"name": "_newTaxRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "8269:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1491,
														"name": "TaxRateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "8245:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8245:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "EmitStatement",
												"src": "8240:41:9"
											},
											{
												"expression": {
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1496,
														"name": "taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1106,
														"src": "8292:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1497,
														"name": "_newTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1479,
														"src": "8302:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8292:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1499,
												"nodeType": "ExpressionStatement",
												"src": "8292:21:9"
											}
										]
									},
									"functionSelector": "c6d69a30",
									"id": 1501,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1482,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1481,
												"name": "onlyOwner",
												"nameLocations": [
													"8164:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "8164:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8164:9:9"
										}
									],
									"name": "setTaxRate",
									"nameLocation": "8123:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "_newTaxRate",
												"nameLocation": "8142:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "8134:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8134:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8133:21:9"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8174:0:9"
									},
									"scope": 1661,
									"src": "8114:207:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1550,
										"nodeType": "Block",
										"src": "8607:352:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1510,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "8626:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8635:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8626:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5769746864726177206d757374206265203e2030",
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8638:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee2d865cbfb98f3aa18b0fbfcc15018e3b00b014b5386b45ac30273e2190b116",
																"typeString": "literal_string \"Withdraw must be > 0\""
															},
															"value": "Withdraw must be > 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee2d865cbfb98f3aa18b0fbfcc15018e3b00b014b5386b45ac30273e2190b116",
																"typeString": "literal_string \"Withdraw must be > 0\""
															}
														],
														"id": 1509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8618:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8618:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1515,
												"nodeType": "ExpressionStatement",
												"src": "8618:43:9"
											},
											{
												"assignments": [
													1517
												],
												"declarations": [
													{
														"constant": false,
														"id": 1517,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "8680:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1550,
														"src": "8672:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8672:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8736:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																],
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8728:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8728:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8728:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1519,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "8704:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1518,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "8697:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8697:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8718:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "8697:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8697:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8672:70:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1529,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1504,
																"src": "8761:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1530,
																"name": "currentBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "8771:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8761:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320696e20636f6e7472616374",
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8787:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431",
																"typeString": "literal_string \"Not enough tokens in contract\""
															},
															"value": "Not enough tokens in contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a9df11e984faa6488713f9803b8f65632033c71a9a6119ec192fdd69f2189431",
																"typeString": "literal_string \"Not enough tokens in contract\""
															}
														],
														"id": 1528,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8753:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8753:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "8753:66:9"
											},
											{
												"assignments": [
													1536
												],
												"declarations": [
													{
														"constant": false,
														"id": 1536,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8835:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1550,
														"src": "8830:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1535,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8830:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1544,
												"initialValue": {
													"arguments": [
														{
															"id": 1541,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "8875:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1542,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "8882:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1538,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "8852:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1537,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "8845:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8845:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8866:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 199,
														"src": "8845:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8845:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8830:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1546,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "8908:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061796d656e7420746f6b656e207769746864726177616c206661696c6564",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8917:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fe8dfe2c977a8ed5a83423be8eb90a0f19b94c075c6783f35429a67843701ecd",
																"typeString": "literal_string \"Payment token withdrawal failed\""
															},
															"value": "Payment token withdrawal failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fe8dfe2c977a8ed5a83423be8eb90a0f19b94c075c6783f35429a67843701ecd",
																"typeString": "literal_string \"Payment token withdrawal failed\""
															}
														],
														"id": 1545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8900:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8900:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "8900:51:9"
											}
										]
									},
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "8329:207:9",
										"text": " @dev Owner can withdraw payment tokens from the contract (for leftover tokens, etc.).\n      This is still allowed even if paused, in case you need to remove funds in an emergency."
									},
									"functionSelector": "07e675fa",
									"id": 1551,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1506,
												"name": "onlyOwner",
												"nameLocations": [
													"8597:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1189,
												"src": "8597:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8597:9:9"
										}
									],
									"name": "withdrawPaymentToken",
									"nameLocation": "8551:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8580:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "8572:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8571:16:9"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8607:0:9"
									},
									"scope": 1661,
									"src": "8542:417:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "9121:71:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1563,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9178:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																],
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9170:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1561,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9170:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9170:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1558,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "9146:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1557,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "9139:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9139:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9160:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "9139:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9139:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1556,
												"id": 1566,
												"nodeType": "Return",
												"src": "9132:52:9"
											}
										]
									},
									"documentation": {
										"id": 1552,
										"nodeType": "StructuredDocumentation",
										"src": "8967:84:9",
										"text": " @dev Returns the current contract balance of the payment token."
									},
									"functionSelector": "9e9aed62",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractTokenBalance",
									"nameLocation": "9066:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9086:2:9"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1568,
												"src": "9112:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9112:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9111:9:9"
									},
									"scope": 1661,
									"src": "9057:135:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "9430:379:9",
										"statements": [
											{
												"assignments": [
													1575
												],
												"declarations": [
													{
														"constant": false,
														"id": 1575,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "9449:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1612,
														"src": "9441:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1574,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9441:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1585,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1582,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9505:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																],
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9497:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9497:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9497:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1577,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "9473:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1576,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "9466:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9466:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9487:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "9466:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9466:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9441:70:9"
											},
											{
												"assignments": [
													1587
												],
												"declarations": [
													{
														"constant": false,
														"id": 1587,
														"mutability": "mutable",
														"name": "premiumPrice",
														"nameLocation": "9530:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1612,
														"src": "9522:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1586,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9522:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1588,
																	"name": "targetPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "9546:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313030",
																				"id": 1589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9561:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1590,
																				"name": "premiumRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "9567:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9561:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1592,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9560:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9546:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1594,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9545:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9583:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "9545:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9522:64:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1598,
														"name": "premiumPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "9603:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9619:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9603:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1604,
												"nodeType": "IfStatement",
												"src": "9599:58:9",
												"trueBody": {
													"id": 1603,
													"nodeType": "Block",
													"src": "9622:35:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9644:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1573,
															"id": 1602,
															"nodeType": "Return",
															"src": "9637:8:9"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1605,
																	"name": "currentBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1575,
																	"src": "9764:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 1606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9781:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "9764:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1608,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9763:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1609,
														"name": "premiumPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "9789:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9763:38:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1573,
												"id": 1611,
												"nodeType": "Return",
												"src": "9756:45:9"
											}
										]
									},
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "9200:161:9",
										"text": " @dev Returns the maximum amount of RoboMoney the contract can buy back\n given its current payment token balance and the premium rate."
									},
									"functionSelector": "ce1d1f1f",
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "maxBuyableRoboMoney",
									"nameLocation": "9376:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9395:2:9"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "9421:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9421:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9420:9:9"
									},
									"scope": 1661,
									"src": "9367:442:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "10048:285:9",
										"statements": [
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "premiumPrice",
														"nameLocation": "10067:12:9",
														"nodeType": "VariableDeclaration",
														"scope": 1659,
														"src": "10059:20:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10059:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1632,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1623,
																	"name": "targetPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "10083:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1626,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "313030",
																				"id": 1624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10098:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 1625,
																				"name": "premiumRate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "10104:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10098:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1627,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10097:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10083:33:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1629,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10082:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10120:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "10082:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10059:64:9"
											},
											{
												"assignments": [
													1634
												],
												"declarations": [
													{
														"constant": false,
														"id": 1634,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "10142:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1659,
														"src": "10134:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10134:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1641,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1635,
																	"name": "roboMoneyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "10157:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1636,
																	"name": "premiumPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "10175:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10157:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1638,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10156:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10191:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "10156:39:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10134:61:9"
											},
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "currentBalance",
														"nameLocation": "10214:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1659,
														"src": "10206:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10206:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1653,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1650,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10270:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BuyBack_$1661",
																		"typeString": "contract BuyBack"
																	}
																],
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10262:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1648,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10262:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10262:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1645,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "10238:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1644,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "10231:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$232_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10231:20:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$232",
																"typeString": "contract IERC20"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10252:9:9",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 189,
														"src": "10231:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10231:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10206:70:9"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1654,
																"name": "currentBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "10295:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1655,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1634,
																"src": "10313:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10295:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1657,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10294:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1658,
												"nodeType": "Return",
												"src": "10287:38:9"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "9817:144:9",
										"text": " @dev Checks if the contract has enough payment tokens to buy back roboMoneyAmount\n      at the current premium rate."
									},
									"functionSelector": "839ea2d9",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canExecuteBuyback",
									"nameLocation": "9976:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "roboMoneyAmount",
												"nameLocation": "10002:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "9994:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9994:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9993:25:9"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "10042:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10042:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10041:6:9"
									},
									"scope": 1661,
									"src": "9967:366:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1662,
							"src": "2873:7463:9",
							"usedErrors": [
								246
							],
							"usedEvents": [
								953,
								957,
								1112,
								1120,
								1126,
								1132
							]
						}
					],
					"src": "33:10303:9"
				},
				"id": 9
			}
		}
	}
}