{
	"id": "f4ead8ad56dc256f0d9fdfd1d436abe2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract StakingContract is Ownable {\r\n    using SafeERC20 for IERC20;\r\n\r\n    IERC20 public stakingToken;\r\n    IERC20 public rewardToken;\r\n\r\n    uint256 public totalStaked;\r\n    uint256 public rewardRate; // Reward tokens distributed per second\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public stakes;\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    constructor(IERC20 _stakingToken, IERC20 _rewardToken, address initialOwner) Ownable(initialOwner) {\r\n        stakingToken = _stakingToken;\r\n        rewardToken = _rewardToken;\r\n    }\r\n\r\n    modifier updateReward(address account) {\r\n        rewardPerTokenStored = rewardPerToken();\r\n        lastUpdateTime = block.timestamp;\r\n\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n        }\r\n        _;\r\n    }\r\n\r\n    function rewardPerToken() public view returns (uint256) {\r\n        if (totalStaked == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored +\r\n            ((block.timestamp - lastUpdateTime) * rewardRate * 1e18) /\r\n            totalStaked;\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        return\r\n            (stakes[account] *\r\n                (rewardPerToken() - userRewardPerTokenPaid[account])) /\r\n            1e18 +\r\n            rewards[account];\r\n    }\r\n\r\n    function stake(uint256 amount) external updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        stakes[msg.sender] += amount;\r\n        totalStaked += amount;\r\n    }\r\n\r\n    function unstake(uint256 amount) external updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot unstake 0\");\r\n        require(stakes[msg.sender] >= amount, \"Cannot unstake more than staked\");\r\n        stakes[msg.sender] -= amount;\r\n        totalStaked -= amount;\r\n        stakingToken.safeTransfer(msg.sender, amount);\r\n    }\r\n\r\n    function claimRewards() external updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        require(reward > 0, \"No rewards to claim\");\r\n        rewards[msg.sender] = 0;\r\n        rewardToken.safeTransfer(msg.sender, reward);\r\n    }\r\n\r\n    function depositRewards(uint256 amount, uint256 duration) external onlyOwner {\r\n        require(amount > 0, \"Cannot deposit 0\");\r\n        rewardToken.safeTransferFrom(msg.sender, address(this), amount);\r\n        rewardRate = amount / duration;\r\n        lastUpdateTime = block.timestamp;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 LOG2 PUSH15 0xF63ECD82E1FE6DCD1FF2932B23D2B4 0xCF SWAP7 0xBB SWAP5 0xB2 CALLVALUE PUSH17 0x434C9E4016FB664736F6C634300081C00 CALLER ",
							"sourceMap": "750:8692:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 LOG2 PUSH15 0xF63ECD82E1FE6DCD1FF2932B23D2B4 0xCF SWAP7 0xBB SWAP5 0xB2 CALLVALUE PUSH17 0x434C9E4016FB664736F6C634300081C00 CALLER ",
							"sourceMap": "750:8692:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4a26ef63ecd82e1fe6dcd1ff2932b23d2b4cf96bb94b234700434c9e4016fb664736f6c634300081c0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBA NOT 0xAB 0xEC EQ 0xBD SLOAD PUSH11 0x3E2501B9C50B6356651A79 SSTORE 0xD9 0xAB 0xB2 ADDMOD PUSH9 0x26DD5F0D18ED64736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "233:5799:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0xBA NOT 0xAB 0xEC EQ 0xBD SLOAD PUSH11 0x3E2501B9C50B6356651A79 SSTORE 0xD9 0xAB 0xB2 ADDMOD PUSH9 0x26DD5F0D18ED64736F PUSH13 0x634300081C0033000000000000 ",
							"sourceMap": "233:5799:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a1ba19abec14bd546a3e2501b9c50b6356651a7955d9abb2086826dd5f0d18ed64736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"StakingContract": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_stakingToken",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_rewardToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "depositRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":208:2957  contract StakingContract is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"staking.sol\":701:884  constructor(IERC20 _stakingToken, IERC20 _rewardToken, address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"staking.sol\":786:798  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"staking.sol\":826:839  _stakingToken */\n  dup3\n    /* \"staking.sol\":811:823  stakingToken */\n  0x01\n  0x00\n    /* \"staking.sol\":811:839  stakingToken = _stakingToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"staking.sol\":864:876  _rewardToken */\n  dup2\n    /* \"staking.sol\":850:861  rewardToken */\n  0x02\n  0x00\n    /* \"staking.sol\":850:876  rewardToken = _rewardToken */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"staking.sol\":701:884  constructor(IERC20 _stakingToken, IERC20 _rewardToken, address initialOwner) Ownable(initialOwner) {... */\n  pop\n  pop\n  pop\n    /* \"staking.sol\":208:2957  contract StakingContract is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_32\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:678   */\ntag_20:\n    /* \"#utility.yul\":619:626   */\n  0x00\n    /* \"#utility.yul\":648:672   */\n  tag_34\n    /* \"#utility.yul\":666:671   */\n  dup3\n    /* \"#utility.yul\":648:672   */\n  tag_19\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":637:672   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":684:834   */\ntag_21:\n    /* \"#utility.yul\":771:809   */\n  tag_36\n    /* \"#utility.yul\":803:808   */\n  dup2\n    /* \"#utility.yul\":771:809   */\n  tag_20\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":764:769   */\n  dup2\n    /* \"#utility.yul\":761:810   */\n  eq\n    /* \"#utility.yul\":751:828   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":824:825   */\n  0x00\n    /* \"#utility.yul\":821:822   */\n  0x00\n    /* \"#utility.yul\":814:826   */\n  revert\n    /* \"#utility.yul\":751:828   */\ntag_37:\n    /* \"#utility.yul\":684:834   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":840:1011   */\ntag_22:\n    /* \"#utility.yul\":911:916   */\n  0x00\n    /* \"#utility.yul\":942:948   */\n  dup2\n    /* \"#utility.yul\":936:949   */\n  mload\n    /* \"#utility.yul\":927:949   */\n  swap1\n  pop\n    /* \"#utility.yul\":958:1005   */\n  tag_39\n    /* \"#utility.yul\":999:1004   */\n  dup2\n    /* \"#utility.yul\":958:1005   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":840:1011   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1017:1139   */\ntag_23:\n    /* \"#utility.yul\":1090:1114   */\n  tag_41\n    /* \"#utility.yul\":1108:1113   */\n  dup2\n    /* \"#utility.yul\":1090:1114   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1083:1088   */\n  dup2\n    /* \"#utility.yul\":1080:1115   */\n  eq\n    /* \"#utility.yul\":1070:1133   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1129:1130   */\n  0x00\n    /* \"#utility.yul\":1126:1127   */\n  0x00\n    /* \"#utility.yul\":1119:1131   */\n  revert\n    /* \"#utility.yul\":1070:1133   */\ntag_42:\n    /* \"#utility.yul\":1017:1139   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1145:1288   */\ntag_24:\n    /* \"#utility.yul\":1202:1207   */\n  0x00\n    /* \"#utility.yul\":1233:1239   */\n  dup2\n    /* \"#utility.yul\":1227:1240   */\n  mload\n    /* \"#utility.yul\":1218:1240   */\n  swap1\n  pop\n    /* \"#utility.yul\":1249:1282   */\n  tag_44\n    /* \"#utility.yul\":1276:1281   */\n  dup2\n    /* \"#utility.yul\":1249:1282   */\n  tag_23\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1145:1288   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1294:2013   */\ntag_3:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1418:1424   */\n  0x00\n    /* \"#utility.yul\":1426:1432   */\n  0x00\n    /* \"#utility.yul\":1475:1477   */\n  0x60\n    /* \"#utility.yul\":1463:1472   */\n  dup5\n    /* \"#utility.yul\":1454:1461   */\n  dup7\n    /* \"#utility.yul\":1450:1473   */\n  sub\n    /* \"#utility.yul\":1446:1478   */\n  slt\n    /* \"#utility.yul\":1443:1562   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":1481:1560   */\n  tag_47\n  tag_16\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1443:1562   */\ntag_46:\n    /* \"#utility.yul\":1601:1602   */\n  0x00\n    /* \"#utility.yul\":1626:1704   */\n  tag_48\n    /* \"#utility.yul\":1696:1703   */\n  dup7\n    /* \"#utility.yul\":1687:1693   */\n  dup3\n    /* \"#utility.yul\":1676:1685   */\n  dup8\n    /* \"#utility.yul\":1672:1694   */\n  add\n    /* \"#utility.yul\":1626:1704   */\n  tag_22\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1616:1704   */\n  swap4\n  pop\n    /* \"#utility.yul\":1572:1714   */\n  pop\n    /* \"#utility.yul\":1753:1755   */\n  0x20\n    /* \"#utility.yul\":1779:1857   */\n  tag_49\n    /* \"#utility.yul\":1849:1856   */\n  dup7\n    /* \"#utility.yul\":1840:1846   */\n  dup3\n    /* \"#utility.yul\":1829:1838   */\n  dup8\n    /* \"#utility.yul\":1825:1847   */\n  add\n    /* \"#utility.yul\":1779:1857   */\n  tag_22\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1769:1857   */\n  swap3\n  pop\n    /* \"#utility.yul\":1724:1867   */\n  pop\n    /* \"#utility.yul\":1906:1908   */\n  0x40\n    /* \"#utility.yul\":1932:1996   */\n  tag_50\n    /* \"#utility.yul\":1988:1995   */\n  dup7\n    /* \"#utility.yul\":1979:1985   */\n  dup3\n    /* \"#utility.yul\":1968:1977   */\n  dup8\n    /* \"#utility.yul\":1964:1986   */\n  add\n    /* \"#utility.yul\":1932:1996   */\n  tag_24\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1922:1996   */\n  swap2\n  pop\n    /* \"#utility.yul\":1877:2006   */\n  pop\n    /* \"#utility.yul\":1294:2013   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2019:2137   */\ntag_25:\n    /* \"#utility.yul\":2106:2130   */\n  tag_52\n    /* \"#utility.yul\":2124:2129   */\n  dup2\n    /* \"#utility.yul\":2106:2130   */\n  tag_19\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2101:2104   */\n  dup3\n    /* \"#utility.yul\":2094:2131   */\n  mstore\n    /* \"#utility.yul\":2019:2137   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2143:2365   */\ntag_9:\n    /* \"#utility.yul\":2236:2240   */\n  0x00\n    /* \"#utility.yul\":2274:2276   */\n  0x20\n    /* \"#utility.yul\":2263:2272   */\n  dup3\n    /* \"#utility.yul\":2259:2277   */\n  add\n    /* \"#utility.yul\":2251:2277   */\n  swap1\n  pop\n    /* \"#utility.yul\":2287:2358   */\n  tag_54\n    /* \"#utility.yul\":2355:2356   */\n  0x00\n    /* \"#utility.yul\":2344:2353   */\n  dup4\n    /* \"#utility.yul\":2340:2357   */\n  add\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2287:2358   */\n  tag_25\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2143:2365   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"staking.sol\":208:2957  contract StakingContract is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":208:2957  contract StakingContract is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8b876347\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xc8f33c91\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x8b876347\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xbdd071fb\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x372500ab\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"staking.sol\":1529:1772  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":650:692  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":538:579  mapping(address => uint256) public stakes */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":2055:2390  function unstake(uint256 amount) external updateReward(msg.sender) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"staking.sol\":2398:2653  function claimRewards() external updateReward(msg.sender) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"staking.sol\":286:312  IERC20 public stakingToken */\n    tag_9:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":386:411  uint256 public rewardRate */\n    tag_10:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":353:379  uint256 public totalStaked */\n    tag_11:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":586:643  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_12:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":1780:2047  function stake(uint256 amount) external updateReward(msg.sender) {... */\n    tag_14:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"staking.sol\":2661:2954  function depositRewards(uint256 amount, uint256 duration) external onlyOwner {... */\n    tag_15:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      stop\n        /* \"staking.sol\":458:487  uint256 public lastUpdateTime */\n    tag_16:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":1221:1521  function rewardPerToken() public view returns (uint256) {... */\n    tag_17:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":494:529  uint256 public rewardPerTokenStored */\n    tag_18:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      stop\n        /* \"staking.sol\":319:344  IERC20 public rewardToken */\n    tag_20:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":1529:1772  function earned(address account) public view returns (uint256) {... */\n    tag_27:\n        /* \"staking.sol\":1583:1590  uint256 */\n      0x00\n        /* \"staking.sol\":1748:1755  rewards */\n      0x09\n        /* \"staking.sol\":1748:1764  rewards[account] */\n      0x00\n        /* \"staking.sol\":1756:1763  account */\n      dup4\n        /* \"staking.sol\":1748:1764  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"staking.sol\":1728:1732  1e18 */\n      0x0de0b6b3a7640000\n        /* \"staking.sol\":1679:1701  userRewardPerTokenPaid */\n      0x08\n        /* \"staking.sol\":1679:1710  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"staking.sol\":1702:1709  account */\n      dup6\n        /* \"staking.sol\":1679:1710  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"staking.sol\":1660:1676  rewardPerToken() */\n      tag_87\n        /* \"staking.sol\":1660:1674  rewardPerToken */\n      tag_75\n        /* \"staking.sol\":1660:1676  rewardPerToken() */\n      jump\t// in\n    tag_87:\n        /* \"staking.sol\":1660:1710  rewardPerToken() - userRewardPerTokenPaid[account] */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"staking.sol\":1624:1630  stakes */\n      0x07\n        /* \"staking.sol\":1624:1639  stakes[account] */\n      0x00\n        /* \"staking.sol\":1631:1638  account */\n      dup7\n        /* \"staking.sol\":1624:1639  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"staking.sol\":1624:1711  stakes[account] *... */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"staking.sol\":1623:1732  (stakes[account] *... */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"staking.sol\":1623:1764  (stakes[account] *... */\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n        /* \"staking.sol\":1603:1764  return... */\n      swap1\n      pop\n        /* \"staking.sol\":1529:1772  function earned(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"staking.sol\":650:692  mapping(address => uint256) public rewards */\n    tag_32:\n      mstore(0x20, 0x09)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"staking.sol\":538:579  mapping(address => uint256) public stakes */\n    tag_36:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"staking.sol\":2055:2390  function unstake(uint256 amount) external updateReward(msg.sender) {... */\n    tag_41:\n        /* \"staking.sol\":2110:2120  msg.sender */\n      caller\n        /* \"staking.sol\":965:981  rewardPerToken() */\n      tag_97\n        /* \"staking.sol\":965:979  rewardPerToken */\n      tag_75\n        /* \"staking.sol\":965:981  rewardPerToken() */\n      jump\t// in\n    tag_97:\n        /* \"staking.sol\":942:962  rewardPerTokenStored */\n      0x06\n        /* \"staking.sol\":942:981  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1009:1024  block.timestamp */\n      timestamp\n        /* \"staking.sol\":992:1006  lastUpdateTime */\n      0x05\n        /* \"staking.sol\":992:1024  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1060:1061  0 */\n      0x00\n        /* \"staking.sol\":1041:1062  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":1041:1048  account */\n      dup2\n        /* \"staking.sol\":1041:1062  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"staking.sol\":1037:1194  if (account != address(0)) {... */\n      tag_98\n      jumpi\n        /* \"staking.sol\":1098:1113  earned(account) */\n      tag_99\n        /* \"staking.sol\":1105:1112  account */\n      dup2\n        /* \"staking.sol\":1098:1104  earned */\n      tag_27\n        /* \"staking.sol\":1098:1113  earned(account) */\n      jump\t// in\n    tag_99:\n        /* \"staking.sol\":1079:1086  rewards */\n      0x09\n        /* \"staking.sol\":1079:1095  rewards[account] */\n      0x00\n        /* \"staking.sol\":1087:1094  account */\n      dup4\n        /* \"staking.sol\":1079:1095  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1079:1113  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1162:1182  rewardPerTokenStored */\n      sload(0x06)\n        /* \"staking.sol\":1128:1150  userRewardPerTokenPaid */\n      0x08\n        /* \"staking.sol\":1128:1159  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"staking.sol\":1151:1158  account */\n      dup4\n        /* \"staking.sol\":1128:1159  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1128:1182  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1037:1194  if (account != address(0)) {... */\n    tag_98:\n        /* \"staking.sol\":2150:2151  0 */\n      0x00\n        /* \"staking.sol\":2141:2147  amount */\n      dup3\n        /* \"staking.sol\":2141:2151  amount > 0 */\n      gt\n        /* \"staking.sol\":2133:2172  require(amount > 0, \"Cannot unstake 0\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"staking.sol\":2213:2219  amount */\n      dup2\n        /* \"staking.sol\":2191:2197  stakes */\n      0x07\n        /* \"staking.sol\":2191:2209  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":2198:2208  msg.sender */\n      caller\n        /* \"staking.sol\":2191:2209  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"staking.sol\":2191:2219  stakes[msg.sender] >= amount */\n      lt\n      iszero\n        /* \"staking.sol\":2183:2255  require(stakes[msg.sender] >= amount, \"Cannot unstake more than staked\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"staking.sol\":2288:2294  amount */\n      dup2\n        /* \"staking.sol\":2266:2272  stakes */\n      0x07\n        /* \"staking.sol\":2266:2284  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":2273:2283  msg.sender */\n      caller\n        /* \"staking.sol\":2266:2284  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"staking.sol\":2266:2294  stakes[msg.sender] -= amount */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_107:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2320:2326  amount */\n      dup2\n        /* \"staking.sol\":2305:2316  totalStaked */\n      0x03\n      0x00\n        /* \"staking.sol\":2305:2326  totalStaked -= amount */\n      dup3\n      dup3\n      sload\n      tag_108\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_108:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2337:2382  stakingToken.safeTransfer(msg.sender, amount) */\n      tag_109\n        /* \"staking.sol\":2363:2373  msg.sender */\n      caller\n        /* \"staking.sol\":2375:2381  amount */\n      dup4\n        /* \"staking.sol\":2337:2349  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":2337:2362  stakingToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_110\n      swap1\n        /* \"staking.sol\":2337:2382  stakingToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"staking.sol\":2055:2390  function unstake(uint256 amount) external updateReward(msg.sender) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":2398:2653  function claimRewards() external updateReward(msg.sender) {... */\n    tag_43:\n        /* \"staking.sol\":2444:2454  msg.sender */\n      caller\n        /* \"staking.sol\":965:981  rewardPerToken() */\n      tag_112\n        /* \"staking.sol\":965:979  rewardPerToken */\n      tag_75\n        /* \"staking.sol\":965:981  rewardPerToken() */\n      jump\t// in\n    tag_112:\n        /* \"staking.sol\":942:962  rewardPerTokenStored */\n      0x06\n        /* \"staking.sol\":942:981  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1009:1024  block.timestamp */\n      timestamp\n        /* \"staking.sol\":992:1006  lastUpdateTime */\n      0x05\n        /* \"staking.sol\":992:1024  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1060:1061  0 */\n      0x00\n        /* \"staking.sol\":1041:1062  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":1041:1048  account */\n      dup2\n        /* \"staking.sol\":1041:1062  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"staking.sol\":1037:1194  if (account != address(0)) {... */\n      tag_113\n      jumpi\n        /* \"staking.sol\":1098:1113  earned(account) */\n      tag_114\n        /* \"staking.sol\":1105:1112  account */\n      dup2\n        /* \"staking.sol\":1098:1104  earned */\n      tag_27\n        /* \"staking.sol\":1098:1113  earned(account) */\n      jump\t// in\n    tag_114:\n        /* \"staking.sol\":1079:1086  rewards */\n      0x09\n        /* \"staking.sol\":1079:1095  rewards[account] */\n      0x00\n        /* \"staking.sol\":1087:1094  account */\n      dup4\n        /* \"staking.sol\":1079:1095  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1079:1113  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1162:1182  rewardPerTokenStored */\n      sload(0x06)\n        /* \"staking.sol\":1128:1150  userRewardPerTokenPaid */\n      0x08\n        /* \"staking.sol\":1128:1159  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"staking.sol\":1151:1158  account */\n      dup4\n        /* \"staking.sol\":1128:1159  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1128:1182  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1037:1194  if (account != address(0)) {... */\n    tag_113:\n        /* \"staking.sol\":2467:2481  uint256 reward */\n      0x00\n        /* \"staking.sol\":2484:2491  rewards */\n      0x09\n        /* \"staking.sol\":2484:2503  rewards[msg.sender] */\n      0x00\n        /* \"staking.sol\":2492:2502  msg.sender */\n      caller\n        /* \"staking.sol\":2484:2503  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"staking.sol\":2467:2503  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"staking.sol\":2531:2532  0 */\n      0x00\n        /* \"staking.sol\":2522:2528  reward */\n      dup2\n        /* \"staking.sol\":2522:2532  reward > 0 */\n      gt\n        /* \"staking.sol\":2514:2556  require(reward > 0, \"No rewards to claim\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"staking.sol\":2589:2590  0 */\n      0x00\n        /* \"staking.sol\":2567:2574  rewards */\n      0x09\n        /* \"staking.sol\":2567:2586  rewards[msg.sender] */\n      0x00\n        /* \"staking.sol\":2575:2585  msg.sender */\n      caller\n        /* \"staking.sol\":2567:2586  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2567:2590  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2601:2645  rewardToken.safeTransfer(msg.sender, reward) */\n      tag_119\n        /* \"staking.sol\":2626:2636  msg.sender */\n      caller\n        /* \"staking.sol\":2638:2644  reward */\n      dup3\n        /* \"staking.sol\":2601:2612  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":2601:2625  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_110\n      swap1\n        /* \"staking.sol\":2601:2645  rewardToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"staking.sol\":2456:2653  {... */\n      pop\n        /* \"staking.sol\":2398:2653  function claimRewards() external updateReward(msg.sender) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":286:312  IERC20 public stakingToken */\n    tag_47:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"staking.sol\":386:411  uint256 public rewardRate */\n    tag_51:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"staking.sol\":353:379  uint256 public totalStaked */\n    tag_54:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"staking.sol\":586:643  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_58:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"staking.sol\":1780:2047  function stake(uint256 amount) external updateReward(msg.sender) {... */\n    tag_66:\n        /* \"staking.sol\":1833:1843  msg.sender */\n      caller\n        /* \"staking.sol\":965:981  rewardPerToken() */\n      tag_128\n        /* \"staking.sol\":965:979  rewardPerToken */\n      tag_75\n        /* \"staking.sol\":965:981  rewardPerToken() */\n      jump\t// in\n    tag_128:\n        /* \"staking.sol\":942:962  rewardPerTokenStored */\n      0x06\n        /* \"staking.sol\":942:981  rewardPerTokenStored = rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1009:1024  block.timestamp */\n      timestamp\n        /* \"staking.sol\":992:1006  lastUpdateTime */\n      0x05\n        /* \"staking.sol\":992:1024  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1060:1061  0 */\n      0x00\n        /* \"staking.sol\":1041:1062  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":1041:1048  account */\n      dup2\n        /* \"staking.sol\":1041:1062  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"staking.sol\":1037:1194  if (account != address(0)) {... */\n      tag_129\n      jumpi\n        /* \"staking.sol\":1098:1113  earned(account) */\n      tag_130\n        /* \"staking.sol\":1105:1112  account */\n      dup2\n        /* \"staking.sol\":1098:1104  earned */\n      tag_27\n        /* \"staking.sol\":1098:1113  earned(account) */\n      jump\t// in\n    tag_130:\n        /* \"staking.sol\":1079:1086  rewards */\n      0x09\n        /* \"staking.sol\":1079:1095  rewards[account] */\n      0x00\n        /* \"staking.sol\":1087:1094  account */\n      dup4\n        /* \"staking.sol\":1079:1095  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1079:1113  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1162:1182  rewardPerTokenStored */\n      sload(0x06)\n        /* \"staking.sol\":1128:1150  userRewardPerTokenPaid */\n      0x08\n        /* \"staking.sol\":1128:1159  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"staking.sol\":1151:1158  account */\n      dup4\n        /* \"staking.sol\":1128:1159  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1128:1182  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1037:1194  if (account != address(0)) {... */\n    tag_129:\n        /* \"staking.sol\":1873:1874  0 */\n      0x00\n        /* \"staking.sol\":1864:1870  amount */\n      dup3\n        /* \"staking.sol\":1864:1874  amount > 0 */\n      gt\n        /* \"staking.sol\":1856:1893  require(amount > 0, \"Cannot stake 0\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"staking.sol\":1904:1968  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_135\n        /* \"staking.sol\":1934:1944  msg.sender */\n      caller\n        /* \"staking.sol\":1954:1958  this */\n      address\n        /* \"staking.sol\":1961:1967  amount */\n      dup5\n        /* \"staking.sol\":1904:1916  stakingToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":1904:1933  stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_136\n      swap1\n        /* \"staking.sol\":1904:1968  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"staking.sol\":2001:2007  amount */\n      dup2\n        /* \"staking.sol\":1979:1985  stakes */\n      0x07\n        /* \"staking.sol\":1979:1997  stakes[msg.sender] */\n      0x00\n        /* \"staking.sol\":1986:1996  msg.sender */\n      caller\n        /* \"staking.sol\":1979:1997  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"staking.sol\":1979:2007  stakes[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_137\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2033:2039  amount */\n      dup2\n        /* \"staking.sol\":2018:2029  totalStaked */\n      0x03\n      0x00\n        /* \"staking.sol\":2018:2039  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1780:2047  function stake(uint256 amount) external updateReward(msg.sender) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":2661:2954  function depositRewards(uint256 amount, uint256 duration) external onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"staking.sol\":2766:2767  0 */\n      0x00\n        /* \"staking.sol\":2757:2763  amount */\n      dup3\n        /* \"staking.sol\":2757:2767  amount > 0 */\n      gt\n        /* \"staking.sol\":2749:2788  require(amount > 0, \"Cannot deposit 0\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"staking.sol\":2799:2862  rewardToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_145\n        /* \"staking.sol\":2828:2838  msg.sender */\n      caller\n        /* \"staking.sol\":2848:2852  this */\n      address\n        /* \"staking.sol\":2855:2861  amount */\n      dup5\n        /* \"staking.sol\":2799:2810  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":2799:2827  rewardToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_136\n      swap1\n        /* \"staking.sol\":2799:2862  rewardToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"staking.sol\":2895:2903  duration */\n      dup1\n        /* \"staking.sol\":2886:2892  amount */\n      dup3\n        /* \"staking.sol\":2886:2903  amount / duration */\n      tag_146\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_146:\n        /* \"staking.sol\":2873:2883  rewardRate */\n      0x04\n        /* \"staking.sol\":2873:2903  rewardRate = amount / duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2931:2946  block.timestamp */\n      timestamp\n        /* \"staking.sol\":2914:2928  lastUpdateTime */\n      0x05\n        /* \"staking.sol\":2914:2946  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2661:2954  function depositRewards(uint256 amount, uint256 duration) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":458:487  uint256 public lastUpdateTime */\n    tag_72:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"staking.sol\":1221:1521  function rewardPerToken() public view returns (uint256) {... */\n    tag_75:\n        /* \"staking.sol\":1268:1275  uint256 */\n      0x00\n        /* \"staking.sol\":1307:1308  0 */\n      0x00\n        /* \"staking.sol\":1292:1303  totalStaked */\n      sload(0x03)\n        /* \"staking.sol\":1292:1308  totalStaked == 0 */\n      sub\n        /* \"staking.sol\":1288:1364  if (totalStaked == 0) {... */\n      tag_148\n      jumpi\n        /* \"staking.sol\":1332:1352  rewardPerTokenStored */\n      sload(0x06)\n        /* \"staking.sol\":1325:1352  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_147)\n        /* \"staking.sol\":1288:1364  if (totalStaked == 0) {... */\n    tag_148:\n        /* \"staking.sol\":1502:1513  totalStaked */\n      sload(0x03)\n        /* \"staking.sol\":1481:1485  1e18 */\n      0x0de0b6b3a7640000\n        /* \"staking.sol\":1468:1478  rewardRate */\n      sload(0x04)\n        /* \"staking.sol\":1450:1464  lastUpdateTime */\n      sload(0x05)\n        /* \"staking.sol\":1432:1447  block.timestamp */\n      timestamp\n        /* \"staking.sol\":1432:1464  block.timestamp - lastUpdateTime */\n      tag_149\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_149:\n        /* \"staking.sol\":1431:1478  (block.timestamp - lastUpdateTime) * rewardRate */\n      tag_150\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_150:\n        /* \"staking.sol\":1431:1485  (block.timestamp - lastUpdateTime) * rewardRate * 1e18 */\n      tag_151\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_151:\n        /* \"staking.sol\":1430:1513  ((block.timestamp - lastUpdateTime) * rewardRate * 1e18) /... */\n      tag_152\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_152:\n        /* \"staking.sol\":1394:1414  rewardPerTokenStored */\n      sload(0x06)\n        /* \"staking.sol\":1394:1513  rewardPerTokenStored +... */\n      tag_153\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_153:\n        /* \"staking.sol\":1374:1513  return... */\n      swap1\n      pop\n        /* \"staking.sol\":1221:1521  function rewardPerToken() public view returns (uint256) {... */\n    tag_147:\n      swap1\n      jump\t// out\n        /* \"staking.sol\":494:529  uint256 public rewardPerTokenStored */\n    tag_78:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":319:344  IERC20 public rewardToken */\n    tag_84:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1373:1378  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1400  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1395:1409  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1414  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1416:1421  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1380:1423  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_162\n      swap3\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1372  _callOptionalReturn */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1353:1424  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1271:1431  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1790:1795  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1817  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1812:1830  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1833:1837  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1839:1841  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1843:1848  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1797:1850  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_175\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1789  _callOptionalReturn */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1770:1851  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1670:1858  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7818:7836  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7846:7865  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7984:7988  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7981:7982  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7974:7978  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7968:7979  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7961:7965  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7955:7959  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7951:7966  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7948:7949  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7941:7946  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7934:7939  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7989  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8041:8048  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8085:8089  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8079:8090  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8130:8146  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8127:8128  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8122:8125  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8107:8147  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8176:8192  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8171:8174  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8164:8193  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8031:8207  if iszero(success) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8234:8250  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8220:8250  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8278:8286  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8263:8286  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7900:8296  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8324:8325  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8320  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8325  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_179\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8377:8378  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8373  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8362:8378  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_180)\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8358:8359  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8336:8341  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8354  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8328:8359  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8378  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8434:8439  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8401:8441  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8452  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7808:8458  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7738:8458  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_185:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_187:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_188:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_220\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_187\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_189:\n        /* \"#utility.yul\":641:665   */\n      tag_222\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_188\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_223:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_190:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_225\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_189\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_26:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_228\n      tag_185\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":917:1036   */\n    tag_227:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_229\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_190\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_191:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_192:\n        /* \"#utility.yul\":1346:1370   */\n      tag_232\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_191\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_29:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_234\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_192\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_193:\n        /* \"#utility.yul\":1684:1708   */\n      tag_236\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_191\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_237:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_194:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_239\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_193\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2213   */\n    tag_40:\n        /* \"#utility.yul\":1943:1949   */\n      0x00\n        /* \"#utility.yul\":1992:1994   */\n      0x20\n        /* \"#utility.yul\":1980:1989   */\n      dup3\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1967:1990   */\n      sub\n        /* \"#utility.yul\":1963:1995   */\n      slt\n        /* \"#utility.yul\":1960:2079   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":1998:2077   */\n      tag_242\n      tag_185\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1960:2079   */\n    tag_241:\n        /* \"#utility.yul\":2118:2119   */\n      0x00\n        /* \"#utility.yul\":2143:2196   */\n      tag_243\n        /* \"#utility.yul\":2188:2195   */\n      dup5\n        /* \"#utility.yul\":2179:2185   */\n      dup3\n        /* \"#utility.yul\":2168:2177   */\n      dup6\n        /* \"#utility.yul\":2164:2186   */\n      add\n        /* \"#utility.yul\":2143:2196   */\n      tag_194\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2133:2196   */\n      swap2\n      pop\n        /* \"#utility.yul\":2089:2206   */\n      pop\n        /* \"#utility.yul\":1884:2213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2279   */\n    tag_195:\n        /* \"#utility.yul\":2247:2250   */\n      0x00\n        /* \"#utility.yul\":2268:2273   */\n      dup2\n        /* \"#utility.yul\":2261:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":2219:2279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2285:2427   */\n    tag_196:\n        /* \"#utility.yul\":2335:2344   */\n      0x00\n        /* \"#utility.yul\":2368:2421   */\n      tag_246\n        /* \"#utility.yul\":2386:2420   */\n      tag_247\n        /* \"#utility.yul\":2395:2419   */\n      tag_248\n        /* \"#utility.yul\":2413:2418   */\n      dup5\n        /* \"#utility.yul\":2395:2419   */\n      tag_187\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2386:2420   */\n      tag_195\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":2368:2421   */\n      tag_187\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2355:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2285:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2559   */\n    tag_197:\n        /* \"#utility.yul\":2483:2492   */\n      0x00\n        /* \"#utility.yul\":2516:2553   */\n      tag_250\n        /* \"#utility.yul\":2547:2552   */\n      dup3\n        /* \"#utility.yul\":2516:2553   */\n      tag_196\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":2503:2553   */\n      swap1\n      pop\n        /* \"#utility.yul\":2433:2559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2565:2705   */\n    tag_198:\n        /* \"#utility.yul\":2629:2638   */\n      0x00\n        /* \"#utility.yul\":2662:2699   */\n      tag_252\n        /* \"#utility.yul\":2693:2698   */\n      dup3\n        /* \"#utility.yul\":2662:2699   */\n      tag_197\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2649:2699   */\n      swap1\n      pop\n        /* \"#utility.yul\":2565:2705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2711:2870   */\n    tag_199:\n        /* \"#utility.yul\":2812:2863   */\n      tag_254\n        /* \"#utility.yul\":2857:2862   */\n      dup2\n        /* \"#utility.yul\":2812:2863   */\n      tag_198\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":2807:2810   */\n      dup3\n        /* \"#utility.yul\":2800:2864   */\n      mstore\n        /* \"#utility.yul\":2711:2870   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2876:3126   */\n    tag_49:\n        /* \"#utility.yul\":2983:2987   */\n      0x00\n        /* \"#utility.yul\":3021:3023   */\n      0x20\n        /* \"#utility.yul\":3010:3019   */\n      dup3\n        /* \"#utility.yul\":3006:3024   */\n      add\n        /* \"#utility.yul\":2998:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3119   */\n      tag_256\n        /* \"#utility.yul\":3116:3117   */\n      0x00\n        /* \"#utility.yul\":3105:3114   */\n      dup4\n        /* \"#utility.yul\":3101:3118   */\n      add\n        /* \"#utility.yul\":3092:3098   */\n      dup5\n        /* \"#utility.yul\":3034:3119   */\n      tag_199\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2876:3126   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3132:3250   */\n    tag_200:\n        /* \"#utility.yul\":3219:3243   */\n      tag_258\n        /* \"#utility.yul\":3237:3242   */\n      dup2\n        /* \"#utility.yul\":3219:3243   */\n      tag_188\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3214:3217   */\n      dup3\n        /* \"#utility.yul\":3207:3244   */\n      mstore\n        /* \"#utility.yul\":3132:3250   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3256:3478   */\n    tag_63:\n        /* \"#utility.yul\":3349:3353   */\n      0x00\n        /* \"#utility.yul\":3387:3389   */\n      0x20\n        /* \"#utility.yul\":3376:3385   */\n      dup3\n        /* \"#utility.yul\":3372:3390   */\n      add\n        /* \"#utility.yul\":3364:3390   */\n      swap1\n      pop\n        /* \"#utility.yul\":3400:3471   */\n      tag_260\n        /* \"#utility.yul\":3468:3469   */\n      0x00\n        /* \"#utility.yul\":3457:3466   */\n      dup4\n        /* \"#utility.yul\":3453:3470   */\n      add\n        /* \"#utility.yul\":3444:3450   */\n      dup5\n        /* \"#utility.yul\":3400:3471   */\n      tag_200\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3256:3478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3484:3958   */\n    tag_69:\n        /* \"#utility.yul\":3552:3558   */\n      0x00\n        /* \"#utility.yul\":3560:3566   */\n      0x00\n        /* \"#utility.yul\":3609:3611   */\n      0x40\n        /* \"#utility.yul\":3597:3606   */\n      dup4\n        /* \"#utility.yul\":3588:3595   */\n      dup6\n        /* \"#utility.yul\":3584:3607   */\n      sub\n        /* \"#utility.yul\":3580:3612   */\n      slt\n        /* \"#utility.yul\":3577:3696   */\n      iszero\n      tag_262\n      jumpi\n        /* \"#utility.yul\":3615:3694   */\n      tag_263\n      tag_185\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":3577:3696   */\n    tag_262:\n        /* \"#utility.yul\":3735:3736   */\n      0x00\n        /* \"#utility.yul\":3760:3813   */\n      tag_264\n        /* \"#utility.yul\":3805:3812   */\n      dup6\n        /* \"#utility.yul\":3796:3802   */\n      dup3\n        /* \"#utility.yul\":3785:3794   */\n      dup7\n        /* \"#utility.yul\":3781:3803   */\n      add\n        /* \"#utility.yul\":3760:3813   */\n      tag_194\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3750:3813   */\n      swap3\n      pop\n        /* \"#utility.yul\":3706:3823   */\n      pop\n        /* \"#utility.yul\":3862:3864   */\n      0x20\n        /* \"#utility.yul\":3888:3941   */\n      tag_265\n        /* \"#utility.yul\":3933:3940   */\n      dup6\n        /* \"#utility.yul\":3924:3930   */\n      dup3\n        /* \"#utility.yul\":3913:3922   */\n      dup7\n        /* \"#utility.yul\":3909:3931   */\n      add\n        /* \"#utility.yul\":3888:3941   */\n      tag_194\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3878:3941   */\n      swap2\n      pop\n        /* \"#utility.yul\":3833:3951   */\n      pop\n        /* \"#utility.yul\":3484:3958   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3964:4144   */\n    tag_201:\n        /* \"#utility.yul\":4012:4089   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4009:4010   */\n      0x00\n        /* \"#utility.yul\":4002:4090   */\n      mstore\n        /* \"#utility.yul\":4109:4113   */\n      0x11\n        /* \"#utility.yul\":4106:4107   */\n      0x04\n        /* \"#utility.yul\":4099:4114   */\n      mstore\n        /* \"#utility.yul\":4133:4137   */\n      0x24\n        /* \"#utility.yul\":4130:4131   */\n      0x00\n        /* \"#utility.yul\":4123:4138   */\n      revert\n        /* \"#utility.yul\":4150:4344   */\n    tag_89:\n        /* \"#utility.yul\":4190:4194   */\n      0x00\n        /* \"#utility.yul\":4210:4230   */\n      tag_268\n        /* \"#utility.yul\":4228:4229   */\n      dup3\n        /* \"#utility.yul\":4210:4230   */\n      tag_191\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4205:4230   */\n      swap2\n      pop\n        /* \"#utility.yul\":4244:4264   */\n      tag_269\n        /* \"#utility.yul\":4262:4263   */\n      dup4\n        /* \"#utility.yul\":4244:4264   */\n      tag_191\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":4239:4264   */\n      swap3\n      pop\n        /* \"#utility.yul\":4288:4289   */\n      dup3\n        /* \"#utility.yul\":4285:4286   */\n      dup3\n        /* \"#utility.yul\":4281:4290   */\n      sub\n        /* \"#utility.yul\":4273:4290   */\n      swap1\n      pop\n        /* \"#utility.yul\":4312:4313   */\n      dup2\n        /* \"#utility.yul\":4306:4310   */\n      dup2\n        /* \"#utility.yul\":4303:4314   */\n      gt\n        /* \"#utility.yul\":4300:4337   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":4317:4335   */\n      tag_271\n      tag_201\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4300:4337   */\n    tag_270:\n        /* \"#utility.yul\":4150:4344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4350:4760   */\n    tag_91:\n        /* \"#utility.yul\":4390:4397   */\n      0x00\n        /* \"#utility.yul\":4413:4433   */\n      tag_273\n        /* \"#utility.yul\":4431:4432   */\n      dup3\n        /* \"#utility.yul\":4413:4433   */\n      tag_191\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4408:4433   */\n      swap2\n      pop\n        /* \"#utility.yul\":4447:4467   */\n      tag_274\n        /* \"#utility.yul\":4465:4466   */\n      dup4\n        /* \"#utility.yul\":4447:4467   */\n      tag_191\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4442:4467   */\n      swap3\n      pop\n        /* \"#utility.yul\":4502:4503   */\n      dup3\n        /* \"#utility.yul\":4499:4500   */\n      dup3\n        /* \"#utility.yul\":4495:4504   */\n      mul\n        /* \"#utility.yul\":4524:4554   */\n      tag_275\n        /* \"#utility.yul\":4542:4553   */\n      dup2\n        /* \"#utility.yul\":4524:4554   */\n      tag_191\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4513:4554   */\n      swap2\n      pop\n        /* \"#utility.yul\":4703:4704   */\n      dup3\n        /* \"#utility.yul\":4694:4701   */\n      dup3\n        /* \"#utility.yul\":4690:4705   */\n      div\n        /* \"#utility.yul\":4687:4688   */\n      dup5\n        /* \"#utility.yul\":4684:4706   */\n      eq\n        /* \"#utility.yul\":4664:4665   */\n      dup4\n        /* \"#utility.yul\":4657:4666   */\n      iszero\n        /* \"#utility.yul\":4637:4720   */\n      or\n        /* \"#utility.yul\":4614:4753   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":4733:4751   */\n      tag_277\n      tag_201\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4614:4753   */\n    tag_276:\n        /* \"#utility.yul\":4398:4760   */\n      pop\n        /* \"#utility.yul\":4350:4760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4766:4946   */\n    tag_202:\n        /* \"#utility.yul\":4814:4891   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4811:4812   */\n      0x00\n        /* \"#utility.yul\":4804:4892   */\n      mstore\n        /* \"#utility.yul\":4911:4915   */\n      0x12\n        /* \"#utility.yul\":4908:4909   */\n      0x04\n        /* \"#utility.yul\":4901:4916   */\n      mstore\n        /* \"#utility.yul\":4935:4939   */\n      0x24\n        /* \"#utility.yul\":4932:4933   */\n      0x00\n        /* \"#utility.yul\":4925:4940   */\n      revert\n        /* \"#utility.yul\":4952:5137   */\n    tag_93:\n        /* \"#utility.yul\":4992:4993   */\n      0x00\n        /* \"#utility.yul\":5009:5029   */\n      tag_280\n        /* \"#utility.yul\":5027:5028   */\n      dup3\n        /* \"#utility.yul\":5009:5029   */\n      tag_191\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5004:5029   */\n      swap2\n      pop\n        /* \"#utility.yul\":5043:5063   */\n      tag_281\n        /* \"#utility.yul\":5061:5062   */\n      dup4\n        /* \"#utility.yul\":5043:5063   */\n      tag_191\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5038:5063   */\n      swap3\n      pop\n        /* \"#utility.yul\":5082:5083   */\n      dup3\n        /* \"#utility.yul\":5072:5107   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5087:5105   */\n      tag_283\n      tag_202\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5072:5107   */\n    tag_282:\n        /* \"#utility.yul\":5129:5130   */\n      dup3\n        /* \"#utility.yul\":5126:5127   */\n      dup3\n        /* \"#utility.yul\":5122:5131   */\n      div\n        /* \"#utility.yul\":5117:5131   */\n      swap1\n      pop\n        /* \"#utility.yul\":4952:5137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5143:5334   */\n    tag_95:\n        /* \"#utility.yul\":5183:5186   */\n      0x00\n        /* \"#utility.yul\":5202:5222   */\n      tag_285\n        /* \"#utility.yul\":5220:5221   */\n      dup3\n        /* \"#utility.yul\":5202:5222   */\n      tag_191\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5197:5222   */\n      swap2\n      pop\n        /* \"#utility.yul\":5236:5256   */\n      tag_286\n        /* \"#utility.yul\":5254:5255   */\n      dup4\n        /* \"#utility.yul\":5236:5256   */\n      tag_191\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5231:5256   */\n      swap3\n      pop\n        /* \"#utility.yul\":5279:5280   */\n      dup3\n        /* \"#utility.yul\":5276:5277   */\n      dup3\n        /* \"#utility.yul\":5272:5281   */\n      add\n        /* \"#utility.yul\":5265:5281   */\n      swap1\n      pop\n        /* \"#utility.yul\":5300:5303   */\n      dup1\n        /* \"#utility.yul\":5297:5298   */\n      dup3\n        /* \"#utility.yul\":5294:5304   */\n      gt\n        /* \"#utility.yul\":5291:5327   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":5307:5325   */\n      tag_288\n      tag_201\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5291:5327   */\n    tag_287:\n        /* \"#utility.yul\":5143:5334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5340:5509   */\n    tag_203:\n        /* \"#utility.yul\":5424:5435   */\n      0x00\n        /* \"#utility.yul\":5458:5464   */\n      dup3\n        /* \"#utility.yul\":5453:5456   */\n      dup3\n        /* \"#utility.yul\":5446:5465   */\n      mstore\n        /* \"#utility.yul\":5498:5502   */\n      0x20\n        /* \"#utility.yul\":5493:5496   */\n      dup3\n        /* \"#utility.yul\":5489:5503   */\n      add\n        /* \"#utility.yul\":5474:5503   */\n      swap1\n      pop\n        /* \"#utility.yul\":5340:5509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5515:5681   */\n    tag_204:\n        /* \"#utility.yul\":5655:5673   */\n      0x43616e6e6f7420756e7374616b65203000000000000000000000000000000000\n        /* \"#utility.yul\":5651:5652   */\n      0x00\n        /* \"#utility.yul\":5643:5649   */\n      dup3\n        /* \"#utility.yul\":5639:5653   */\n      add\n        /* \"#utility.yul\":5632:5674   */\n      mstore\n        /* \"#utility.yul\":5515:5681   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5687:6053   */\n    tag_205:\n        /* \"#utility.yul\":5829:5832   */\n      0x00\n        /* \"#utility.yul\":5850:5917   */\n      tag_292\n        /* \"#utility.yul\":5914:5916   */\n      0x10\n        /* \"#utility.yul\":5909:5912   */\n      dup4\n        /* \"#utility.yul\":5850:5917   */\n      tag_203\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5843:5917   */\n      swap2\n      pop\n        /* \"#utility.yul\":5926:6019   */\n      tag_293\n        /* \"#utility.yul\":6015:6018   */\n      dup3\n        /* \"#utility.yul\":5926:6019   */\n      tag_204\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6044:6046   */\n      0x20\n        /* \"#utility.yul\":6039:6042   */\n      dup3\n        /* \"#utility.yul\":6035:6047   */\n      add\n        /* \"#utility.yul\":6028:6047   */\n      swap1\n      pop\n        /* \"#utility.yul\":5687:6053   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6059:6478   */\n    tag_103:\n        /* \"#utility.yul\":6225:6229   */\n      0x00\n        /* \"#utility.yul\":6263:6265   */\n      0x20\n        /* \"#utility.yul\":6252:6261   */\n      dup3\n        /* \"#utility.yul\":6248:6266   */\n      add\n        /* \"#utility.yul\":6240:6266   */\n      swap1\n      pop\n        /* \"#utility.yul\":6312:6321   */\n      dup2\n        /* \"#utility.yul\":6306:6310   */\n      dup2\n        /* \"#utility.yul\":6302:6322   */\n      sub\n        /* \"#utility.yul\":6298:6299   */\n      0x00\n        /* \"#utility.yul\":6287:6296   */\n      dup4\n        /* \"#utility.yul\":6283:6300   */\n      add\n        /* \"#utility.yul\":6276:6323   */\n      mstore\n        /* \"#utility.yul\":6340:6471   */\n      tag_295\n        /* \"#utility.yul\":6466:6470   */\n      dup2\n        /* \"#utility.yul\":6340:6471   */\n      tag_205\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6332:6471   */\n      swap1\n      pop\n        /* \"#utility.yul\":6059:6478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6484:6665   */\n    tag_206:\n        /* \"#utility.yul\":6624:6657   */\n      0x43616e6e6f7420756e7374616b65206d6f7265207468616e207374616b656400\n        /* \"#utility.yul\":6620:6621   */\n      0x00\n        /* \"#utility.yul\":6612:6618   */\n      dup3\n        /* \"#utility.yul\":6608:6622   */\n      add\n        /* \"#utility.yul\":6601:6658   */\n      mstore\n        /* \"#utility.yul\":6484:6665   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6671:7037   */\n    tag_207:\n        /* \"#utility.yul\":6813:6816   */\n      0x00\n        /* \"#utility.yul\":6834:6901   */\n      tag_298\n        /* \"#utility.yul\":6898:6900   */\n      0x1f\n        /* \"#utility.yul\":6893:6896   */\n      dup4\n        /* \"#utility.yul\":6834:6901   */\n      tag_203\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6827:6901   */\n      swap2\n      pop\n        /* \"#utility.yul\":6910:7003   */\n      tag_299\n        /* \"#utility.yul\":6999:7002   */\n      dup3\n        /* \"#utility.yul\":6910:7003   */\n      tag_206\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":7028:7030   */\n      0x20\n        /* \"#utility.yul\":7023:7026   */\n      dup3\n        /* \"#utility.yul\":7019:7031   */\n      add\n        /* \"#utility.yul\":7012:7031   */\n      swap1\n      pop\n        /* \"#utility.yul\":6671:7037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7043:7462   */\n    tag_106:\n        /* \"#utility.yul\":7209:7213   */\n      0x00\n        /* \"#utility.yul\":7247:7249   */\n      0x20\n        /* \"#utility.yul\":7236:7245   */\n      dup3\n        /* \"#utility.yul\":7232:7250   */\n      add\n        /* \"#utility.yul\":7224:7250   */\n      swap1\n      pop\n        /* \"#utility.yul\":7296:7305   */\n      dup2\n        /* \"#utility.yul\":7290:7294   */\n      dup2\n        /* \"#utility.yul\":7286:7306   */\n      sub\n        /* \"#utility.yul\":7282:7283   */\n      0x00\n        /* \"#utility.yul\":7271:7280   */\n      dup4\n        /* \"#utility.yul\":7267:7284   */\n      add\n        /* \"#utility.yul\":7260:7307   */\n      mstore\n        /* \"#utility.yul\":7324:7455   */\n      tag_301\n        /* \"#utility.yul\":7450:7454   */\n      dup2\n        /* \"#utility.yul\":7324:7455   */\n      tag_207\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":7316:7455   */\n      swap1\n      pop\n        /* \"#utility.yul\":7043:7462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7637   */\n    tag_208:\n        /* \"#utility.yul\":7608:7629   */\n      0x4e6f207265776172647320746f20636c61696d00000000000000000000000000\n        /* \"#utility.yul\":7604:7605   */\n      0x00\n        /* \"#utility.yul\":7596:7602   */\n      dup3\n        /* \"#utility.yul\":7592:7606   */\n      add\n        /* \"#utility.yul\":7585:7630   */\n      mstore\n        /* \"#utility.yul\":7468:7637   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7643:8009   */\n    tag_209:\n        /* \"#utility.yul\":7785:7788   */\n      0x00\n        /* \"#utility.yul\":7806:7873   */\n      tag_304\n        /* \"#utility.yul\":7870:7872   */\n      0x13\n        /* \"#utility.yul\":7865:7868   */\n      dup4\n        /* \"#utility.yul\":7806:7873   */\n      tag_203\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7799:7873   */\n      swap2\n      pop\n        /* \"#utility.yul\":7882:7975   */\n      tag_305\n        /* \"#utility.yul\":7971:7974   */\n      dup3\n        /* \"#utility.yul\":7882:7975   */\n      tag_208\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":8000:8002   */\n      0x20\n        /* \"#utility.yul\":7995:7998   */\n      dup3\n        /* \"#utility.yul\":7991:8003   */\n      add\n        /* \"#utility.yul\":7984:8003   */\n      swap1\n      pop\n        /* \"#utility.yul\":7643:8009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8015:8434   */\n    tag_118:\n        /* \"#utility.yul\":8181:8185   */\n      0x00\n        /* \"#utility.yul\":8219:8221   */\n      0x20\n        /* \"#utility.yul\":8208:8217   */\n      dup3\n        /* \"#utility.yul\":8204:8222   */\n      add\n        /* \"#utility.yul\":8196:8222   */\n      swap1\n      pop\n        /* \"#utility.yul\":8268:8277   */\n      dup2\n        /* \"#utility.yul\":8262:8266   */\n      dup2\n        /* \"#utility.yul\":8258:8278   */\n      sub\n        /* \"#utility.yul\":8254:8255   */\n      0x00\n        /* \"#utility.yul\":8243:8252   */\n      dup4\n        /* \"#utility.yul\":8239:8256   */\n      add\n        /* \"#utility.yul\":8232:8279   */\n      mstore\n        /* \"#utility.yul\":8296:8427   */\n      tag_307\n        /* \"#utility.yul\":8422:8426   */\n      dup2\n        /* \"#utility.yul\":8296:8427   */\n      tag_209\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":8288:8427   */\n      swap1\n      pop\n        /* \"#utility.yul\":8015:8434   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8440:8604   */\n    tag_210:\n        /* \"#utility.yul\":8580:8596   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":8576:8577   */\n      0x00\n        /* \"#utility.yul\":8568:8574   */\n      dup3\n        /* \"#utility.yul\":8564:8578   */\n      add\n        /* \"#utility.yul\":8557:8597   */\n      mstore\n        /* \"#utility.yul\":8440:8604   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8610:8976   */\n    tag_211:\n        /* \"#utility.yul\":8752:8755   */\n      0x00\n        /* \"#utility.yul\":8773:8840   */\n      tag_310\n        /* \"#utility.yul\":8837:8839   */\n      0x0e\n        /* \"#utility.yul\":8832:8835   */\n      dup4\n        /* \"#utility.yul\":8773:8840   */\n      tag_203\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8766:8840   */\n      swap2\n      pop\n        /* \"#utility.yul\":8849:8942   */\n      tag_311\n        /* \"#utility.yul\":8938:8941   */\n      dup3\n        /* \"#utility.yul\":8849:8942   */\n      tag_210\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8967:8969   */\n      0x20\n        /* \"#utility.yul\":8962:8965   */\n      dup3\n        /* \"#utility.yul\":8958:8970   */\n      add\n        /* \"#utility.yul\":8951:8970   */\n      swap1\n      pop\n        /* \"#utility.yul\":8610:8976   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8982:9401   */\n    tag_134:\n        /* \"#utility.yul\":9148:9152   */\n      0x00\n        /* \"#utility.yul\":9186:9188   */\n      0x20\n        /* \"#utility.yul\":9175:9184   */\n      dup3\n        /* \"#utility.yul\":9171:9189   */\n      add\n        /* \"#utility.yul\":9163:9189   */\n      swap1\n      pop\n        /* \"#utility.yul\":9235:9244   */\n      dup2\n        /* \"#utility.yul\":9229:9233   */\n      dup2\n        /* \"#utility.yul\":9225:9245   */\n      sub\n        /* \"#utility.yul\":9221:9222   */\n      0x00\n        /* \"#utility.yul\":9210:9219   */\n      dup4\n        /* \"#utility.yul\":9206:9223   */\n      add\n        /* \"#utility.yul\":9199:9246   */\n      mstore\n        /* \"#utility.yul\":9263:9394   */\n      tag_313\n        /* \"#utility.yul\":9389:9393   */\n      dup2\n        /* \"#utility.yul\":9263:9394   */\n      tag_211\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":9255:9394   */\n      swap1\n      pop\n        /* \"#utility.yul\":8982:9401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9407:9573   */\n    tag_212:\n        /* \"#utility.yul\":9547:9565   */\n      0x43616e6e6f74206465706f736974203000000000000000000000000000000000\n        /* \"#utility.yul\":9543:9544   */\n      0x00\n        /* \"#utility.yul\":9535:9541   */\n      dup3\n        /* \"#utility.yul\":9531:9545   */\n      add\n        /* \"#utility.yul\":9524:9566   */\n      mstore\n        /* \"#utility.yul\":9407:9573   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9579:9945   */\n    tag_213:\n        /* \"#utility.yul\":9721:9724   */\n      0x00\n        /* \"#utility.yul\":9742:9809   */\n      tag_316\n        /* \"#utility.yul\":9806:9808   */\n      0x10\n        /* \"#utility.yul\":9801:9804   */\n      dup4\n        /* \"#utility.yul\":9742:9809   */\n      tag_203\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":9735:9809   */\n      swap2\n      pop\n        /* \"#utility.yul\":9818:9911   */\n      tag_317\n        /* \"#utility.yul\":9907:9910   */\n      dup3\n        /* \"#utility.yul\":9818:9911   */\n      tag_212\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":9936:9938   */\n      0x20\n        /* \"#utility.yul\":9931:9934   */\n      dup3\n        /* \"#utility.yul\":9927:9939   */\n      add\n        /* \"#utility.yul\":9920:9939   */\n      swap1\n      pop\n        /* \"#utility.yul\":9579:9945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9951:10370   */\n    tag_144:\n        /* \"#utility.yul\":10117:10121   */\n      0x00\n        /* \"#utility.yul\":10155:10157   */\n      0x20\n        /* \"#utility.yul\":10144:10153   */\n      dup3\n        /* \"#utility.yul\":10140:10158   */\n      add\n        /* \"#utility.yul\":10132:10158   */\n      swap1\n      pop\n        /* \"#utility.yul\":10204:10213   */\n      dup2\n        /* \"#utility.yul\":10198:10202   */\n      dup2\n        /* \"#utility.yul\":10194:10214   */\n      sub\n        /* \"#utility.yul\":10190:10191   */\n      0x00\n        /* \"#utility.yul\":10179:10188   */\n      dup4\n        /* \"#utility.yul\":10175:10192   */\n      add\n        /* \"#utility.yul\":10168:10215   */\n      mstore\n        /* \"#utility.yul\":10232:10363   */\n      tag_319\n        /* \"#utility.yul\":10358:10362   */\n      dup2\n        /* \"#utility.yul\":10232:10363   */\n      tag_213\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":10224:10363   */\n      swap1\n      pop\n        /* \"#utility.yul\":9951:10370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10376:10708   */\n    tag_163:\n        /* \"#utility.yul\":10497:10501   */\n      0x00\n        /* \"#utility.yul\":10535:10537   */\n      0x40\n        /* \"#utility.yul\":10524:10533   */\n      dup3\n        /* \"#utility.yul\":10520:10538   */\n      add\n        /* \"#utility.yul\":10512:10538   */\n      swap1\n      pop\n        /* \"#utility.yul\":10548:10619   */\n      tag_321\n        /* \"#utility.yul\":10616:10617   */\n      0x00\n        /* \"#utility.yul\":10605:10614   */\n      dup4\n        /* \"#utility.yul\":10601:10618   */\n      add\n        /* \"#utility.yul\":10592:10598   */\n      dup6\n        /* \"#utility.yul\":10548:10619   */\n      tag_200\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":10629:10701   */\n      tag_322\n        /* \"#utility.yul\":10697:10699   */\n      0x20\n        /* \"#utility.yul\":10686:10695   */\n      dup4\n        /* \"#utility.yul\":10682:10700   */\n      add\n        /* \"#utility.yul\":10673:10679   */\n      dup5\n        /* \"#utility.yul\":10629:10701   */\n      tag_192\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":10376:10708   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10714:11156   */\n    tag_176:\n        /* \"#utility.yul\":10863:10867   */\n      0x00\n        /* \"#utility.yul\":10901:10903   */\n      0x60\n        /* \"#utility.yul\":10890:10899   */\n      dup3\n        /* \"#utility.yul\":10886:10904   */\n      add\n        /* \"#utility.yul\":10878:10904   */\n      swap1\n      pop\n        /* \"#utility.yul\":10914:10985   */\n      tag_324\n        /* \"#utility.yul\":10982:10983   */\n      0x00\n        /* \"#utility.yul\":10971:10980   */\n      dup4\n        /* \"#utility.yul\":10967:10984   */\n      add\n        /* \"#utility.yul\":10958:10964   */\n      dup7\n        /* \"#utility.yul\":10914:10985   */\n      tag_200\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":10995:11067   */\n      tag_325\n        /* \"#utility.yul\":11063:11065   */\n      0x20\n        /* \"#utility.yul\":11052:11061   */\n      dup4\n        /* \"#utility.yul\":11048:11066   */\n      add\n        /* \"#utility.yul\":11039:11045   */\n      dup6\n        /* \"#utility.yul\":10995:11067   */\n      tag_200\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":11077:11149   */\n      tag_326\n        /* \"#utility.yul\":11145:11147   */\n      0x40\n        /* \"#utility.yul\":11134:11143   */\n      dup4\n        /* \"#utility.yul\":11130:11148   */\n      add\n        /* \"#utility.yul\":11121:11127   */\n      dup5\n        /* \"#utility.yul\":11077:11149   */\n      tag_192\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":10714:11156   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f3aa20be0c33c1706db0f01b50384d4e0672f5c527caa9598924609415fd217264736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1109": {
									"entryPoint": null,
									"id": 1109,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 314,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$315_fromMemory": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$315t_contract$_IERC20_$315t_address_fromMemory": {
									"entryPoint": 660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$315": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$315": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2368:11",
										"nodeType": "YulBlock",
										"src": "0:2368:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "627:51:11",
													"nodeType": "YulBlock",
													"src": "627:51:11",
													"statements": [
														{
															"nativeSrc": "637:35:11",
															"nodeType": "YulAssignment",
															"src": "637:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "666:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "648:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:11"
																},
																"nativeSrc": "648:24:11",
																"nodeType": "YulFunctionCall",
																"src": "648:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "637:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$315",
												"nativeSrc": "568:110:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "609:5:11",
														"nodeType": "YulTypedName",
														"src": "609:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "619:7:11",
														"nodeType": "YulTypedName",
														"src": "619:7:11",
														"type": ""
													}
												],
												"src": "568:110:11"
											},
											{
												"body": {
													"nativeSrc": "741:93:11",
													"nodeType": "YulBlock",
													"src": "741:93:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "812:16:11",
																"nodeType": "YulBlock",
																"src": "812:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "821:1:11",
																					"nodeType": "YulLiteral",
																					"src": "821:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:11",
																					"nodeType": "YulLiteral",
																					"src": "824:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "814:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "814:6:11"
																			},
																			"nativeSrc": "814:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "814:12:11"
																		},
																		"nativeSrc": "814:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "814:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "764:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "764:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "803:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "803:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$315",
																					"nativeSrc": "771:31:11",
																					"nodeType": "YulIdentifier",
																					"src": "771:31:11"
																				},
																				"nativeSrc": "771:38:11",
																				"nodeType": "YulFunctionCall",
																				"src": "771:38:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "761:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "761:2:11"
																		},
																		"nativeSrc": "761:49:11",
																		"nodeType": "YulFunctionCall",
																		"src": "761:49:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "754:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "754:6:11"
																},
																"nativeSrc": "754:57:11",
																"nodeType": "YulFunctionCall",
																"src": "754:57:11"
															},
															"nativeSrc": "751:77:11",
															"nodeType": "YulIf",
															"src": "751:77:11"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$315",
												"nativeSrc": "684:150:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:11",
														"nodeType": "YulTypedName",
														"src": "734:5:11",
														"type": ""
													}
												],
												"src": "684:150:11"
											},
											{
												"body": {
													"nativeSrc": "917:94:11",
													"nodeType": "YulBlock",
													"src": "917:94:11",
													"statements": [
														{
															"nativeSrc": "927:22:11",
															"nodeType": "YulAssignment",
															"src": "927:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "942:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "942:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "936:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "936:5:11"
																},
																"nativeSrc": "936:13:11",
																"nodeType": "YulFunctionCall",
																"src": "936:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "927:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "999:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "999:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$315",
																	"nativeSrc": "958:40:11",
																	"nodeType": "YulIdentifier",
																	"src": "958:40:11"
																},
																"nativeSrc": "958:47:11",
																"nodeType": "YulFunctionCall",
																"src": "958:47:11"
															},
															"nativeSrc": "958:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "958:47:11"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$315_fromMemory",
												"nativeSrc": "840:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "895:6:11",
														"nodeType": "YulTypedName",
														"src": "895:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "903:3:11",
														"nodeType": "YulTypedName",
														"src": "903:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "911:5:11",
														"nodeType": "YulTypedName",
														"src": "911:5:11",
														"type": ""
													}
												],
												"src": "840:171:11"
											},
											{
												"body": {
													"nativeSrc": "1060:79:11",
													"nodeType": "YulBlock",
													"src": "1060:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1117:16:11",
																"nodeType": "YulBlock",
																"src": "1117:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1126:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1126:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1129:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1129:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1119:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1119:6:11"
																			},
																			"nativeSrc": "1119:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1119:12:11"
																		},
																		"nativeSrc": "1119:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1119:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1083:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1083:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1108:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1108:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1090:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1090:17:11"
																				},
																				"nativeSrc": "1090:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1090:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1080:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1080:2:11"
																		},
																		"nativeSrc": "1080:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1080:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1073:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:11"
																},
																"nativeSrc": "1073:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1073:43:11"
															},
															"nativeSrc": "1070:63:11",
															"nodeType": "YulIf",
															"src": "1070:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1017:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1053:5:11",
														"nodeType": "YulTypedName",
														"src": "1053:5:11",
														"type": ""
													}
												],
												"src": "1017:122:11"
											},
											{
												"body": {
													"nativeSrc": "1208:80:11",
													"nodeType": "YulBlock",
													"src": "1208:80:11",
													"statements": [
														{
															"nativeSrc": "1218:22:11",
															"nodeType": "YulAssignment",
															"src": "1218:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1233:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1233:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1227:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1227:5:11"
																},
																"nativeSrc": "1227:13:11",
																"nodeType": "YulFunctionCall",
																"src": "1227:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1218:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1218:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1276:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1276:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1249:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1249:26:11"
																},
																"nativeSrc": "1249:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1249:33:11"
															},
															"nativeSrc": "1249:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1249:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1145:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1186:6:11",
														"nodeType": "YulTypedName",
														"src": "1186:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1194:3:11",
														"nodeType": "YulTypedName",
														"src": "1194:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1202:5:11",
														"nodeType": "YulTypedName",
														"src": "1202:5:11",
														"type": ""
													}
												],
												"src": "1145:143:11"
											},
											{
												"body": {
													"nativeSrc": "1433:580:11",
													"nodeType": "YulBlock",
													"src": "1433:580:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1479:83:11",
																"nodeType": "YulBlock",
																"src": "1479:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1481:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1481:77:11"
																			},
																			"nativeSrc": "1481:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1481:79:11"
																		},
																		"nativeSrc": "1481:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1481:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1454:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1454:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1463:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1463:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1450:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1450:3:11"
																		},
																		"nativeSrc": "1450:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1450:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1475:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1475:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1446:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1446:3:11"
																},
																"nativeSrc": "1446:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1446:32:11"
															},
															"nativeSrc": "1443:119:11",
															"nodeType": "YulIf",
															"src": "1443:119:11"
														},
														{
															"nativeSrc": "1572:142:11",
															"nodeType": "YulBlock",
															"src": "1572:142:11",
															"statements": [
																{
																	"nativeSrc": "1587:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1587:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1601:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1601:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1591:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1591:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1616:88:11",
																	"nodeType": "YulAssignment",
																	"src": "1616:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1676:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1676:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1687:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1687:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1672:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1672:3:11"
																				},
																				"nativeSrc": "1672:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1672:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1696:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1696:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$315_fromMemory",
																			"nativeSrc": "1626:45:11",
																			"nodeType": "YulIdentifier",
																			"src": "1626:45:11"
																		},
																		"nativeSrc": "1626:78:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1626:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1616:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1616:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1724:143:11",
															"nodeType": "YulBlock",
															"src": "1724:143:11",
															"statements": [
																{
																	"nativeSrc": "1739:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1739:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1753:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1753:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1743:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1743:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1769:88:11",
																	"nodeType": "YulAssignment",
																	"src": "1769:88:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1829:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1829:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1840:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1840:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1825:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1825:3:11"
																				},
																				"nativeSrc": "1825:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1849:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1849:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$315_fromMemory",
																			"nativeSrc": "1779:45:11",
																			"nodeType": "YulIdentifier",
																			"src": "1779:45:11"
																		},
																		"nativeSrc": "1779:78:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1779:78:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1769:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1769:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1877:129:11",
															"nodeType": "YulBlock",
															"src": "1877:129:11",
															"statements": [
																{
																	"nativeSrc": "1892:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1892:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1906:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1906:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1896:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1896:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1922:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1922:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1968:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1968:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1979:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1964:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1964:3:11"
																				},
																				"nativeSrc": "1964:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1964:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1988:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1932:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1932:31:11"
																		},
																		"nativeSrc": "1932:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1922:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1922:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$315t_contract$_IERC20_$315t_address_fromMemory",
												"nativeSrc": "1294:719:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1387:9:11",
														"nodeType": "YulTypedName",
														"src": "1387:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1398:7:11",
														"nodeType": "YulTypedName",
														"src": "1398:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1410:6:11",
														"nodeType": "YulTypedName",
														"src": "1410:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1418:6:11",
														"nodeType": "YulTypedName",
														"src": "1418:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1426:6:11",
														"nodeType": "YulTypedName",
														"src": "1426:6:11",
														"type": ""
													}
												],
												"src": "1294:719:11"
											},
											{
												"body": {
													"nativeSrc": "2084:53:11",
													"nodeType": "YulBlock",
													"src": "2084:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2101:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2101:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2124:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2124:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2106:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "2106:17:11"
																		},
																		"nativeSrc": "2106:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2106:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2094:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2094:6:11"
																},
																"nativeSrc": "2094:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2094:37:11"
															},
															"nativeSrc": "2094:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "2094:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2019:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2072:5:11",
														"nodeType": "YulTypedName",
														"src": "2072:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2079:3:11",
														"nodeType": "YulTypedName",
														"src": "2079:3:11",
														"type": ""
													}
												],
												"src": "2019:118:11"
											},
											{
												"body": {
													"nativeSrc": "2241:124:11",
													"nodeType": "YulBlock",
													"src": "2241:124:11",
													"statements": [
														{
															"nativeSrc": "2251:26:11",
															"nodeType": "YulAssignment",
															"src": "2251:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2263:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2274:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2259:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2259:3:11"
																},
																"nativeSrc": "2259:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2259:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2251:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2251:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2331:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2344:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2344:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2355:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2355:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2340:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2340:3:11"
																		},
																		"nativeSrc": "2340:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2340:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2287:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "2287:43:11"
																},
																"nativeSrc": "2287:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2287:71:11"
															},
															"nativeSrc": "2287:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "2287:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2143:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2213:9:11",
														"nodeType": "YulTypedName",
														"src": "2213:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2225:6:11",
														"nodeType": "YulTypedName",
														"src": "2225:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2236:4:11",
														"nodeType": "YulTypedName",
														"src": "2236:4:11",
														"type": ""
													}
												],
												"src": "2143:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$315(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$315(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$315(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$315_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$315(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$315t_contract$_IERC20_$315t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$315_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$315_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161189d38038061189d83398181016040528101906100319190610294565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009991906102f3565b60405180910390fd5b6100b18161013a60201b60201c565b508260015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505061030c565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610228826101ff565b9050919050565b5f6102398261021e565b9050919050565b6102498161022f565b8114610253575f5ffd5b50565b5f8151905061026481610240565b92915050565b6102738161021e565b811461027d575f5ffd5b50565b5f8151905061028e8161026a565b92915050565b5f5f5f606084860312156102ab576102aa6101fb565b5b5f6102b886828701610256565b93505060206102c986828701610256565b92505060406102da86828701610280565b9150509250925092565b6102ed8161021e565b82525050565b5f6020820190506103065f8301846102e4565b92915050565b611584806103195f395ff3fe608060405234801561000f575f5ffd5b5060043610610113575f3560e01c80638b876347116100a0578063c8f33c911161006f578063c8f33c91146102b7578063cd3daf9d146102d5578063df136d65146102f3578063f2fde38b14610311578063f7c618c11461032d57610113565b80638b876347146102315780638da5cb5b14610261578063a694fc3a1461027f578063bdd071fb1461029b57610113565b8063372500ab116100e7578063372500ab146101c3578063715018a6146101cd57806372f702f3146101d75780637b0a47ee146101f5578063817b1cd21461021357610113565b80628cc262146101175780630700037d1461014757806316934fc4146101775780632e17de78146101a7575b5f5ffd5b610131600480360381019061012c919061101e565b61034b565b60405161013e9190611061565b60405180910390f35b610161600480360381019061015c919061101e565b610446565b60405161016e9190611061565b60405180910390f35b610191600480360381019061018c919061101e565b61045b565b60405161019e9190611061565b60405180910390f35b6101c160048036038101906101bc91906110a4565b610470565b005b6101cb6106c5565b005b6101d56108b2565b005b6101df6108c5565b6040516101ec919061112a565b60405180910390f35b6101fd6108ea565b60405161020a9190611061565b60405180910390f35b61021b6108f0565b6040516102289190611061565b60405180910390f35b61024b6004803603810190610246919061101e565b6108f6565b6040516102589190611061565b60405180910390f35b61026961090b565b6040516102769190611152565b60405180910390f35b610299600480360381019061029491906110a4565b610932565b005b6102b560048036038101906102b0919061116b565b610b09565b005b6102bf610bbe565b6040516102cc9190611061565b60405180910390f35b6102dd610bc4565b6040516102ea9190611061565b60405180910390f35b6102fb610c26565b6040516103089190611061565b60405180910390f35b61032b6004803603810190610326919061101e565b610c2c565b005b610335610cb0565b604051610342919061112a565b60405180910390f35b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054670de0b6b3a764000060085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546103d9610bc4565b6103e391906111d6565b60075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461042b9190611209565b6104359190611277565b61043f91906112a7565b9050919050565b6009602052805f5260405f205f915090505481565b6007602052805f5260405f205f915090505481565b33610479610bc4565b600681905550426005819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610548576104c28161034b565b60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060065460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f821161058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190611334565b60405180910390fd5b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561060a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106019061139c565b60405180910390fd5b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461065691906111d6565b925050819055508160035f82825461066e91906111d6565b925050819055506106c1338360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cd59092919063ffffffff16565b5050565b336106ce610bc4565b600681905550426005819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461079d576107178161034b565b60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060065460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081790611404565b60405180910390fd5b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506108ae338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cd59092919063ffffffff16565b5050565b6108ba610d54565b6108c35f610ddb565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60035481565b6008602052805f5260405f205f915090505481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3361093b610bc4565b600681905550426005819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a0a576109848161034b565b60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060065460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f8211610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a439061146c565b60405180910390fd5b610a9a33308460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e9c909392919063ffffffff16565b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ae691906112a7565b925050819055508160035f828254610afe91906112a7565b925050819055505050565b610b11610d54565b5f8211610b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4a906114d4565b60405180910390fd5b610ba133308460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e9c909392919063ffffffff16565b8082610bad9190611277565b600481905550426005819055505050565b60055481565b5f5f60035403610bd8576006549050610c23565b600354670de0b6b3a764000060045460055442610bf591906111d6565b610bff9190611209565b610c099190611209565b610c139190611277565b600654610c2091906112a7565b90505b90565b60065481565b610c34610d54565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ca4575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c9b9190611152565b60405180910390fd5b610cad81610ddb565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d4f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610d089291906114f2565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f1e565b505050565b610d5c610fb9565b73ffffffffffffffffffffffffffffffffffffffff16610d7a61090b565b73ffffffffffffffffffffffffffffffffffffffff1614610dd957610d9d610fb9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dd09190611152565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f18848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610ed193929190611519565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f1e565b50505050565b5f5f60205f8451602086015f885af180610f3d576040513d5f823e3d81fd5b3d92505f519150505f8214610f56576001811415610f71565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610fb357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610faa9190611152565b60405180910390fd5b50505050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fed82610fc4565b9050919050565b610ffd81610fe3565b8114611007575f5ffd5b50565b5f8135905061101881610ff4565b92915050565b5f6020828403121561103357611032610fc0565b5b5f6110408482850161100a565b91505092915050565b5f819050919050565b61105b81611049565b82525050565b5f6020820190506110745f830184611052565b92915050565b61108381611049565b811461108d575f5ffd5b50565b5f8135905061109e8161107a565b92915050565b5f602082840312156110b9576110b8610fc0565b5b5f6110c684828501611090565b91505092915050565b5f819050919050565b5f6110f26110ed6110e884610fc4565b6110cf565b610fc4565b9050919050565b5f611103826110d8565b9050919050565b5f611114826110f9565b9050919050565b6111248161110a565b82525050565b5f60208201905061113d5f83018461111b565b92915050565b61114c81610fe3565b82525050565b5f6020820190506111655f830184611143565b92915050565b5f5f6040838503121561118157611180610fc0565b5b5f61118e85828601611090565b925050602061119f85828601611090565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111e082611049565b91506111eb83611049565b9250828203905081811115611203576112026111a9565b5b92915050565b5f61121382611049565b915061121e83611049565b925082820261122c81611049565b91508282048414831517611243576112426111a9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61128182611049565b915061128c83611049565b92508261129c5761129b61124a565b5b828204905092915050565b5f6112b182611049565b91506112bc83611049565b92508282019050808211156112d4576112d36111a9565b5b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420756e7374616b652030000000000000000000000000000000005f82015250565b5f61131e6010836112da565b9150611329826112ea565b602082019050919050565b5f6020820190508181035f83015261134b81611312565b9050919050565b7f43616e6e6f7420756e7374616b65206d6f7265207468616e207374616b6564005f82015250565b5f611386601f836112da565b915061139182611352565b602082019050919050565b5f6020820190508181035f8301526113b38161137a565b9050919050565b7f4e6f207265776172647320746f20636c61696d000000000000000000000000005f82015250565b5f6113ee6013836112da565b91506113f9826113ba565b602082019050919050565b5f6020820190508181035f83015261141b816113e2565b9050919050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f611456600e836112da565b915061146182611422565b602082019050919050565b5f6020820190508181035f8301526114838161144a565b9050919050565b7f43616e6e6f74206465706f7369742030000000000000000000000000000000005f82015250565b5f6114be6010836112da565b91506114c98261148a565b602082019050919050565b5f6020820190508181035f8301526114eb816114b2565b9050919050565b5f6040820190506115055f830185611143565b6115126020830184611052565b9392505050565b5f60608201905061152c5f830186611143565b6115396020830185611143565b6115466040830184611052565b94935050505056fea2646970667358221220f3aa20be0c33c1706db0f01b50384d4e0672f5c527caa9598924609415fd217264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x189D CODESIZE SUB DUP1 PUSH2 0x189D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x294 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x2F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x13A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP3 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x30C JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x228 DUP3 PUSH2 0x1FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x239 DUP3 PUSH2 0x21E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x249 DUP2 PUSH2 0x22F JUMP JUMPDEST DUP2 EQ PUSH2 0x253 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x264 DUP2 PUSH2 0x240 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x273 DUP2 PUSH2 0x21E JUMP JUMPDEST DUP2 EQ PUSH2 0x27D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28E DUP2 PUSH2 0x26A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2AB JUMPI PUSH2 0x2AA PUSH2 0x1FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B8 DUP7 DUP3 DUP8 ADD PUSH2 0x256 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2C9 DUP7 DUP3 DUP8 ADD PUSH2 0x256 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2DA DUP7 DUP3 DUP8 ADD PUSH2 0x280 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2ED DUP2 PUSH2 0x21E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x306 PUSH0 DUP4 ADD DUP5 PUSH2 0x2E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1584 DUP1 PUSH2 0x319 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B876347 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC8F33C91 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x32D JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x8B876347 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xBDD071FB EQ PUSH2 0x29B JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x372500AB GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x213 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH2 0x6C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0x8B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0xC2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x3D9 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x479 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x548 JUMPI PUSH2 0x4C2 DUP2 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6C1 CALLER DUP4 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCD5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0x6CE PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79D JUMPI PUSH2 0x717 DUP2 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x817 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8AE CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCD5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8BA PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x8C3 PUSH0 PUSH2 0xDDB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x93B PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA0A JUMPI PUSH2 0x984 DUP2 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA43 SWAP1 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9A CALLER ADDRESS DUP5 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xB11 PUSH2 0xD54 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4A SWAP1 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA1 CALLER ADDRESS DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 DUP3 PUSH2 0xBAD SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 SLOAD SUB PUSH2 0xBD8 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xC20 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC34 PUSH2 0xD54 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9B SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAD DUP2 PUSH2 0xDDB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD4F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD08 SWAP3 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF1E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD5C PUSH2 0xFB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD7A PUSH2 0x90B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDD9 JUMPI PUSH2 0xD9D PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD0 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF18 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xED1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF1E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xF3D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xF56 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF71 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFB3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFED DUP3 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFD DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1007 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1018 DUP2 PUSH2 0xFF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1033 JUMPI PUSH2 0x1032 PUSH2 0xFC0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1040 DUP5 DUP3 DUP6 ADD PUSH2 0x100A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105B DUP2 PUSH2 0x1049 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1074 PUSH0 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1083 DUP2 PUSH2 0x1049 JUMP JUMPDEST DUP2 EQ PUSH2 0x108D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109E DUP2 PUSH2 0x107A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B8 PUSH2 0xFC0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10F2 PUSH2 0x10ED PUSH2 0x10E8 DUP5 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0x10CF JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1103 DUP3 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1114 DUP3 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1124 DUP2 PUSH2 0x110A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x113D PUSH0 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114C DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1165 PUSH0 DUP4 ADD DUP5 PUSH2 0x1143 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1181 JUMPI PUSH2 0x1180 PUSH2 0xFC0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x118E DUP6 DUP3 DUP7 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x119F DUP6 DUP3 DUP7 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11E0 DUP3 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EB DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1202 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1213 DUP3 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP PUSH2 0x121E DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x122C DUP2 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1281 DUP3 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP PUSH2 0x128C DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x129C JUMPI PUSH2 0x129B PUSH2 0x124A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B1 DUP3 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP PUSH2 0x12BC DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12D4 JUMPI PUSH2 0x12D3 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420756E7374616B65203000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x131E PUSH1 0x10 DUP4 PUSH2 0x12DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1329 DUP3 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x134B DUP2 PUSH2 0x1312 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420756E7374616B65206D6F7265207468616E207374616B656400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1386 PUSH1 0x1F DUP4 PUSH2 0x12DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1391 DUP3 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13B3 DUP2 PUSH2 0x137A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13EE PUSH1 0x13 DUP4 PUSH2 0x12DA JUMP JUMPDEST SWAP2 POP PUSH2 0x13F9 DUP3 PUSH2 0x13BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x141B DUP2 PUSH2 0x13E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1456 PUSH1 0xE DUP4 PUSH2 0x12DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1461 DUP3 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1483 DUP2 PUSH2 0x144A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206465706F736974203000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14BE PUSH1 0x10 DUP4 PUSH2 0x12DA JUMP JUMPDEST SWAP2 POP PUSH2 0x14C9 DUP3 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14EB DUP2 PUSH2 0x14B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1505 PUSH0 DUP4 ADD DUP6 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x1512 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x152C PUSH0 DUP4 ADD DUP7 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x1539 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x1546 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xAA KECCAK256 0xBE 0xC CALLER 0xC1 PUSH17 0x6DB0F01B50384D4E0672F5C527CAA95989 0x24 PUSH1 0x94 ISZERO REVERT 0x21 PUSH19 0x64736F6C634300081C00330000000000000000 ",
							"sourceMap": "208:2749:10:-:0;;;701:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;786:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;826:13:10::1;811:12;;:28;;;;;;;;;;;;;;;;;;864:12;850:11;;:26;;;;;;;;;;;;;;;;;;701:183:::0;;;208:2749;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:171::-;911:5;942:6;936:13;927:22;;958:47;999:5;958:47;:::i;:::-;840:171;;;;:::o;1017:122::-;1090:24;1108:5;1090:24;:::i;:::-;1083:5;1080:35;1070:63;;1129:1;1126;1119:12;1070:63;1017:122;:::o;1145:143::-;1202:5;1233:6;1227:13;1218:22;;1249:33;1276:5;1249:33;:::i;:::-;1145:143;;;;:::o;1294:719::-;1410:6;1418;1426;1475:2;1463:9;1454:7;1450:23;1446:32;1443:119;;;1481:79;;:::i;:::-;1443:119;1601:1;1626:78;1696:7;1687:6;1676:9;1672:22;1626:78;:::i;:::-;1616:88;;1572:142;1753:2;1779:78;1849:7;1840:6;1829:9;1825:22;1779:78;:::i;:::-;1769:88;;1724:143;1906:2;1932:64;1988:7;1979:6;1968:9;1964:22;1932:64;:::i;:::-;1922:74;;1877:129;1294:719;;;;;:::o;2019:118::-;2106:24;2124:5;2106:24;:::i;:::-;2101:3;2094:37;2019:118;;:::o;2143:222::-;2236:4;2274:2;2263:9;2259:18;2251:26;;2287:71;2355:1;2344:9;2340:17;2331:6;2287:71;:::i;:::-;2143:222;;;;:::o;208:2749:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_684": {
									"entryPoint": 3870,
									"id": 684,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3412,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_997": {
									"entryPoint": 4025,
									"id": 997,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 3547,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimRewards_1325": {
									"entryPoint": 1733,
									"id": 1325,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositRewards_1365": {
									"entryPoint": 2825,
									"id": 1365,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@earned_1202": {
									"entryPoint": 843,
									"id": 1202,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastUpdateTime_1072": {
									"entryPoint": 3006,
									"id": 1072,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 2315,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 2226,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_1074": {
									"entryPoint": 3110,
									"id": 1074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_1175": {
									"entryPoint": 3012,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardRate_1070": {
									"entryPoint": 2282,
									"id": 1070,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_1066": {
									"entryPoint": 3248,
									"id": 1066,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_1086": {
									"entryPoint": 1094,
									"id": 1086,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_389": {
									"entryPoint": 3740,
									"id": 389,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_362": {
									"entryPoint": 3285,
									"id": 362,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1242": {
									"entryPoint": 2354,
									"id": 1242,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_1078": {
									"entryPoint": 1115,
									"id": 1078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_1063": {
									"entryPoint": 2245,
									"id": 1063,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1068": {
									"entryPoint": 2288,
									"id": 1068,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3116,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_1288": {
									"entryPoint": 1136,
									"id": 1288,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_1082": {
									"entryPoint": 2294,
									"id": 1082,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5298,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5401,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$315_to_t_address": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4682,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4032,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866": {
									"entryPoint": 5258,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d": {
									"entryPoint": 5050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac": {
									"entryPoint": 4946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d": {
									"entryPoint": 4842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11159:11",
										"nodeType": "YulBlock",
										"src": "0:11159:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "748:87:11",
													"nodeType": "YulBlock",
													"src": "748:87:11",
													"statements": [
														{
															"nativeSrc": "758:29:11",
															"nodeType": "YulAssignment",
															"src": "758:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:11"
																},
																"nativeSrc": "767:20:11",
																"nodeType": "YulFunctionCall",
																"src": "767:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:11"
																},
																"nativeSrc": "796:33:11",
																"nodeType": "YulFunctionCall",
																"src": "796:33:11"
															},
															"nativeSrc": "796:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:11",
														"nodeType": "YulTypedName",
														"src": "726:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:11",
														"nodeType": "YulTypedName",
														"src": "734:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:11",
														"nodeType": "YulTypedName",
														"src": "742:5:11",
														"type": ""
													}
												],
												"src": "696:139:11"
											},
											{
												"body": {
													"nativeSrc": "907:263:11",
													"nodeType": "YulBlock",
													"src": "907:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:11",
																"nodeType": "YulBlock",
																"src": "953:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:11"
																			},
																			"nativeSrc": "955:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:11"
																		},
																		"nativeSrc": "955:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:11"
																		},
																		"nativeSrc": "924:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:11",
																		"nodeType": "YulLiteral",
																		"src": "949:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:11"
																},
																"nativeSrc": "920:32:11",
																"nodeType": "YulFunctionCall",
																"src": "920:32:11"
															},
															"nativeSrc": "917:119:11",
															"nodeType": "YulIf",
															"src": "917:119:11"
														},
														{
															"nativeSrc": "1046:117:11",
															"nodeType": "YulBlock",
															"src": "1046:117:11",
															"statements": [
																{
																	"nativeSrc": "1061:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:11"
																				},
																				"nativeSrc": "1121:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:11"
																		},
																		"nativeSrc": "1100:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:11",
														"nodeType": "YulTypedName",
														"src": "877:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:11",
														"nodeType": "YulTypedName",
														"src": "888:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:11",
														"nodeType": "YulTypedName",
														"src": "900:6:11",
														"type": ""
													}
												],
												"src": "841:329:11"
											},
											{
												"body": {
													"nativeSrc": "1221:32:11",
													"nodeType": "YulBlock",
													"src": "1221:32:11",
													"statements": [
														{
															"nativeSrc": "1231:16:11",
															"nodeType": "YulAssignment",
															"src": "1231:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:11",
																"nodeType": "YulIdentifier",
																"src": "1242:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:11",
														"nodeType": "YulTypedName",
														"src": "1203:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:11",
														"nodeType": "YulTypedName",
														"src": "1213:7:11",
														"type": ""
													}
												],
												"src": "1176:77:11"
											},
											{
												"body": {
													"nativeSrc": "1324:53:11",
													"nodeType": "YulBlock",
													"src": "1324:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:11"
																		},
																		"nativeSrc": "1346:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:11"
																},
																"nativeSrc": "1334:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:11"
															},
															"nativeSrc": "1334:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:11",
														"nodeType": "YulTypedName",
														"src": "1312:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:11",
														"nodeType": "YulTypedName",
														"src": "1319:3:11",
														"type": ""
													}
												],
												"src": "1259:118:11"
											},
											{
												"body": {
													"nativeSrc": "1481:124:11",
													"nodeType": "YulBlock",
													"src": "1481:124:11",
													"statements": [
														{
															"nativeSrc": "1491:26:11",
															"nodeType": "YulAssignment",
															"src": "1491:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:11"
																},
																"nativeSrc": "1499:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:11"
																		},
																		"nativeSrc": "1580:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:11"
																},
																"nativeSrc": "1527:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:11"
															},
															"nativeSrc": "1527:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:11",
														"nodeType": "YulTypedName",
														"src": "1453:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:11",
														"nodeType": "YulTypedName",
														"src": "1465:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:11",
														"nodeType": "YulTypedName",
														"src": "1476:4:11",
														"type": ""
													}
												],
												"src": "1383:222:11"
											},
											{
												"body": {
													"nativeSrc": "1654:79:11",
													"nodeType": "YulBlock",
													"src": "1654:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1711:16:11",
																"nodeType": "YulBlock",
																"src": "1711:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1723:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1713:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:11"
																			},
																			"nativeSrc": "1713:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:11"
																		},
																		"nativeSrc": "1713:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1677:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1702:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1684:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:11"
																				},
																				"nativeSrc": "1684:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1674:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:11"
																		},
																		"nativeSrc": "1674:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1667:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:11"
																},
																"nativeSrc": "1667:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1667:43:11"
															},
															"nativeSrc": "1664:63:11",
															"nodeType": "YulIf",
															"src": "1664:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1611:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1647:5:11",
														"nodeType": "YulTypedName",
														"src": "1647:5:11",
														"type": ""
													}
												],
												"src": "1611:122:11"
											},
											{
												"body": {
													"nativeSrc": "1791:87:11",
													"nodeType": "YulBlock",
													"src": "1791:87:11",
													"statements": [
														{
															"nativeSrc": "1801:29:11",
															"nodeType": "YulAssignment",
															"src": "1801:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1823:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1810:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:11"
																},
																"nativeSrc": "1810:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1810:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1801:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1866:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1839:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:11"
																},
																"nativeSrc": "1839:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1839:33:11"
															},
															"nativeSrc": "1839:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1739:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1769:6:11",
														"nodeType": "YulTypedName",
														"src": "1769:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1777:3:11",
														"nodeType": "YulTypedName",
														"src": "1777:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1785:5:11",
														"nodeType": "YulTypedName",
														"src": "1785:5:11",
														"type": ""
													}
												],
												"src": "1739:139:11"
											},
											{
												"body": {
													"nativeSrc": "1950:263:11",
													"nodeType": "YulBlock",
													"src": "1950:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1996:83:11",
																"nodeType": "YulBlock",
																"src": "1996:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1998:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1998:77:11"
																			},
																			"nativeSrc": "1998:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1998:79:11"
																		},
																		"nativeSrc": "1998:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1998:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1971:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1980:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1980:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1967:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1967:3:11"
																		},
																		"nativeSrc": "1967:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1967:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1992:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1963:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1963:3:11"
																},
																"nativeSrc": "1963:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1963:32:11"
															},
															"nativeSrc": "1960:119:11",
															"nodeType": "YulIf",
															"src": "1960:119:11"
														},
														{
															"nativeSrc": "2089:117:11",
															"nodeType": "YulBlock",
															"src": "2089:117:11",
															"statements": [
																{
																	"nativeSrc": "2104:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2104:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2118:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2118:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2108:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2108:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2133:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2133:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2168:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2168:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2179:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2179:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2164:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2164:3:11"
																				},
																				"nativeSrc": "2164:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2164:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2188:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2188:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2143:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2143:20:11"
																		},
																		"nativeSrc": "2143:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2143:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2133:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2133:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1884:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1920:9:11",
														"nodeType": "YulTypedName",
														"src": "1920:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1931:7:11",
														"nodeType": "YulTypedName",
														"src": "1931:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1943:6:11",
														"nodeType": "YulTypedName",
														"src": "1943:6:11",
														"type": ""
													}
												],
												"src": "1884:329:11"
											},
											{
												"body": {
													"nativeSrc": "2251:28:11",
													"nodeType": "YulBlock",
													"src": "2251:28:11",
													"statements": [
														{
															"nativeSrc": "2261:12:11",
															"nodeType": "YulAssignment",
															"src": "2261:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "2268:5:11",
																"nodeType": "YulIdentifier",
																"src": "2268:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2261:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2219:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2237:5:11",
														"nodeType": "YulTypedName",
														"src": "2237:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2247:3:11",
														"nodeType": "YulTypedName",
														"src": "2247:3:11",
														"type": ""
													}
												],
												"src": "2219:60:11"
											},
											{
												"body": {
													"nativeSrc": "2345:82:11",
													"nodeType": "YulBlock",
													"src": "2345:82:11",
													"statements": [
														{
															"nativeSrc": "2355:66:11",
															"nodeType": "YulAssignment",
															"src": "2355:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2413:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2413:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2395:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2395:17:11"
																				},
																				"nativeSrc": "2395:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2395:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2386:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "2386:8:11"
																		},
																		"nativeSrc": "2386:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2386:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2368:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2368:17:11"
																},
																"nativeSrc": "2368:53:11",
																"nodeType": "YulFunctionCall",
																"src": "2368:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2355:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2355:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2285:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2325:5:11",
														"nodeType": "YulTypedName",
														"src": "2325:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2335:9:11",
														"nodeType": "YulTypedName",
														"src": "2335:9:11",
														"type": ""
													}
												],
												"src": "2285:142:11"
											},
											{
												"body": {
													"nativeSrc": "2493:66:11",
													"nodeType": "YulBlock",
													"src": "2493:66:11",
													"statements": [
														{
															"nativeSrc": "2503:50:11",
															"nodeType": "YulAssignment",
															"src": "2503:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2547:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2547:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2516:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2516:30:11"
																},
																"nativeSrc": "2516:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2516:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2503:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2503:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2433:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2473:5:11",
														"nodeType": "YulTypedName",
														"src": "2473:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2483:9:11",
														"nodeType": "YulTypedName",
														"src": "2483:9:11",
														"type": ""
													}
												],
												"src": "2433:126:11"
											},
											{
												"body": {
													"nativeSrc": "2639:66:11",
													"nodeType": "YulBlock",
													"src": "2639:66:11",
													"statements": [
														{
															"nativeSrc": "2649:50:11",
															"nodeType": "YulAssignment",
															"src": "2649:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2693:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2693:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2662:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "2662:30:11"
																},
																"nativeSrc": "2662:37:11",
																"nodeType": "YulFunctionCall",
																"src": "2662:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2649:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "2649:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$315_to_t_address",
												"nativeSrc": "2565:140:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2619:5:11",
														"nodeType": "YulTypedName",
														"src": "2619:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2629:9:11",
														"nodeType": "YulTypedName",
														"src": "2629:9:11",
														"type": ""
													}
												],
												"src": "2565:140:11"
											},
											{
												"body": {
													"nativeSrc": "2790:80:11",
													"nodeType": "YulBlock",
													"src": "2790:80:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2807:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2807:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2857:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2857:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$315_to_t_address",
																			"nativeSrc": "2812:44:11",
																			"nodeType": "YulIdentifier",
																			"src": "2812:44:11"
																		},
																		"nativeSrc": "2812:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2812:51:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2800:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2800:6:11"
																},
																"nativeSrc": "2800:64:11",
																"nodeType": "YulFunctionCall",
																"src": "2800:64:11"
															},
															"nativeSrc": "2800:64:11",
															"nodeType": "YulExpressionStatement",
															"src": "2800:64:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
												"nativeSrc": "2711:159:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2778:5:11",
														"nodeType": "YulTypedName",
														"src": "2778:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2785:3:11",
														"nodeType": "YulTypedName",
														"src": "2785:3:11",
														"type": ""
													}
												],
												"src": "2711:159:11"
											},
											{
												"body": {
													"nativeSrc": "2988:138:11",
													"nodeType": "YulBlock",
													"src": "2988:138:11",
													"statements": [
														{
															"nativeSrc": "2998:26:11",
															"nodeType": "YulAssignment",
															"src": "2998:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3010:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3010:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3021:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3021:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3006:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3006:3:11"
																},
																"nativeSrc": "3006:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3006:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2998:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2998:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3092:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3092:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3105:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3105:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3116:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3116:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3101:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:11"
																		},
																		"nativeSrc": "3101:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3101:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack",
																	"nativeSrc": "3034:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "3034:57:11"
																},
																"nativeSrc": "3034:85:11",
																"nodeType": "YulFunctionCall",
																"src": "3034:85:11"
															},
															"nativeSrc": "3034:85:11",
															"nodeType": "YulExpressionStatement",
															"src": "3034:85:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed",
												"nativeSrc": "2876:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2960:9:11",
														"nodeType": "YulTypedName",
														"src": "2960:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2972:6:11",
														"nodeType": "YulTypedName",
														"src": "2972:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2983:4:11",
														"nodeType": "YulTypedName",
														"src": "2983:4:11",
														"type": ""
													}
												],
												"src": "2876:250:11"
											},
											{
												"body": {
													"nativeSrc": "3197:53:11",
													"nodeType": "YulBlock",
													"src": "3197:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3214:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3214:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3237:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3237:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3219:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3219:17:11"
																		},
																		"nativeSrc": "3219:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3219:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3207:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3207:6:11"
																},
																"nativeSrc": "3207:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3207:37:11"
															},
															"nativeSrc": "3207:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3207:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3132:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3185:5:11",
														"nodeType": "YulTypedName",
														"src": "3185:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3192:3:11",
														"nodeType": "YulTypedName",
														"src": "3192:3:11",
														"type": ""
													}
												],
												"src": "3132:118:11"
											},
											{
												"body": {
													"nativeSrc": "3354:124:11",
													"nodeType": "YulBlock",
													"src": "3354:124:11",
													"statements": [
														{
															"nativeSrc": "3364:26:11",
															"nodeType": "YulAssignment",
															"src": "3364:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3376:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3376:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3387:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3387:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3372:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3372:3:11"
																},
																"nativeSrc": "3372:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3372:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3364:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3364:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3444:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3444:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3457:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3457:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3468:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3468:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3453:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3453:3:11"
																		},
																		"nativeSrc": "3453:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3453:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3400:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3400:43:11"
																},
																"nativeSrc": "3400:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3400:71:11"
															},
															"nativeSrc": "3400:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3400:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3256:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3326:9:11",
														"nodeType": "YulTypedName",
														"src": "3326:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3338:6:11",
														"nodeType": "YulTypedName",
														"src": "3338:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3349:4:11",
														"nodeType": "YulTypedName",
														"src": "3349:4:11",
														"type": ""
													}
												],
												"src": "3256:222:11"
											},
											{
												"body": {
													"nativeSrc": "3567:391:11",
													"nodeType": "YulBlock",
													"src": "3567:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3613:83:11",
																"nodeType": "YulBlock",
																"src": "3613:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3615:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3615:77:11"
																			},
																			"nativeSrc": "3615:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3615:79:11"
																		},
																		"nativeSrc": "3615:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3615:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3588:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3588:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3597:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3597:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3584:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3584:3:11"
																		},
																		"nativeSrc": "3584:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3584:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3609:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3609:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3580:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3580:3:11"
																},
																"nativeSrc": "3580:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3580:32:11"
															},
															"nativeSrc": "3577:119:11",
															"nodeType": "YulIf",
															"src": "3577:119:11"
														},
														{
															"nativeSrc": "3706:117:11",
															"nodeType": "YulBlock",
															"src": "3706:117:11",
															"statements": [
																{
																	"nativeSrc": "3721:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3721:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3735:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3735:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3725:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3725:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3750:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3750:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3785:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3785:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3796:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3796:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3781:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3781:3:11"
																				},
																				"nativeSrc": "3781:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3781:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3805:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3805:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3760:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3760:20:11"
																		},
																		"nativeSrc": "3760:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3760:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3750:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3750:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3833:118:11",
															"nodeType": "YulBlock",
															"src": "3833:118:11",
															"statements": [
																{
																	"nativeSrc": "3848:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3848:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3862:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3862:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3852:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3852:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3878:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3878:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3913:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3913:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3924:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3924:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3909:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3909:3:11"
																				},
																				"nativeSrc": "3909:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3909:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3933:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3933:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3888:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3888:20:11"
																		},
																		"nativeSrc": "3888:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3888:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3878:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3878:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3484:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3529:9:11",
														"nodeType": "YulTypedName",
														"src": "3529:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3540:7:11",
														"nodeType": "YulTypedName",
														"src": "3540:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3552:6:11",
														"nodeType": "YulTypedName",
														"src": "3552:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3560:6:11",
														"nodeType": "YulTypedName",
														"src": "3560:6:11",
														"type": ""
													}
												],
												"src": "3484:474:11"
											},
											{
												"body": {
													"nativeSrc": "3992:152:11",
													"nodeType": "YulBlock",
													"src": "3992:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4009:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4009:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4012:77:11",
																		"nodeType": "YulLiteral",
																		"src": "4012:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4002:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4002:6:11"
																},
																"nativeSrc": "4002:88:11",
																"nodeType": "YulFunctionCall",
																"src": "4002:88:11"
															},
															"nativeSrc": "4002:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "4002:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4106:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4106:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4109:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4109:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4099:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4099:6:11"
																},
																"nativeSrc": "4099:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4099:15:11"
															},
															"nativeSrc": "4099:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4099:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4130:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4130:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4133:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4133:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4123:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:11"
																},
																"nativeSrc": "4123:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4123:15:11"
															},
															"nativeSrc": "4123:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4123:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3964:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "3964:180:11"
											},
											{
												"body": {
													"nativeSrc": "4195:149:11",
													"nodeType": "YulBlock",
													"src": "4195:149:11",
													"statements": [
														{
															"nativeSrc": "4205:25:11",
															"nodeType": "YulAssignment",
															"src": "4205:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4228:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4228:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4210:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4210:17:11"
																},
																"nativeSrc": "4210:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4210:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4205:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "4205:1:11"
																}
															]
														},
														{
															"nativeSrc": "4239:25:11",
															"nodeType": "YulAssignment",
															"src": "4239:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4262:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4262:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4244:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4244:17:11"
																},
																"nativeSrc": "4244:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4244:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4239:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "4239:1:11"
																}
															]
														},
														{
															"nativeSrc": "4273:17:11",
															"nodeType": "YulAssignment",
															"src": "4273:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4285:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4285:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4288:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4288:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4281:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4281:3:11"
																},
																"nativeSrc": "4281:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4281:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4273:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4273:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4315:22:11",
																"nodeType": "YulBlock",
																"src": "4315:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4317:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4317:16:11"
																			},
																			"nativeSrc": "4317:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4317:18:11"
																		},
																		"nativeSrc": "4317:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4317:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4306:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4306:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4312:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4312:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4303:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4303:2:11"
																},
																"nativeSrc": "4303:11:11",
																"nodeType": "YulFunctionCall",
																"src": "4303:11:11"
															},
															"nativeSrc": "4300:37:11",
															"nodeType": "YulIf",
															"src": "4300:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4150:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4181:1:11",
														"nodeType": "YulTypedName",
														"src": "4181:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4184:1:11",
														"nodeType": "YulTypedName",
														"src": "4184:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4190:4:11",
														"nodeType": "YulTypedName",
														"src": "4190:4:11",
														"type": ""
													}
												],
												"src": "4150:194:11"
											},
											{
												"body": {
													"nativeSrc": "4398:362:11",
													"nodeType": "YulBlock",
													"src": "4398:362:11",
													"statements": [
														{
															"nativeSrc": "4408:25:11",
															"nodeType": "YulAssignment",
															"src": "4408:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4431:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4431:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4413:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4413:17:11"
																},
																"nativeSrc": "4413:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4413:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4408:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "4408:1:11"
																}
															]
														},
														{
															"nativeSrc": "4442:25:11",
															"nodeType": "YulAssignment",
															"src": "4442:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4465:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4465:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4447:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4447:17:11"
																},
																"nativeSrc": "4447:20:11",
																"nodeType": "YulFunctionCall",
																"src": "4447:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4442:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "4442:1:11"
																}
															]
														},
														{
															"nativeSrc": "4476:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4476:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4499:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4499:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4502:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "4502:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4495:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4495:3:11"
																},
																"nativeSrc": "4495:9:11",
																"nodeType": "YulFunctionCall",
																"src": "4495:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4480:11:11",
																	"nodeType": "YulTypedName",
																	"src": "4480:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4513:41:11",
															"nodeType": "YulAssignment",
															"src": "4513:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4542:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "4542:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4524:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4524:17:11"
																},
																"nativeSrc": "4524:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4524:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4513:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4513:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4731:22:11",
																"nodeType": "YulBlock",
																"src": "4731:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4733:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4733:16:11"
																			},
																			"nativeSrc": "4733:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4733:18:11"
																		},
																		"nativeSrc": "4733:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4733:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4664:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "4664:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4657:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "4657:6:11"
																				},
																				"nativeSrc": "4657:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4657:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4687:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "4687:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4694:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "4694:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4703:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "4703:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4690:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4690:3:11"
																						},
																						"nativeSrc": "4690:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "4690:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4684:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "4684:2:11"
																				},
																				"nativeSrc": "4684:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4684:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4637:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4637:2:11"
																		},
																		"nativeSrc": "4637:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4637:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4617:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4617:6:11"
																},
																"nativeSrc": "4617:113:11",
																"nodeType": "YulFunctionCall",
																"src": "4617:113:11"
															},
															"nativeSrc": "4614:139:11",
															"nodeType": "YulIf",
															"src": "4614:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4350:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4381:1:11",
														"nodeType": "YulTypedName",
														"src": "4381:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4384:1:11",
														"nodeType": "YulTypedName",
														"src": "4384:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4390:7:11",
														"nodeType": "YulTypedName",
														"src": "4390:7:11",
														"type": ""
													}
												],
												"src": "4350:410:11"
											},
											{
												"body": {
													"nativeSrc": "4794:152:11",
													"nodeType": "YulBlock",
													"src": "4794:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4811:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4811:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4814:77:11",
																		"nodeType": "YulLiteral",
																		"src": "4814:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4804:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4804:6:11"
																},
																"nativeSrc": "4804:88:11",
																"nodeType": "YulFunctionCall",
																"src": "4804:88:11"
															},
															"nativeSrc": "4804:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "4804:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4908:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4908:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4911:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4911:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4901:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4901:6:11"
																},
																"nativeSrc": "4901:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4901:15:11"
															},
															"nativeSrc": "4901:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4901:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4932:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4932:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4935:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4935:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4925:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:11"
																},
																"nativeSrc": "4925:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4925:15:11"
															},
															"nativeSrc": "4925:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4925:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4766:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "4766:180:11"
											},
											{
												"body": {
													"nativeSrc": "4994:143:11",
													"nodeType": "YulBlock",
													"src": "4994:143:11",
													"statements": [
														{
															"nativeSrc": "5004:25:11",
															"nodeType": "YulAssignment",
															"src": "5004:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5027:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5027:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5009:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5009:17:11"
																},
																"nativeSrc": "5009:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5009:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5004:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5004:1:11"
																}
															]
														},
														{
															"nativeSrc": "5038:25:11",
															"nodeType": "YulAssignment",
															"src": "5038:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5061:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5061:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5043:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5043:17:11"
																},
																"nativeSrc": "5043:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5043:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5038:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5038:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5085:22:11",
																"nodeType": "YulBlock",
																"src": "5085:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5087:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5087:16:11"
																			},
																			"nativeSrc": "5087:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5087:18:11"
																		},
																		"nativeSrc": "5087:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5087:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5082:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5082:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5075:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5075:6:11"
																},
																"nativeSrc": "5075:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5075:9:11"
															},
															"nativeSrc": "5072:35:11",
															"nodeType": "YulIf",
															"src": "5072:35:11"
														},
														{
															"nativeSrc": "5117:14:11",
															"nodeType": "YulAssignment",
															"src": "5117:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5126:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5126:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5129:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5129:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5122:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5122:3:11"
																},
																"nativeSrc": "5122:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5122:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5117:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5117:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "4952:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4983:1:11",
														"nodeType": "YulTypedName",
														"src": "4983:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4986:1:11",
														"nodeType": "YulTypedName",
														"src": "4986:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "4992:1:11",
														"nodeType": "YulTypedName",
														"src": "4992:1:11",
														"type": ""
													}
												],
												"src": "4952:185:11"
											},
											{
												"body": {
													"nativeSrc": "5187:147:11",
													"nodeType": "YulBlock",
													"src": "5187:147:11",
													"statements": [
														{
															"nativeSrc": "5197:25:11",
															"nodeType": "YulAssignment",
															"src": "5197:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5220:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5220:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5202:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5202:17:11"
																},
																"nativeSrc": "5202:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5202:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5197:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5197:1:11"
																}
															]
														},
														{
															"nativeSrc": "5231:25:11",
															"nodeType": "YulAssignment",
															"src": "5231:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5254:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5254:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5236:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5236:17:11"
																},
																"nativeSrc": "5236:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5236:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5231:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "5231:1:11"
																}
															]
														},
														{
															"nativeSrc": "5265:16:11",
															"nodeType": "YulAssignment",
															"src": "5265:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5276:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5276:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5279:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5279:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5272:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5272:3:11"
																},
																"nativeSrc": "5272:9:11",
																"nodeType": "YulFunctionCall",
																"src": "5272:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5265:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5305:22:11",
																"nodeType": "YulBlock",
																"src": "5305:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5307:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5307:16:11"
																			},
																			"nativeSrc": "5307:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5307:18:11"
																		},
																		"nativeSrc": "5307:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5307:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5297:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5297:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5300:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5300:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5294:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5294:2:11"
																},
																"nativeSrc": "5294:10:11",
																"nodeType": "YulFunctionCall",
																"src": "5294:10:11"
															},
															"nativeSrc": "5291:36:11",
															"nodeType": "YulIf",
															"src": "5291:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5143:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5174:1:11",
														"nodeType": "YulTypedName",
														"src": "5174:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5177:1:11",
														"nodeType": "YulTypedName",
														"src": "5177:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5183:3:11",
														"nodeType": "YulTypedName",
														"src": "5183:3:11",
														"type": ""
													}
												],
												"src": "5143:191:11"
											},
											{
												"body": {
													"nativeSrc": "5436:73:11",
													"nodeType": "YulBlock",
													"src": "5436:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5453:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5453:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5458:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5446:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5446:6:11"
																},
																"nativeSrc": "5446:19:11",
																"nodeType": "YulFunctionCall",
																"src": "5446:19:11"
															},
															"nativeSrc": "5446:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "5446:19:11"
														},
														{
															"nativeSrc": "5474:29:11",
															"nodeType": "YulAssignment",
															"src": "5474:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5493:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5493:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5498:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5498:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5489:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5489:3:11"
																},
																"nativeSrc": "5489:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5489:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5474:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "5474:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5340:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5408:3:11",
														"nodeType": "YulTypedName",
														"src": "5408:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5413:6:11",
														"nodeType": "YulTypedName",
														"src": "5413:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5424:11:11",
														"nodeType": "YulTypedName",
														"src": "5424:11:11",
														"type": ""
													}
												],
												"src": "5340:169:11"
											},
											{
												"body": {
													"nativeSrc": "5621:60:11",
													"nodeType": "YulBlock",
													"src": "5621:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5643:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5643:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5651:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5651:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5639:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5639:3:11"
																		},
																		"nativeSrc": "5639:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5639:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f7420756e7374616b652030",
																		"kind": "string",
																		"nativeSrc": "5655:18:11",
																		"nodeType": "YulLiteral",
																		"src": "5655:18:11",
																		"type": "",
																		"value": "Cannot unstake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5632:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5632:6:11"
																},
																"nativeSrc": "5632:42:11",
																"nodeType": "YulFunctionCall",
																"src": "5632:42:11"
															},
															"nativeSrc": "5632:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "5632:42:11"
														}
													]
												},
												"name": "store_literal_in_memory_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d",
												"nativeSrc": "5515:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5613:6:11",
														"nodeType": "YulTypedName",
														"src": "5613:6:11",
														"type": ""
													}
												],
												"src": "5515:166:11"
											},
											{
												"body": {
													"nativeSrc": "5833:220:11",
													"nodeType": "YulBlock",
													"src": "5833:220:11",
													"statements": [
														{
															"nativeSrc": "5843:74:11",
															"nodeType": "YulAssignment",
															"src": "5843:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5909:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5909:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5914:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5914:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5850:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "5850:58:11"
																},
																"nativeSrc": "5850:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5850:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5843:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6015:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6015:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d",
																	"nativeSrc": "5926:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "5926:88:11"
																},
																"nativeSrc": "5926:93:11",
																"nodeType": "YulFunctionCall",
																"src": "5926:93:11"
															},
															"nativeSrc": "5926:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "5926:93:11"
														},
														{
															"nativeSrc": "6028:19:11",
															"nodeType": "YulAssignment",
															"src": "6028:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6039:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6039:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6044:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6044:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6035:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6035:3:11"
																},
																"nativeSrc": "6035:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6035:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6028:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6028:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5687:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5821:3:11",
														"nodeType": "YulTypedName",
														"src": "5821:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5829:3:11",
														"nodeType": "YulTypedName",
														"src": "5829:3:11",
														"type": ""
													}
												],
												"src": "5687:366:11"
											},
											{
												"body": {
													"nativeSrc": "6230:248:11",
													"nodeType": "YulBlock",
													"src": "6230:248:11",
													"statements": [
														{
															"nativeSrc": "6240:26:11",
															"nodeType": "YulAssignment",
															"src": "6240:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6252:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6252:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6263:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6263:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6248:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6248:3:11"
																},
																"nativeSrc": "6248:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6248:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6240:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6240:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6287:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6287:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6298:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6298:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6283:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6283:3:11"
																		},
																		"nativeSrc": "6283:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6283:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6306:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "6306:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6312:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6302:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:11"
																		},
																		"nativeSrc": "6302:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6302:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6276:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6276:6:11"
																},
																"nativeSrc": "6276:47:11",
																"nodeType": "YulFunctionCall",
																"src": "6276:47:11"
															},
															"nativeSrc": "6276:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "6276:47:11"
														},
														{
															"nativeSrc": "6332:139:11",
															"nodeType": "YulAssignment",
															"src": "6332:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6466:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6466:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6340:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "6340:124:11"
																},
																"nativeSrc": "6340:131:11",
																"nodeType": "YulFunctionCall",
																"src": "6340:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6332:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6332:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6059:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6210:9:11",
														"nodeType": "YulTypedName",
														"src": "6210:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6225:4:11",
														"nodeType": "YulTypedName",
														"src": "6225:4:11",
														"type": ""
													}
												],
												"src": "6059:419:11"
											},
											{
												"body": {
													"nativeSrc": "6590:75:11",
													"nodeType": "YulBlock",
													"src": "6590:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6612:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6612:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6620:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6620:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6608:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:11"
																		},
																		"nativeSrc": "6608:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6608:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f7420756e7374616b65206d6f7265207468616e207374616b6564",
																		"kind": "string",
																		"nativeSrc": "6624:33:11",
																		"nodeType": "YulLiteral",
																		"src": "6624:33:11",
																		"type": "",
																		"value": "Cannot unstake more than staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6601:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6601:6:11"
																},
																"nativeSrc": "6601:57:11",
																"nodeType": "YulFunctionCall",
																"src": "6601:57:11"
															},
															"nativeSrc": "6601:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "6601:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac",
												"nativeSrc": "6484:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6582:6:11",
														"nodeType": "YulTypedName",
														"src": "6582:6:11",
														"type": ""
													}
												],
												"src": "6484:181:11"
											},
											{
												"body": {
													"nativeSrc": "6817:220:11",
													"nodeType": "YulBlock",
													"src": "6817:220:11",
													"statements": [
														{
															"nativeSrc": "6827:74:11",
															"nodeType": "YulAssignment",
															"src": "6827:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6893:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6893:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6898:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6898:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6834:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "6834:58:11"
																},
																"nativeSrc": "6834:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6834:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6827:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6827:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6999:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6999:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac",
																	"nativeSrc": "6910:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "6910:88:11"
																},
																"nativeSrc": "6910:93:11",
																"nodeType": "YulFunctionCall",
																"src": "6910:93:11"
															},
															"nativeSrc": "6910:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "6910:93:11"
														},
														{
															"nativeSrc": "7012:19:11",
															"nodeType": "YulAssignment",
															"src": "7012:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7023:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7023:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7028:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7028:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7019:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7019:3:11"
																},
																"nativeSrc": "7019:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7019:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7012:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7012:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6671:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6805:3:11",
														"nodeType": "YulTypedName",
														"src": "6805:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6813:3:11",
														"nodeType": "YulTypedName",
														"src": "6813:3:11",
														"type": ""
													}
												],
												"src": "6671:366:11"
											},
											{
												"body": {
													"nativeSrc": "7214:248:11",
													"nodeType": "YulBlock",
													"src": "7214:248:11",
													"statements": [
														{
															"nativeSrc": "7224:26:11",
															"nodeType": "YulAssignment",
															"src": "7224:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7236:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7236:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7247:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7247:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7232:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7232:3:11"
																},
																"nativeSrc": "7232:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7232:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7224:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7224:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7271:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7271:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7282:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7282:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7267:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7267:3:11"
																		},
																		"nativeSrc": "7267:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7267:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7290:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7290:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7296:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7296:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7286:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7286:3:11"
																		},
																		"nativeSrc": "7286:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7286:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7260:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7260:6:11"
																},
																"nativeSrc": "7260:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7260:47:11"
															},
															"nativeSrc": "7260:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7260:47:11"
														},
														{
															"nativeSrc": "7316:139:11",
															"nodeType": "YulAssignment",
															"src": "7316:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7450:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7450:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7324:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "7324:124:11"
																},
																"nativeSrc": "7324:131:11",
																"nodeType": "YulFunctionCall",
																"src": "7324:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7316:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7316:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7043:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7194:9:11",
														"nodeType": "YulTypedName",
														"src": "7194:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7209:4:11",
														"nodeType": "YulTypedName",
														"src": "7209:4:11",
														"type": ""
													}
												],
												"src": "7043:419:11"
											},
											{
												"body": {
													"nativeSrc": "7574:63:11",
													"nodeType": "YulBlock",
													"src": "7574:63:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7596:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7596:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7604:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7604:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7592:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7592:3:11"
																		},
																		"nativeSrc": "7592:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7592:14:11"
																	},
																	{
																		"hexValue": "4e6f207265776172647320746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "7608:21:11",
																		"nodeType": "YulLiteral",
																		"src": "7608:21:11",
																		"type": "",
																		"value": "No rewards to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7585:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7585:6:11"
																},
																"nativeSrc": "7585:45:11",
																"nodeType": "YulFunctionCall",
																"src": "7585:45:11"
															},
															"nativeSrc": "7585:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "7585:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
												"nativeSrc": "7468:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7566:6:11",
														"nodeType": "YulTypedName",
														"src": "7566:6:11",
														"type": ""
													}
												],
												"src": "7468:169:11"
											},
											{
												"body": {
													"nativeSrc": "7789:220:11",
													"nodeType": "YulBlock",
													"src": "7789:220:11",
													"statements": [
														{
															"nativeSrc": "7799:74:11",
															"nodeType": "YulAssignment",
															"src": "7799:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7865:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7865:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7870:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7870:2:11",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7806:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "7806:58:11"
																},
																"nativeSrc": "7806:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7806:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7799:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7799:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7971:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7971:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																	"nativeSrc": "7882:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "7882:88:11"
																},
																"nativeSrc": "7882:93:11",
																"nodeType": "YulFunctionCall",
																"src": "7882:93:11"
															},
															"nativeSrc": "7882:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "7882:93:11"
														},
														{
															"nativeSrc": "7984:19:11",
															"nodeType": "YulAssignment",
															"src": "7984:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7995:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7995:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8000:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8000:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7991:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7991:3:11"
																},
																"nativeSrc": "7991:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7991:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7984:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7984:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7643:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7777:3:11",
														"nodeType": "YulTypedName",
														"src": "7777:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7785:3:11",
														"nodeType": "YulTypedName",
														"src": "7785:3:11",
														"type": ""
													}
												],
												"src": "7643:366:11"
											},
											{
												"body": {
													"nativeSrc": "8186:248:11",
													"nodeType": "YulBlock",
													"src": "8186:248:11",
													"statements": [
														{
															"nativeSrc": "8196:26:11",
															"nodeType": "YulAssignment",
															"src": "8196:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8208:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8208:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8219:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8219:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8204:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8204:3:11"
																},
																"nativeSrc": "8204:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8204:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8196:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8196:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8243:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8243:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8254:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8254:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8239:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8239:3:11"
																		},
																		"nativeSrc": "8239:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8239:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8262:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8262:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8268:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8268:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8258:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8258:3:11"
																		},
																		"nativeSrc": "8258:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8258:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8232:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8232:6:11"
																},
																"nativeSrc": "8232:47:11",
																"nodeType": "YulFunctionCall",
																"src": "8232:47:11"
															},
															"nativeSrc": "8232:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "8232:47:11"
														},
														{
															"nativeSrc": "8288:139:11",
															"nodeType": "YulAssignment",
															"src": "8288:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8422:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8422:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8296:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "8296:124:11"
																},
																"nativeSrc": "8296:131:11",
																"nodeType": "YulFunctionCall",
																"src": "8296:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8288:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8288:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8015:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8166:9:11",
														"nodeType": "YulTypedName",
														"src": "8166:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8181:4:11",
														"nodeType": "YulTypedName",
														"src": "8181:4:11",
														"type": ""
													}
												],
												"src": "8015:419:11"
											},
											{
												"body": {
													"nativeSrc": "8546:58:11",
													"nodeType": "YulBlock",
													"src": "8546:58:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8568:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8568:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8576:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8576:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8564:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8564:3:11"
																		},
																		"nativeSrc": "8564:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8564:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nativeSrc": "8580:16:11",
																		"nodeType": "YulLiteral",
																		"src": "8580:16:11",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8557:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8557:6:11"
																},
																"nativeSrc": "8557:40:11",
																"nodeType": "YulFunctionCall",
																"src": "8557:40:11"
															},
															"nativeSrc": "8557:40:11",
															"nodeType": "YulExpressionStatement",
															"src": "8557:40:11"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nativeSrc": "8440:164:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8538:6:11",
														"nodeType": "YulTypedName",
														"src": "8538:6:11",
														"type": ""
													}
												],
												"src": "8440:164:11"
											},
											{
												"body": {
													"nativeSrc": "8756:220:11",
													"nodeType": "YulBlock",
													"src": "8756:220:11",
													"statements": [
														{
															"nativeSrc": "8766:74:11",
															"nodeType": "YulAssignment",
															"src": "8766:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8832:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8832:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8837:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8837:2:11",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8773:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8773:58:11"
																},
																"nativeSrc": "8773:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8773:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8766:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8766:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8938:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8938:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nativeSrc": "8849:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8849:88:11"
																},
																"nativeSrc": "8849:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8849:93:11"
															},
															"nativeSrc": "8849:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8849:93:11"
														},
														{
															"nativeSrc": "8951:19:11",
															"nodeType": "YulAssignment",
															"src": "8951:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8962:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8962:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8967:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8967:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8958:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8958:3:11"
																},
																"nativeSrc": "8958:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8958:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8951:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8951:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8610:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8744:3:11",
														"nodeType": "YulTypedName",
														"src": "8744:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8752:3:11",
														"nodeType": "YulTypedName",
														"src": "8752:3:11",
														"type": ""
													}
												],
												"src": "8610:366:11"
											},
											{
												"body": {
													"nativeSrc": "9153:248:11",
													"nodeType": "YulBlock",
													"src": "9153:248:11",
													"statements": [
														{
															"nativeSrc": "9163:26:11",
															"nodeType": "YulAssignment",
															"src": "9163:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9175:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9175:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9186:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9186:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9171:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9171:3:11"
																},
																"nativeSrc": "9171:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9171:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9163:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9163:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9210:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9210:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9221:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9221:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9206:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9206:3:11"
																		},
																		"nativeSrc": "9206:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9206:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9229:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9229:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9235:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9235:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9225:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9225:3:11"
																		},
																		"nativeSrc": "9225:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9225:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9199:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9199:6:11"
																},
																"nativeSrc": "9199:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9199:47:11"
															},
															"nativeSrc": "9199:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9199:47:11"
														},
														{
															"nativeSrc": "9255:139:11",
															"nodeType": "YulAssignment",
															"src": "9255:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9389:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9389:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9263:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9263:124:11"
																},
																"nativeSrc": "9263:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9263:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9255:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9255:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8982:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9133:9:11",
														"nodeType": "YulTypedName",
														"src": "9133:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9148:4:11",
														"nodeType": "YulTypedName",
														"src": "9148:4:11",
														"type": ""
													}
												],
												"src": "8982:419:11"
											},
											{
												"body": {
													"nativeSrc": "9513:60:11",
													"nodeType": "YulBlock",
													"src": "9513:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9535:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9535:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9543:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9543:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9531:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9531:3:11"
																		},
																		"nativeSrc": "9531:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9531:14:11"
																	},
																	{
																		"hexValue": "43616e6e6f74206465706f7369742030",
																		"kind": "string",
																		"nativeSrc": "9547:18:11",
																		"nodeType": "YulLiteral",
																		"src": "9547:18:11",
																		"type": "",
																		"value": "Cannot deposit 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9524:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9524:6:11"
																},
																"nativeSrc": "9524:42:11",
																"nodeType": "YulFunctionCall",
																"src": "9524:42:11"
															},
															"nativeSrc": "9524:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "9524:42:11"
														}
													]
												},
												"name": "store_literal_in_memory_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866",
												"nativeSrc": "9407:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9505:6:11",
														"nodeType": "YulTypedName",
														"src": "9505:6:11",
														"type": ""
													}
												],
												"src": "9407:166:11"
											},
											{
												"body": {
													"nativeSrc": "9725:220:11",
													"nodeType": "YulBlock",
													"src": "9725:220:11",
													"statements": [
														{
															"nativeSrc": "9735:74:11",
															"nodeType": "YulAssignment",
															"src": "9735:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9801:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9801:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9806:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9806:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9742:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "9742:58:11"
																},
																"nativeSrc": "9742:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9742:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9735:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9735:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9907:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9907:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866",
																	"nativeSrc": "9818:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9818:88:11"
																},
																"nativeSrc": "9818:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9818:93:11"
															},
															"nativeSrc": "9818:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9818:93:11"
														},
														{
															"nativeSrc": "9920:19:11",
															"nodeType": "YulAssignment",
															"src": "9920:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9931:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9931:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9936:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9936:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9927:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9927:3:11"
																},
																"nativeSrc": "9927:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9927:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9920:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9920:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9579:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9713:3:11",
														"nodeType": "YulTypedName",
														"src": "9713:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9721:3:11",
														"nodeType": "YulTypedName",
														"src": "9721:3:11",
														"type": ""
													}
												],
												"src": "9579:366:11"
											},
											{
												"body": {
													"nativeSrc": "10122:248:11",
													"nodeType": "YulBlock",
													"src": "10122:248:11",
													"statements": [
														{
															"nativeSrc": "10132:26:11",
															"nodeType": "YulAssignment",
															"src": "10132:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10144:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10144:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10155:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10155:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10140:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10140:3:11"
																},
																"nativeSrc": "10140:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10140:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10132:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10132:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10179:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10179:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10190:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10190:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10175:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10175:3:11"
																		},
																		"nativeSrc": "10175:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10175:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10198:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10198:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10204:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10204:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10194:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10194:3:11"
																		},
																		"nativeSrc": "10194:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10194:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10168:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10168:6:11"
																},
																"nativeSrc": "10168:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10168:47:11"
															},
															"nativeSrc": "10168:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10168:47:11"
														},
														{
															"nativeSrc": "10224:139:11",
															"nodeType": "YulAssignment",
															"src": "10224:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10358:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10358:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10232:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "10232:124:11"
																},
																"nativeSrc": "10232:131:11",
																"nodeType": "YulFunctionCall",
																"src": "10232:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10224:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10224:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9951:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10102:9:11",
														"nodeType": "YulTypedName",
														"src": "10102:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10117:4:11",
														"nodeType": "YulTypedName",
														"src": "10117:4:11",
														"type": ""
													}
												],
												"src": "9951:419:11"
											},
											{
												"body": {
													"nativeSrc": "10502:206:11",
													"nodeType": "YulBlock",
													"src": "10502:206:11",
													"statements": [
														{
															"nativeSrc": "10512:26:11",
															"nodeType": "YulAssignment",
															"src": "10512:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10524:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10524:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10535:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10520:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10520:3:11"
																},
																"nativeSrc": "10520:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10520:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10512:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10512:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10592:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10592:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10605:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10605:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10616:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10616:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10601:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10601:3:11"
																		},
																		"nativeSrc": "10601:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10601:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10548:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10548:43:11"
																},
																"nativeSrc": "10548:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10548:71:11"
															},
															"nativeSrc": "10548:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10548:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10673:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10673:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10686:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10686:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10697:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10697:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10682:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10682:3:11"
																		},
																		"nativeSrc": "10682:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10682:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10629:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10629:43:11"
																},
																"nativeSrc": "10629:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10629:72:11"
															},
															"nativeSrc": "10629:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10629:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10376:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10466:9:11",
														"nodeType": "YulTypedName",
														"src": "10466:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10478:6:11",
														"nodeType": "YulTypedName",
														"src": "10478:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10486:6:11",
														"nodeType": "YulTypedName",
														"src": "10486:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10497:4:11",
														"nodeType": "YulTypedName",
														"src": "10497:4:11",
														"type": ""
													}
												],
												"src": "10376:332:11"
											},
											{
												"body": {
													"nativeSrc": "10868:288:11",
													"nodeType": "YulBlock",
													"src": "10868:288:11",
													"statements": [
														{
															"nativeSrc": "10878:26:11",
															"nodeType": "YulAssignment",
															"src": "10878:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10890:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10890:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10901:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10901:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10886:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10886:3:11"
																},
																"nativeSrc": "10886:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10886:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10878:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10878:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10958:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10958:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10971:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10971:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10982:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10982:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10967:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10967:3:11"
																		},
																		"nativeSrc": "10967:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10967:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10914:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10914:43:11"
																},
																"nativeSrc": "10914:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10914:71:11"
															},
															"nativeSrc": "10914:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10914:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11039:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11039:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11052:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11052:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11063:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11063:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11048:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11048:3:11"
																		},
																		"nativeSrc": "11048:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11048:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10995:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10995:43:11"
																},
																"nativeSrc": "10995:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10995:72:11"
															},
															"nativeSrc": "10995:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10995:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11121:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11121:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11134:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11134:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11145:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11145:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11130:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11130:3:11"
																		},
																		"nativeSrc": "11130:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11130:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11077:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11077:43:11"
																},
																"nativeSrc": "11077:72:11",
																"nodeType": "YulFunctionCall",
																"src": "11077:72:11"
															},
															"nativeSrc": "11077:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "11077:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10714:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10824:9:11",
														"nodeType": "YulTypedName",
														"src": "10824:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10836:6:11",
														"nodeType": "YulTypedName",
														"src": "10836:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10844:6:11",
														"nodeType": "YulTypedName",
														"src": "10844:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10852:6:11",
														"nodeType": "YulTypedName",
														"src": "10852:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10863:4:11",
														"nodeType": "YulTypedName",
														"src": "10863:4:11",
														"type": ""
													}
												],
												"src": "10714:442:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$315_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$315_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$315__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$315_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot unstake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot unstake more than staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards to claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot deposit 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610113575f3560e01c80638b876347116100a0578063c8f33c911161006f578063c8f33c91146102b7578063cd3daf9d146102d5578063df136d65146102f3578063f2fde38b14610311578063f7c618c11461032d57610113565b80638b876347146102315780638da5cb5b14610261578063a694fc3a1461027f578063bdd071fb1461029b57610113565b8063372500ab116100e7578063372500ab146101c3578063715018a6146101cd57806372f702f3146101d75780637b0a47ee146101f5578063817b1cd21461021357610113565b80628cc262146101175780630700037d1461014757806316934fc4146101775780632e17de78146101a7575b5f5ffd5b610131600480360381019061012c919061101e565b61034b565b60405161013e9190611061565b60405180910390f35b610161600480360381019061015c919061101e565b610446565b60405161016e9190611061565b60405180910390f35b610191600480360381019061018c919061101e565b61045b565b60405161019e9190611061565b60405180910390f35b6101c160048036038101906101bc91906110a4565b610470565b005b6101cb6106c5565b005b6101d56108b2565b005b6101df6108c5565b6040516101ec919061112a565b60405180910390f35b6101fd6108ea565b60405161020a9190611061565b60405180910390f35b61021b6108f0565b6040516102289190611061565b60405180910390f35b61024b6004803603810190610246919061101e565b6108f6565b6040516102589190611061565b60405180910390f35b61026961090b565b6040516102769190611152565b60405180910390f35b610299600480360381019061029491906110a4565b610932565b005b6102b560048036038101906102b0919061116b565b610b09565b005b6102bf610bbe565b6040516102cc9190611061565b60405180910390f35b6102dd610bc4565b6040516102ea9190611061565b60405180910390f35b6102fb610c26565b6040516103089190611061565b60405180910390f35b61032b6004803603810190610326919061101e565b610c2c565b005b610335610cb0565b604051610342919061112a565b60405180910390f35b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054670de0b6b3a764000060085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546103d9610bc4565b6103e391906111d6565b60075f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461042b9190611209565b6104359190611277565b61043f91906112a7565b9050919050565b6009602052805f5260405f205f915090505481565b6007602052805f5260405f205f915090505481565b33610479610bc4565b600681905550426005819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610548576104c28161034b565b60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060065460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f821161058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190611334565b60405180910390fd5b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054101561060a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106019061139c565b60405180910390fd5b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461065691906111d6565b925050819055508160035f82825461066e91906111d6565b925050819055506106c1338360015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cd59092919063ffffffff16565b5050565b336106ce610bc4565b600681905550426005819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461079d576107178161034b565b60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060065460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081790611404565b60405180910390fd5b5f60095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506108ae338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610cd59092919063ffffffff16565b5050565b6108ba610d54565b6108c35f610ddb565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b60035481565b6008602052805f5260405f205f915090505481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b3361093b610bc4565b600681905550426005819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a0a576109848161034b565b60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555060065460085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505b5f8211610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a439061146c565b60405180910390fd5b610a9a33308460015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e9c909392919063ffffffff16565b8160075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ae691906112a7565b925050819055508160035f828254610afe91906112a7565b925050819055505050565b610b11610d54565b5f8211610b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4a906114d4565b60405180910390fd5b610ba133308460025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e9c909392919063ffffffff16565b8082610bad9190611277565b600481905550426005819055505050565b60055481565b5f5f60035403610bd8576006549050610c23565b600354670de0b6b3a764000060045460055442610bf591906111d6565b610bff9190611209565b610c099190611209565b610c139190611277565b600654610c2091906112a7565b90505b90565b60065481565b610c34610d54565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ca4575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c9b9190611152565b60405180910390fd5b610cad81610ddb565b50565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610d4f838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610d089291906114f2565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f1e565b505050565b610d5c610fb9565b73ffffffffffffffffffffffffffffffffffffffff16610d7a61090b565b73ffffffffffffffffffffffffffffffffffffffff1614610dd957610d9d610fb9565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610dd09190611152565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f18848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610ed193929190611519565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f1e565b50505050565b5f5f60205f8451602086015f885af180610f3d576040513d5f823e3d81fd5b3d92505f519150505f8214610f56576001811415610f71565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610fb357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610faa9190611152565b60405180910390fd5b50505050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fed82610fc4565b9050919050565b610ffd81610fe3565b8114611007575f5ffd5b50565b5f8135905061101881610ff4565b92915050565b5f6020828403121561103357611032610fc0565b5b5f6110408482850161100a565b91505092915050565b5f819050919050565b61105b81611049565b82525050565b5f6020820190506110745f830184611052565b92915050565b61108381611049565b811461108d575f5ffd5b50565b5f8135905061109e8161107a565b92915050565b5f602082840312156110b9576110b8610fc0565b5b5f6110c684828501611090565b91505092915050565b5f819050919050565b5f6110f26110ed6110e884610fc4565b6110cf565b610fc4565b9050919050565b5f611103826110d8565b9050919050565b5f611114826110f9565b9050919050565b6111248161110a565b82525050565b5f60208201905061113d5f83018461111b565b92915050565b61114c81610fe3565b82525050565b5f6020820190506111655f830184611143565b92915050565b5f5f6040838503121561118157611180610fc0565b5b5f61118e85828601611090565b925050602061119f85828601611090565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111e082611049565b91506111eb83611049565b9250828203905081811115611203576112026111a9565b5b92915050565b5f61121382611049565b915061121e83611049565b925082820261122c81611049565b91508282048414831517611243576112426111a9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61128182611049565b915061128c83611049565b92508261129c5761129b61124a565b5b828204905092915050565b5f6112b182611049565b91506112bc83611049565b92508282019050808211156112d4576112d36111a9565b5b92915050565b5f82825260208201905092915050565b7f43616e6e6f7420756e7374616b652030000000000000000000000000000000005f82015250565b5f61131e6010836112da565b9150611329826112ea565b602082019050919050565b5f6020820190508181035f83015261134b81611312565b9050919050565b7f43616e6e6f7420756e7374616b65206d6f7265207468616e207374616b6564005f82015250565b5f611386601f836112da565b915061139182611352565b602082019050919050565b5f6020820190508181035f8301526113b38161137a565b9050919050565b7f4e6f207265776172647320746f20636c61696d000000000000000000000000005f82015250565b5f6113ee6013836112da565b91506113f9826113ba565b602082019050919050565b5f6020820190508181035f83015261141b816113e2565b9050919050565b7f43616e6e6f74207374616b6520300000000000000000000000000000000000005f82015250565b5f611456600e836112da565b915061146182611422565b602082019050919050565b5f6020820190508181035f8301526114838161144a565b9050919050565b7f43616e6e6f74206465706f7369742030000000000000000000000000000000005f82015250565b5f6114be6010836112da565b91506114c98261148a565b602082019050919050565b5f6020820190508181035f8301526114eb816114b2565b9050919050565b5f6040820190506115055f830185611143565b6115126020830184611052565b9392505050565b5f60608201905061152c5f830186611143565b6115396020830185611143565b6115466040830184611052565b94935050505056fea2646970667358221220f3aa20be0c33c1706db0f01b50384d4e0672f5c527caa9598924609415fd217264736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8B876347 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xC8F33C91 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x32D JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x8B876347 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xBDD071FB EQ PUSH2 0x29B JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x372500AB GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x213 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x147 JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13E SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15C SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x191 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BC SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CB PUSH2 0x6C5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH2 0x8B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DF PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FD PUSH2 0x8EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21B PUSH2 0x8F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x228 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x269 PUSH2 0x90B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x294 SWAP2 SWAP1 PUSH2 0x10A4 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH2 0xB09 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DD PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FB PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0x1061 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH2 0xC2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x335 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x3D9 PUSH2 0xBC4 JUMP JUMPDEST PUSH2 0x3E3 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST CALLER PUSH2 0x479 PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x548 JUMPI PUSH2 0x4C2 DUP2 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x58A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x581 SWAP1 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x6C1 CALLER DUP4 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCD5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0x6CE PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x79D JUMPI PUSH2 0x717 DUP2 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x820 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x817 SWAP1 PUSH2 0x1404 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8AE CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xCD5 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8BA PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x8C3 PUSH0 PUSH2 0xDDB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH2 0x93B PUSH2 0xBC4 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA0A JUMPI PUSH2 0x984 DUP2 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 DUP3 GT PUSH2 0xA4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA43 SWAP1 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA9A CALLER ADDRESS DUP5 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAE6 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAFE SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0xB11 PUSH2 0xD54 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xB53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4A SWAP1 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA1 CALLER ADDRESS DUP5 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE9C SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 DUP3 PUSH2 0xBAD SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 SLOAD SUB PUSH2 0xBD8 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x4 SLOAD PUSH1 0x5 SLOAD TIMESTAMP PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0xC13 SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xC20 SWAP2 SWAP1 PUSH2 0x12A7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC34 PUSH2 0xD54 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCA4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC9B SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAD DUP2 PUSH2 0xDDB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xD4F DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xD08 SWAP3 SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF1E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xD5C PUSH2 0xFB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD7A PUSH2 0x90B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDD9 JUMPI PUSH2 0xD9D PUSH2 0xFB9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD0 SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF18 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xED1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1519 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF1E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xF3D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xF56 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xF71 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xFB3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP2 SWAP1 PUSH2 0x1152 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFED DUP3 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFD DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1007 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1018 DUP2 PUSH2 0xFF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1033 JUMPI PUSH2 0x1032 PUSH2 0xFC0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1040 DUP5 DUP3 DUP6 ADD PUSH2 0x100A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x105B DUP2 PUSH2 0x1049 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1074 PUSH0 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1083 DUP2 PUSH2 0x1049 JUMP JUMPDEST DUP2 EQ PUSH2 0x108D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x109E DUP2 PUSH2 0x107A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10B9 JUMPI PUSH2 0x10B8 PUSH2 0xFC0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10F2 PUSH2 0x10ED PUSH2 0x10E8 DUP5 PUSH2 0xFC4 JUMP JUMPDEST PUSH2 0x10CF JUMP JUMPDEST PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1103 DUP3 PUSH2 0x10D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1114 DUP3 PUSH2 0x10F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1124 DUP2 PUSH2 0x110A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x113D PUSH0 DUP4 ADD DUP5 PUSH2 0x111B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114C DUP2 PUSH2 0xFE3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1165 PUSH0 DUP4 ADD DUP5 PUSH2 0x1143 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1181 JUMPI PUSH2 0x1180 PUSH2 0xFC0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x118E DUP6 DUP3 DUP7 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x119F DUP6 DUP3 DUP7 ADD PUSH2 0x1090 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11E0 DUP3 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EB DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1202 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1213 DUP3 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP PUSH2 0x121E DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x122C DUP2 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1281 DUP3 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP PUSH2 0x128C DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x129C JUMPI PUSH2 0x129B PUSH2 0x124A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12B1 DUP3 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP PUSH2 0x12BC DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x12D4 JUMPI PUSH2 0x12D3 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420756E7374616B65203000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x131E PUSH1 0x10 DUP4 PUSH2 0x12DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1329 DUP3 PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x134B DUP2 PUSH2 0x1312 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420756E7374616B65206D6F7265207468616E207374616B656400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1386 PUSH1 0x1F DUP4 PUSH2 0x12DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1391 DUP3 PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13B3 DUP2 PUSH2 0x137A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20636C61696D00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13EE PUSH1 0x13 DUP4 PUSH2 0x12DA JUMP JUMPDEST SWAP2 POP PUSH2 0x13F9 DUP3 PUSH2 0x13BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x141B DUP2 PUSH2 0x13E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1456 PUSH1 0xE DUP4 PUSH2 0x12DA JUMP JUMPDEST SWAP2 POP PUSH2 0x1461 DUP3 PUSH2 0x1422 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1483 DUP2 PUSH2 0x144A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74206465706F736974203000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14BE PUSH1 0x10 DUP4 PUSH2 0x12DA JUMP JUMPDEST SWAP2 POP PUSH2 0x14C9 DUP3 PUSH2 0x148A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14EB DUP2 PUSH2 0x14B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1505 PUSH0 DUP4 ADD DUP6 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x1512 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x152C PUSH0 DUP4 ADD DUP7 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x1539 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1143 JUMP JUMPDEST PUSH2 0x1546 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xAA KECCAK256 0xBE 0xC CALLER 0xC1 PUSH17 0x6DB0F01B50384D4E0672F5C527CAA95989 0x24 PUSH1 0x94 ISZERO REVERT 0x21 PUSH19 0x64736F6C634300081C00330000000000000000 ",
							"sourceMap": "208:2749:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1529:243;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;650:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2055:335;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2398:255;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;286:26:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;386:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;353:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;586:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1780:267:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2661:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;458:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1221:300;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;494:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;319:25:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1529:243;1583:7;1748;:16;1756:7;1748:16;;;;;;;;;;;;;;;;1728:4;1679:22;:31;1702:7;1679:31;;;;;;;;;;;;;;;;1660:16;:14;:16::i;:::-;:50;;;;:::i;:::-;1624:6;:15;1631:7;1624:15;;;;;;;;;;;;;;;;:87;;;;:::i;:::-;1623:109;;;;:::i;:::-;:141;;;;:::i;:::-;1603:161;;1529:243;;;:::o;650:42::-;;;;;;;;;;;;;;;;;:::o;538:41::-;;;;;;;;;;;;;;;;;:::o;2055:335::-;2110:10;965:16;:14;:16::i;:::-;942:20;:39;;;;1009:15;992:14;:32;;;;1060:1;1041:21;;:7;:21;;;1037:157;;1098:15;1105:7;1098:6;:15::i;:::-;1079:7;:16;1087:7;1079:16;;;;;;;;;;;;;;;:34;;;;1162:20;;1128:22;:31;1151:7;1128:31;;;;;;;;;;;;;;;:54;;;;1037:157;2150:1:::1;2141:6;:10;2133:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2213:6;2191;:18;2198:10;2191:18;;;;;;;;;;;;;;;;:28;;2183:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2288:6;2266;:18;2273:10;2266:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;2320:6;2305:11;;:21;;;;;;;:::i;:::-;;;;;;;;2337:45;2363:10;2375:6;2337:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;2055:335:::0;;:::o;2398:255::-;2444:10;965:16;:14;:16::i;:::-;942:20;:39;;;;1009:15;992:14;:32;;;;1060:1;1041:21;;:7;:21;;;1037:157;;1098:15;1105:7;1098:6;:15::i;:::-;1079:7;:16;1087:7;1079:16;;;;;;;;;;;;;;;:34;;;;1162:20;;1128:22;:31;1151:7;1128:31;;;;;;;;;;;;;;;:54;;;;1037:157;2467:14:::1;2484:7;:19;2492:10;2484:19;;;;;;;;;;;;;;;;2467:36;;2531:1;2522:6;:10;2514:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;2589:1;2567:7;:19;2575:10;2567:19;;;;;;;;;;;;;;;:23;;;;2601:44;2626:10;2638:6;2601:11;;;;;;;;;;;:24;;;;:44;;;;;:::i;:::-;2456:197;2398:255:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;286:26:10:-;;;;;;;;;;;;;:::o;386:25::-;;;;:::o;353:26::-;;;;:::o;586:57::-;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1780:267:10:-;1833:10;965:16;:14;:16::i;:::-;942:20;:39;;;;1009:15;992:14;:32;;;;1060:1;1041:21;;:7;:21;;;1037:157;;1098:15;1105:7;1098:6;:15::i;:::-;1079:7;:16;1087:7;1079:16;;;;;;;;;;;;;;;:34;;;;1162:20;;1128:22;:31;1151:7;1128:31;;;;;;;;;;;;;;;:54;;;;1037:157;1873:1:::1;1864:6;:10;1856:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;1904:64;1934:10;1954:4;1961:6;1904:12;;;;;;;;;;;:29;;;;:64;;;;;;:::i;:::-;2001:6;1979;:18;1986:10;1979:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;2033:6;2018:11;;:21;;;;;;;:::i;:::-;;;;;;;;1780:267:::0;;:::o;2661:293::-;1531:13:0;:11;:13::i;:::-;2766:1:10::1;2757:6;:10;2749:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2799:63;2828:10;2848:4;2855:6;2799:11;;;;;;;;;;;:28;;;;:63;;;;;;:::i;:::-;2895:8;2886:6;:17;;;;:::i;:::-;2873:10;:30;;;;2931:15;2914:14;:32;;;;2661:293:::0;;:::o;458:29::-;;;;:::o;1221:300::-;1268:7;1307:1;1292:11;;:16;1288:76;;1332:20;;1325:27;;;;1288:76;1502:11;;1481:4;1468:10;;1450:14;;1432:15;:32;;;;:::i;:::-;1431:47;;;;:::i;:::-;:54;;;;:::i;:::-;1430:83;;;;:::i;:::-;1394:20;;:119;;;;:::i;:::-;1374:139;;1221:300;;:::o;494:35::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;319:25:10:-;;;;;;;;;;;;;:::o;1271:160:5:-;1353:71;1373:5;1395;:14;;;1412:2;1416:5;1380:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1353:19;:71::i;:::-;1271:160;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1670:188:5:-;1770:81;1790:5;1812;:18;;;1833:4;1839:2;1843:5;1797:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1770:19;:81::i;:::-;1670:188;;;;:::o;7738:720::-;7818:18;7846:19;7984:4;7981:1;7974:4;7968:11;7961:4;7955;7951:15;7948:1;7941:5;7934;7929:60;8041:7;8031:176;;8085:4;8079:11;8130:16;8127:1;8122:3;8107:40;8176:16;8171:3;8164:29;8031:176;8234:16;8220:30;;8284:1;8278:8;8263:23;;7900:396;8324:1;8310:10;:15;:68;;8377:1;8362:11;:16;;8310:68;;;8358:1;8336:5;8328:26;;;:31;8310:68;8306:146;;;8434:5;8401:40;;;;;;;;;;;:::i;:::-;;;;;;;;8306:146;7808:650;;7738:720;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:329::-;1943:6;1992:2;1980:9;1971:7;1967:23;1963:32;1960:119;;;1998:79;;:::i;:::-;1960:119;2118:1;2143:53;2188:7;2179:6;2168:9;2164:22;2143:53;:::i;:::-;2133:63;;2089:117;1884:329;;;;:::o;2219:60::-;2247:3;2268:5;2261:12;;2219:60;;;:::o;2285:142::-;2335:9;2368:53;2386:34;2395:24;2413:5;2395:24;:::i;:::-;2386:34;:::i;:::-;2368:53;:::i;:::-;2355:66;;2285:142;;;:::o;2433:126::-;2483:9;2516:37;2547:5;2516:37;:::i;:::-;2503:50;;2433:126;;;:::o;2565:140::-;2629:9;2662:37;2693:5;2662:37;:::i;:::-;2649:50;;2565:140;;;:::o;2711:159::-;2812:51;2857:5;2812:51;:::i;:::-;2807:3;2800:64;2711:159;;:::o;2876:250::-;2983:4;3021:2;3010:9;3006:18;2998:26;;3034:85;3116:1;3105:9;3101:17;3092:6;3034:85;:::i;:::-;2876:250;;;;:::o;3132:118::-;3219:24;3237:5;3219:24;:::i;:::-;3214:3;3207:37;3132:118;;:::o;3256:222::-;3349:4;3387:2;3376:9;3372:18;3364:26;;3400:71;3468:1;3457:9;3453:17;3444:6;3400:71;:::i;:::-;3256:222;;;;:::o;3484:474::-;3552:6;3560;3609:2;3597:9;3588:7;3584:23;3580:32;3577:119;;;3615:79;;:::i;:::-;3577:119;3735:1;3760:53;3805:7;3796:6;3785:9;3781:22;3760:53;:::i;:::-;3750:63;;3706:117;3862:2;3888:53;3933:7;3924:6;3913:9;3909:22;3888:53;:::i;:::-;3878:63;;3833:118;3484:474;;;;;:::o;3964:180::-;4012:77;4009:1;4002:88;4109:4;4106:1;4099:15;4133:4;4130:1;4123:15;4150:194;4190:4;4210:20;4228:1;4210:20;:::i;:::-;4205:25;;4244:20;4262:1;4244:20;:::i;:::-;4239:25;;4288:1;4285;4281:9;4273:17;;4312:1;4306:4;4303:11;4300:37;;;4317:18;;:::i;:::-;4300:37;4150:194;;;;:::o;4350:410::-;4390:7;4413:20;4431:1;4413:20;:::i;:::-;4408:25;;4447:20;4465:1;4447:20;:::i;:::-;4442:25;;4502:1;4499;4495:9;4524:30;4542:11;4524:30;:::i;:::-;4513:41;;4703:1;4694:7;4690:15;4687:1;4684:22;4664:1;4657:9;4637:83;4614:139;;4733:18;;:::i;:::-;4614:139;4398:362;4350:410;;;;:::o;4766:180::-;4814:77;4811:1;4804:88;4911:4;4908:1;4901:15;4935:4;4932:1;4925:15;4952:185;4992:1;5009:20;5027:1;5009:20;:::i;:::-;5004:25;;5043:20;5061:1;5043:20;:::i;:::-;5038:25;;5082:1;5072:35;;5087:18;;:::i;:::-;5072:35;5129:1;5126;5122:9;5117:14;;4952:185;;;;:::o;5143:191::-;5183:3;5202:20;5220:1;5202:20;:::i;:::-;5197:25;;5236:20;5254:1;5236:20;:::i;:::-;5231:25;;5279:1;5276;5272:9;5265:16;;5300:3;5297:1;5294:10;5291:36;;;5307:18;;:::i;:::-;5291:36;5143:191;;;;:::o;5340:169::-;5424:11;5458:6;5453:3;5446:19;5498:4;5493:3;5489:14;5474:29;;5340:169;;;;:::o;5515:166::-;5655:18;5651:1;5643:6;5639:14;5632:42;5515:166;:::o;5687:366::-;5829:3;5850:67;5914:2;5909:3;5850:67;:::i;:::-;5843:74;;5926:93;6015:3;5926:93;:::i;:::-;6044:2;6039:3;6035:12;6028:19;;5687:366;;;:::o;6059:419::-;6225:4;6263:2;6252:9;6248:18;6240:26;;6312:9;6306:4;6302:20;6298:1;6287:9;6283:17;6276:47;6340:131;6466:4;6340:131;:::i;:::-;6332:139;;6059:419;;;:::o;6484:181::-;6624:33;6620:1;6612:6;6608:14;6601:57;6484:181;:::o;6671:366::-;6813:3;6834:67;6898:2;6893:3;6834:67;:::i;:::-;6827:74;;6910:93;6999:3;6910:93;:::i;:::-;7028:2;7023:3;7019:12;7012:19;;6671:366;;;:::o;7043:419::-;7209:4;7247:2;7236:9;7232:18;7224:26;;7296:9;7290:4;7286:20;7282:1;7271:9;7267:17;7260:47;7324:131;7450:4;7324:131;:::i;:::-;7316:139;;7043:419;;;:::o;7468:169::-;7608:21;7604:1;7596:6;7592:14;7585:45;7468:169;:::o;7643:366::-;7785:3;7806:67;7870:2;7865:3;7806:67;:::i;:::-;7799:74;;7882:93;7971:3;7882:93;:::i;:::-;8000:2;7995:3;7991:12;7984:19;;7643:366;;;:::o;8015:419::-;8181:4;8219:2;8208:9;8204:18;8196:26;;8268:9;8262:4;8258:20;8254:1;8243:9;8239:17;8232:47;8296:131;8422:4;8296:131;:::i;:::-;8288:139;;8015:419;;;:::o;8440:164::-;8580:16;8576:1;8568:6;8564:14;8557:40;8440:164;:::o;8610:366::-;8752:3;8773:67;8837:2;8832:3;8773:67;:::i;:::-;8766:74;;8849:93;8938:3;8849:93;:::i;:::-;8967:2;8962:3;8958:12;8951:19;;8610:366;;;:::o;8982:419::-;9148:4;9186:2;9175:9;9171:18;9163:26;;9235:9;9229:4;9225:20;9221:1;9210:9;9206:17;9199:47;9263:131;9389:4;9263:131;:::i;:::-;9255:139;;8982:419;;;:::o;9407:166::-;9547:18;9543:1;9535:6;9531:14;9524:42;9407:166;:::o;9579:366::-;9721:3;9742:67;9806:2;9801:3;9742:67;:::i;:::-;9735:74;;9818:93;9907:3;9818:93;:::i;:::-;9936:2;9931:3;9927:12;9920:19;;9579:366;;;:::o;9951:419::-;10117:4;10155:2;10144:9;10140:18;10132:26;;10204:9;10198:4;10194:20;10190:1;10179:9;10175:17;10168:47;10232:131;10358:4;10232:131;:::i;:::-;10224:139;;9951:419;;;:::o;10376:332::-;10497:4;10535:2;10524:9;10520:18;10512:26;;10548:71;10616:1;10605:9;10601:17;10592:6;10548:71;:::i;:::-;10629:72;10697:2;10686:9;10682:18;10673:6;10629:72;:::i;:::-;10376:332;;;;;:::o;10714:442::-;10863:4;10901:2;10890:9;10886:18;10878:26;;10914:71;10982:1;10971:9;10967:17;10958:6;10914:71;:::i;:::-;10995:72;11063:2;11052:9;11048:18;11039:6;10995:72;:::i;:::-;11077;11145:2;11134:9;11130:18;11121:6;11077:72;:::i;:::-;10714:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1101600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimRewards()": "infinite",
								"depositRewards(uint256,uint256)": "infinite",
								"earned(address)": "infinite",
								"lastUpdateTime()": "2447",
								"owner()": "2559",
								"renounceOwnership()": "infinite",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "2491",
								"rewardRate()": "2514",
								"rewardToken()": "infinite",
								"rewards(address)": "2848",
								"stake(uint256)": "infinite",
								"stakes(address)": "2870",
								"stakingToken()": "infinite",
								"totalStaked()": "2536",
								"transferOwnership(address)": "infinite",
								"unstake(uint256)": "infinite",
								"userRewardPerTokenPaid(address)": "2825"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 884,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 884,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 884,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 884,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 701,
									"end": 884,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 701,
									"end": 884,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 701,
									"end": 884,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 701,
									"end": 884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 701,
									"end": 884,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 786,
									"end": 798,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 826,
									"end": 839,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 811,
									"end": 823,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 811,
									"end": 823,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 811,
									"end": 839,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 864,
									"end": 876,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 850,
									"end": 861,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 850,
									"end": 861,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 850,
									"end": 876,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 701,
									"end": 884,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 678,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 678,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 619,
									"end": 626,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 666,
									"end": 671,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 648,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 648,
									"end": 672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 648,
									"end": 672,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 648,
									"end": 672,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 637,
									"end": 672,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 637,
									"end": 672,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 568,
									"end": 678,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 568,
									"end": 678,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 684,
									"end": 834,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 684,
									"end": 834,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 803,
									"end": 808,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 771,
									"end": 809,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 771,
									"end": 809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 771,
									"end": 809,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 771,
									"end": 809,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 761,
									"end": 810,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 751,
									"end": 828,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 824,
									"end": 825,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 821,
									"end": 822,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 814,
									"end": 826,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 751,
									"end": 828,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 751,
									"end": 828,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 684,
									"end": 834,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 684,
									"end": 834,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 911,
									"end": 916,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 942,
									"end": 948,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 936,
									"end": 949,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 927,
									"end": 949,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 927,
									"end": 949,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 999,
									"end": 1004,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 958,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 958,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 840,
									"end": 1011,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1017,
									"end": 1139,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1017,
									"end": 1139,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1108,
									"end": 1113,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1090,
									"end": 1114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 1090,
									"end": 1114,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1083,
									"end": 1088,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1080,
									"end": 1115,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1129,
									"end": 1130,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1126,
									"end": 1127,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1119,
									"end": 1131,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "tag",
									"source": 11,
									"value": "42"
								},
								{
									"begin": 1070,
									"end": 1133,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1017,
									"end": 1139,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1017,
									"end": 1139,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1202,
									"end": 1207,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1233,
									"end": 1239,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1227,
									"end": 1240,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1240,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1218,
									"end": 1240,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1276,
									"end": 1281,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 1249,
									"end": 1282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 1249,
									"end": 1282,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1288,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1145,
									"end": 1288,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1294,
									"end": 2013,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1294,
									"end": 2013,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1418,
									"end": 1424,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1426,
									"end": 1432,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1475,
									"end": 1477,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1454,
									"end": 1461,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1450,
									"end": 1473,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1446,
									"end": 1478,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 1443,
									"end": 1562,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1443,
									"end": 1562,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1443,
									"end": 1562,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1481,
									"end": 1560,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1481,
									"end": 1560,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1481,
									"end": 1560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1481,
									"end": 1560,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 1481,
									"end": 1560,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1443,
									"end": 1562,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 1443,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1601,
									"end": 1602,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1626,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1696,
									"end": 1703,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1687,
									"end": 1693,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1676,
									"end": 1685,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1672,
									"end": 1694,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1626,
									"end": 1704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1626,
									"end": 1704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1626,
									"end": 1704,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1626,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1616,
									"end": 1704,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1616,
									"end": 1704,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1572,
									"end": 1714,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1753,
									"end": 1755,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1779,
									"end": 1857,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1849,
									"end": 1856,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1840,
									"end": 1846,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1829,
									"end": 1838,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1825,
									"end": 1847,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1779,
									"end": 1857,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 1779,
									"end": 1857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1779,
									"end": 1857,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1779,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1769,
									"end": 1857,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1769,
									"end": 1857,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1724,
									"end": 1867,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1906,
									"end": 1908,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1932,
									"end": 1996,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 1988,
									"end": 1995,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 1979,
									"end": 1985,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1968,
									"end": 1977,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1964,
									"end": 1986,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1932,
									"end": 1996,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1932,
									"end": 1996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1932,
									"end": 1996,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 1932,
									"end": 1996,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1996,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1922,
									"end": 1996,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1877,
									"end": 2006,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1294,
									"end": 2013,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1294,
									"end": 2013,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1294,
									"end": 2013,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1294,
									"end": 2013,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1294,
									"end": 2013,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1294,
									"end": 2013,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2019,
									"end": 2137,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 2019,
									"end": 2137,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2106,
									"end": 2130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2124,
									"end": 2129,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2106,
									"end": 2130,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 2106,
									"end": 2130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2106,
									"end": 2130,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 2106,
									"end": 2130,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2101,
									"end": 2104,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2094,
									"end": 2131,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2019,
									"end": 2137,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2019,
									"end": 2137,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2019,
									"end": 2137,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2143,
									"end": 2365,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2143,
									"end": 2365,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2236,
									"end": 2240,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2274,
									"end": 2276,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2263,
									"end": 2272,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2259,
									"end": 2277,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2277,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2251,
									"end": 2277,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2287,
									"end": 2358,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 2355,
									"end": 2356,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2344,
									"end": 2353,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2340,
									"end": 2357,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2287,
									"end": 2358,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 2287,
									"end": 2358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2287,
									"end": 2358,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 2287,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2143,
									"end": 2365,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2143,
									"end": 2365,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2143,
									"end": 2365,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2143,
									"end": 2365,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2143,
									"end": 2365,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 208,
									"end": 2957,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3aa20be0c33c1706db0f01b50384d4e0672f5c527caa9598924609415fd217264736f6c634300081c0033",
									".code": [
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "8B876347"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "C8F33C91"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "C8F33C91"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "CD3DAF9D"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "DF136D65"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "F7C618C1"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "8B876347"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "A694FC3A"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "BDD071FB"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "372500AB"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "372500AB"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "72F702F3"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "7B0A47EE"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "817B1CD2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "8CC262"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "700037D"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "16934FC4"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "2E17DE78"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 208,
											"end": 2957,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1529,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1529,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1529,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 650,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 650,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 538,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 538,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 538,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2055,
											"end": 2390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2653,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2398,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2398,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2398,
											"end": 2653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2653,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2398,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2653,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 312,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 286,
											"end": 312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 286,
											"end": 312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 386,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 386,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 386,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 386,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 411,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 386,
											"end": 411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 386,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 386,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 411,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 353,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 353,
											"end": 379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 586,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 586,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 586,
											"end": 643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1780,
											"end": 2047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 2661,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2661,
											"end": 2954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 458,
											"end": 487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 458,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 458,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 458,
											"end": 487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 487,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 458,
											"end": 487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 458,
											"end": 487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 458,
											"end": 487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 487,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1221,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1221,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 494,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 494,
											"end": 529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 344,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 319,
											"end": 344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 319,
											"end": 344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1583,
											"end": 1590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1755,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1756,
											"end": 1763,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1748,
											"end": 1764,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1679,
											"end": 1701,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 1710,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1660,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1660,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 1660,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1660,
											"end": 1710,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1660,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1660,
											"end": 1710,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1660,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1630,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1638,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1639,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1624,
											"end": 1711,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1711,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1624,
											"end": 1711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1624,
											"end": 1711,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1624,
											"end": 1711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1623,
											"end": 1732,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1732,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1732,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1623,
											"end": 1732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1732,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1623,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1623,
											"end": 1764,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1623,
											"end": 1764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1764,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1623,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1764,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 650,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 538,
											"end": 579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 965,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 965,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 965,
											"end": 981,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 965,
											"end": 981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 942,
											"end": 962,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 942,
											"end": 981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 942,
											"end": 981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 942,
											"end": 981,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 942,
											"end": 981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1024,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1006,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1048,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1098,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1113,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 1098,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1086,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1094,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1158,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2141,
											"end": 2147,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2141,
											"end": 2151,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2133,
											"end": 2172,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2133,
											"end": 2172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2213,
											"end": 2219,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2198,
											"end": 2208,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2209,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2219,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2219,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2183,
											"end": 2255,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2183,
											"end": 2255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2288,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2283,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2266,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2305,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2305,
											"end": 2326,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2363,
											"end": 2373,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2375,
											"end": 2381,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2337,
											"end": 2349,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2337,
											"end": 2362,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2337,
											"end": 2362,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2382,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2382,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2382,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2382,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2337,
											"end": 2382,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2382,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2337,
											"end": 2382,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2337,
											"end": 2382,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2055,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2653,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2398,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2444,
											"end": 2454,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 965,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 965,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 965,
											"end": 981,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 965,
											"end": 981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 942,
											"end": 962,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 942,
											"end": 981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 942,
											"end": 981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 942,
											"end": 981,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 942,
											"end": 981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1024,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1006,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1048,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1098,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1113,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 1098,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1086,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1094,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1158,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2502,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2467,
											"end": 2503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2532,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2528,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2522,
											"end": 2532,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 2514,
											"end": 2556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2514,
											"end": 2556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2589,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2585,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2586,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2567,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2626,
											"end": 2636,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2638,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2601,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2645,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2601,
											"end": 2645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2645,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2601,
											"end": 2645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 2601,
											"end": 2645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2653,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2653,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2398,
											"end": 2653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 286,
											"end": 312,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 286,
											"end": 312,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 286,
											"end": 312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 386,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 411,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 353,
											"end": 379,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 353,
											"end": 379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 586,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1833,
											"end": 1843,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 965,
											"end": 981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 965,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 965,
											"end": 981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 965,
											"end": 981,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 965,
											"end": 981,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 942,
											"end": 962,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 942,
											"end": 981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 942,
											"end": 981,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 942,
											"end": 981,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 942,
											"end": 981,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1024,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1006,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 992,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1048,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1041,
											"end": 1062,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1105,
											"end": 1112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1098,
											"end": 1113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1113,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1098,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1086,
											"name": "PUSH",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1087,
											"end": 1094,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1095,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1079,
											"end": 1113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1162,
											"end": 1182,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1150,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1158,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1159,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1037,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1873,
											"end": 1874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1864,
											"end": 1874,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 1856,
											"end": 1893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1856,
											"end": 1893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1934,
											"end": 1944,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1954,
											"end": 1958,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1961,
											"end": 1967,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1904,
											"end": 1916,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1904,
											"end": 1933,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1933,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 1904,
											"end": 1933,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1968,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1968,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1968,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1904,
											"end": 1968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1968,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 1904,
											"end": 1968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2001,
											"end": 2007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1985,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1986,
											"end": 1996,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 1997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1979,
											"end": 2007,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1979,
											"end": 2007,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2033,
											"end": 2039,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2018,
											"end": 2029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2018,
											"end": 2039,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2039,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 2047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2763,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2757,
											"end": 2767,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 2749,
											"end": 2788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2749,
											"end": 2788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2828,
											"end": 2838,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2848,
											"end": 2852,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2855,
											"end": 2861,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2799,
											"end": 2810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2799,
											"end": 2827,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2862,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2862,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2862,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2862,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2799,
											"end": 2862,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2862,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2862,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 2799,
											"end": 2862,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2895,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2886,
											"end": 2892,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2886,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2886,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2886,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2886,
											"end": 2903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2886,
											"end": 2903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2886,
											"end": 2903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 2886,
											"end": 2903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2873,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2903,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2873,
											"end": 2903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2931,
											"end": 2946,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2914,
											"end": 2928,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2914,
											"end": 2946,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2914,
											"end": 2946,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2914,
											"end": 2946,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2914,
											"end": 2946,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2661,
											"end": 2954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 458,
											"end": 487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 458,
											"end": 487,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 458,
											"end": 487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1292,
											"end": 1303,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1292,
											"end": 1308,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1288,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1288,
											"end": 1364,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1332,
											"end": 1352,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1325,
											"end": 1352,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1288,
											"end": 1364,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 1288,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1513,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1502,
											"end": 1513,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1481,
											"end": 1485,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1468,
											"end": 1478,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1468,
											"end": 1478,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1450,
											"end": 1464,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1450,
											"end": 1464,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1447,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1432,
											"end": 1464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1432,
											"end": 1464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1432,
											"end": 1464,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 1432,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1431,
											"end": 1478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1431,
											"end": 1478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1478,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 1431,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1431,
											"end": 1485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 1431,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1431,
											"end": 1485,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 1431,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1430,
											"end": 1513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1430,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1513,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 1430,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1394,
											"end": 1414,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1394,
											"end": 1414,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1394,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1394,
											"end": 1513,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1394,
											"end": 1513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1394,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1394,
											"end": 1513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1394,
											"end": 1513,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 1394,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1513,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1221,
											"end": 1521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 494,
											"end": 529,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 494,
											"end": 529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 319,
											"end": 344,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 319,
											"end": 344,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 319,
											"end": 344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1373,
											"end": 1378,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1400,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1409,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1380,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1353,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1353,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1817,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1830,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1839,
											"end": 1841,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1797,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1797,
											"end": 1850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1770,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 1770,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1670,
											"end": 1858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7818,
											"end": 7836,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7846,
											"end": 7865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7984,
											"end": 7988,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7981,
											"end": 7982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7974,
											"end": 7978,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7968,
											"end": 7979,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 7965,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7951,
											"end": 7966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7948,
											"end": 7949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7934,
											"end": 7939,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 7929,
											"end": 7989,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8048,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8090,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8127,
											"end": 8128,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8107,
											"end": 8147,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 8176,
											"end": 8192,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8174,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8164,
											"end": 8193,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 8031,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8234,
											"end": 8250,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8220,
											"end": 8250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8286,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8263,
											"end": 8286,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7900,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8324,
											"end": 8325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8310,
											"end": 8320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8325,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8378,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8362,
											"end": 8373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8336,
											"end": 8341,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8359,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 8310,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8434,
											"end": 8439,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 5,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 8401,
											"end": 8441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8441,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 8306,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 8458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 8458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 1949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1980,
											"end": 1989,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1967,
											"end": 1990,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 1995,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 1998,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 1998,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 1960,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2119,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2188,
											"end": 2195,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2179,
											"end": 2185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2168,
											"end": 2177,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2164,
											"end": 2186,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 2143,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2143,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2089,
											"end": 2206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1884,
											"end": 2213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2273,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2344,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2413,
											"end": 2418,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2395,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 2395,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 2368,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2285,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2492,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 2547,
											"end": 2552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 2516,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 2516,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2503,
											"end": 2553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2559,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2433,
											"end": 2559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2629,
											"end": 2638,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2693,
											"end": 2698,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 2662,
											"end": 2699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 2662,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2649,
											"end": 2699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2857,
											"end": 2862,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 2812,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 2812,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2807,
											"end": 2810,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2800,
											"end": 2864,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2711,
											"end": 2870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 2987,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3019,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3006,
											"end": 3024,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2998,
											"end": 3024,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 3116,
											"end": 3117,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 3118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 3034,
											"end": 3119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 3034,
											"end": 3119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 3126,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2876,
											"end": 3126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 3237,
											"end": 3242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 3219,
											"end": 3243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 3219,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3214,
											"end": 3217,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3207,
											"end": 3244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3132,
											"end": 3250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3132,
											"end": 3250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3349,
											"end": 3353,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3389,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3376,
											"end": 3385,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3372,
											"end": 3390,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3364,
											"end": 3390,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3466,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3453,
											"end": 3470,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3444,
											"end": 3450,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 3400,
											"end": 3471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 3400,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3256,
											"end": 3478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3958,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 3484,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3552,
											"end": 3558,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3597,
											"end": 3606,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3584,
											"end": 3607,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3580,
											"end": 3612,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 3615,
											"end": 3694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 3615,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 3577,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3735,
											"end": 3736,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 3805,
											"end": 3812,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3794,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3781,
											"end": 3803,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 3760,
											"end": 3813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 3760,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 3813,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3750,
											"end": 3813,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3706,
											"end": 3823,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3862,
											"end": 3864,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3888,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 3933,
											"end": 3940,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3913,
											"end": 3922,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 3888,
											"end": 3941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 3941,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 3888,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3878,
											"end": 3941,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3878,
											"end": 3941,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3958,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3958,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3484,
											"end": 3958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3964,
											"end": 4144,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 3964,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4012,
											"end": 4089,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4009,
											"end": 4010,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4002,
											"end": 4090,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4109,
											"end": 4113,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 4106,
											"end": 4107,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4099,
											"end": 4114,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4137,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4130,
											"end": 4131,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4123,
											"end": 4138,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4344,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 4150,
											"end": 4344,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 4228,
											"end": 4229,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 4210,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4230,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 4210,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4205,
											"end": 4230,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4205,
											"end": 4230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 4262,
											"end": 4263,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 4244,
											"end": 4264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 4244,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4264,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4264,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4288,
											"end": 4289,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4285,
											"end": 4286,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4281,
											"end": 4290,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4273,
											"end": 4290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4273,
											"end": 4290,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4312,
											"end": 4313,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4306,
											"end": 4310,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4303,
											"end": 4314,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4337,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 4300,
											"end": 4337,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 4317,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 4317,
											"end": 4335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4317,
											"end": 4335,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 4317,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4337,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 4300,
											"end": 4337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4344,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4344,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4150,
											"end": 4344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4760,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 4350,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4390,
											"end": 4397,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4413,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 4431,
											"end": 4432,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4413,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 4413,
											"end": 4433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4413,
											"end": 4433,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 4413,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4433,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4465,
											"end": 4466,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 4447,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4447,
											"end": 4467,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 4447,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4442,
											"end": 4467,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4442,
											"end": 4467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4502,
											"end": 4503,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4499,
											"end": 4500,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4495,
											"end": 4504,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 4542,
											"end": 4553,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 4524,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4554,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 4524,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4513,
											"end": 4554,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4513,
											"end": 4554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4703,
											"end": 4704,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4694,
											"end": 4701,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4690,
											"end": 4705,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4687,
											"end": 4688,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4706,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4664,
											"end": 4665,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4657,
											"end": 4666,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4637,
											"end": 4720,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4614,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 4614,
											"end": 4753,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 4733,
											"end": 4751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 4733,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4614,
											"end": 4753,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 4614,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4398,
											"end": 4760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4760,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4760,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4350,
											"end": 4760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4766,
											"end": 4946,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4766,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4891,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4811,
											"end": 4812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4804,
											"end": 4892,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4911,
											"end": 4915,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4901,
											"end": 4916,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 4932,
											"end": 4933,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4940,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4952,
											"end": 5137,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 4952,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5009,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 5027,
											"end": 5028,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5009,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5009,
											"end": 5029,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 5009,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5004,
											"end": 5029,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5004,
											"end": 5029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5061,
											"end": 5062,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5043,
											"end": 5063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5063,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 5043,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5038,
											"end": 5063,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5038,
											"end": 5063,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5082,
											"end": 5083,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5072,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5072,
											"end": 5107,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 5087,
											"end": 5105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5087,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5072,
											"end": 5107,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 5072,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5130,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5126,
											"end": 5127,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5122,
											"end": 5131,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5117,
											"end": 5131,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5117,
											"end": 5131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4952,
											"end": 5137,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4952,
											"end": 5137,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4952,
											"end": 5137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4952,
											"end": 5137,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4952,
											"end": 5137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5143,
											"end": 5334,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 5143,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5186,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 5220,
											"end": 5221,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5202,
											"end": 5222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5202,
											"end": 5222,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 5202,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5222,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5197,
											"end": 5222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 5254,
											"end": 5255,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5236,
											"end": 5256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 5236,
											"end": 5256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5231,
											"end": 5256,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5231,
											"end": 5256,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5279,
											"end": 5280,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5276,
											"end": 5277,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5272,
											"end": 5281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5265,
											"end": 5281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5265,
											"end": 5281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5300,
											"end": 5303,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5297,
											"end": 5298,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5294,
											"end": 5304,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5327,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 5291,
											"end": 5327,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 5307,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5291,
											"end": 5327,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 5291,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5143,
											"end": 5334,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5143,
											"end": 5334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5143,
											"end": 5334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5143,
											"end": 5334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5143,
											"end": 5334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5509,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 5340,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5424,
											"end": 5435,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5458,
											"end": 5464,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5453,
											"end": 5456,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5446,
											"end": 5465,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5498,
											"end": 5502,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5493,
											"end": 5496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5489,
											"end": 5503,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5474,
											"end": 5503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5474,
											"end": 5503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5509,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5655,
											"end": 5673,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F7420756E7374616B65203000000000000000000000000000000000"
										},
										{
											"begin": 5651,
											"end": 5652,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5643,
											"end": 5649,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5639,
											"end": 5653,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5674,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 6053,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 5687,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5829,
											"end": 5832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 5914,
											"end": 5916,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 5909,
											"end": 5912,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 5850,
											"end": 5917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5917,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 5850,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5843,
											"end": 5917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5843,
											"end": 5917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5926,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 6015,
											"end": 6018,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5926,
											"end": 6019,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 5926,
											"end": 6019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5926,
											"end": 6019,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 5926,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6046,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6039,
											"end": 6042,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6035,
											"end": 6047,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6047,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 6053,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 6053,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 6053,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5687,
											"end": 6053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6059,
											"end": 6478,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 6059,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6263,
											"end": 6265,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6252,
											"end": 6261,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6240,
											"end": 6266,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6240,
											"end": 6266,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6312,
											"end": 6321,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6306,
											"end": 6310,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6302,
											"end": 6322,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6298,
											"end": 6299,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6296,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6283,
											"end": 6300,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6276,
											"end": 6323,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6340,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 6466,
											"end": 6470,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6340,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 6340,
											"end": 6471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6340,
											"end": 6471,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 6340,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6471,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6332,
											"end": 6471,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6059,
											"end": 6478,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6059,
											"end": 6478,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6059,
											"end": 6478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6059,
											"end": 6478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6484,
											"end": 6665,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 6484,
											"end": 6665,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6624,
											"end": 6657,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F7420756E7374616B65206D6F7265207468616E207374616B656400"
										},
										{
											"begin": 6620,
											"end": 6621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6612,
											"end": 6618,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6608,
											"end": 6622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6601,
											"end": 6658,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6484,
											"end": 6665,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6484,
											"end": 6665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6671,
											"end": 7037,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 6671,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6813,
											"end": 6816,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 6898,
											"end": 6900,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6893,
											"end": 6896,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6834,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 6834,
											"end": 6901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6834,
											"end": 6901,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 6834,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6827,
											"end": 6901,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6827,
											"end": 6901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 6999,
											"end": 7002,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 7003,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 6910,
											"end": 7003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6910,
											"end": 7003,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 6910,
											"end": 7003,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7028,
											"end": 7030,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7023,
											"end": 7026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7019,
											"end": 7031,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7012,
											"end": 7031,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7012,
											"end": 7031,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6671,
											"end": 7037,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6671,
											"end": 7037,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6671,
											"end": 7037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6671,
											"end": 7037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7043,
											"end": 7462,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 7043,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7213,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7249,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7236,
											"end": 7245,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7232,
											"end": 7250,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7224,
											"end": 7250,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7224,
											"end": 7250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7296,
											"end": 7305,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7290,
											"end": 7294,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7286,
											"end": 7306,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7280,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7267,
											"end": 7284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7260,
											"end": 7307,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7324,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 7450,
											"end": 7454,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7324,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 7324,
											"end": 7455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7324,
											"end": 7455,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 7324,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7316,
											"end": 7455,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7316,
											"end": 7455,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7043,
											"end": 7462,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7043,
											"end": 7462,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7043,
											"end": 7462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7043,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7637,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 7468,
											"end": 7637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7608,
											"end": 7629,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F207265776172647320746F20636C61696D00000000000000000000000000"
										},
										{
											"begin": 7604,
											"end": 7605,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7602,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7592,
											"end": 7606,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7585,
											"end": 7630,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7468,
											"end": 7637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7643,
											"end": 8009,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 7643,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7785,
											"end": 7788,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7806,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 7870,
											"end": 7872,
											"name": "PUSH",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 7865,
											"end": 7868,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7806,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 7806,
											"end": 7873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7806,
											"end": 7873,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 7806,
											"end": 7873,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7799,
											"end": 7873,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7799,
											"end": 7873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 7975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 7971,
											"end": 7974,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 7975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 7882,
											"end": 7975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7882,
											"end": 7975,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 7882,
											"end": 7975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8000,
											"end": 8002,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7995,
											"end": 7998,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7991,
											"end": 8003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7984,
											"end": 8003,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7984,
											"end": 8003,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7643,
											"end": 8009,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7643,
											"end": 8009,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7643,
											"end": 8009,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7643,
											"end": 8009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8015,
											"end": 8434,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 8015,
											"end": 8434,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8181,
											"end": 8185,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8219,
											"end": 8221,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8208,
											"end": 8217,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8204,
											"end": 8222,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8268,
											"end": 8277,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8266,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8258,
											"end": 8278,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8254,
											"end": 8255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8243,
											"end": 8252,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8239,
											"end": 8256,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8279,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8296,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 8422,
											"end": 8426,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8296,
											"end": 8427,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 8296,
											"end": 8427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8296,
											"end": 8427,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 8296,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8288,
											"end": 8427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8015,
											"end": 8434,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8015,
											"end": 8434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8015,
											"end": 8434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8015,
											"end": 8434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8440,
											"end": 8604,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 8440,
											"end": 8604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8580,
											"end": 8596,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 8576,
											"end": 8577,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8574,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8564,
											"end": 8578,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 8597,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8440,
											"end": 8604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8440,
											"end": 8604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8610,
											"end": 8976,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 8610,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8752,
											"end": 8755,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8773,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 8837,
											"end": 8839,
											"name": "PUSH",
											"source": 11,
											"value": "E"
										},
										{
											"begin": 8832,
											"end": 8835,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8773,
											"end": 8840,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 8773,
											"end": 8840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8773,
											"end": 8840,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 8773,
											"end": 8840,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8766,
											"end": 8840,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8766,
											"end": 8840,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8849,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 8938,
											"end": 8941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8849,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 8849,
											"end": 8942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8849,
											"end": 8942,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 8849,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8967,
											"end": 8969,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8962,
											"end": 8965,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8958,
											"end": 8970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8951,
											"end": 8970,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8951,
											"end": 8970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8610,
											"end": 8976,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8610,
											"end": 8976,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8610,
											"end": 8976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8610,
											"end": 8976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8982,
											"end": 9401,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 8982,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9148,
											"end": 9152,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9188,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9175,
											"end": 9184,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9171,
											"end": 9189,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9163,
											"end": 9189,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9163,
											"end": 9189,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9235,
											"end": 9244,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9229,
											"end": 9233,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9225,
											"end": 9245,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9221,
											"end": 9222,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9210,
											"end": 9219,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9206,
											"end": 9223,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9199,
											"end": 9246,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9263,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 9389,
											"end": 9393,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9263,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 9263,
											"end": 9394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9263,
											"end": 9394,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 9263,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9255,
											"end": 9394,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9255,
											"end": 9394,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8982,
											"end": 9401,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8982,
											"end": 9401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8982,
											"end": 9401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8982,
											"end": 9401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9407,
											"end": 9573,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 9407,
											"end": 9573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9547,
											"end": 9565,
											"name": "PUSH",
											"source": 11,
											"value": "43616E6E6F74206465706F736974203000000000000000000000000000000000"
										},
										{
											"begin": 9543,
											"end": 9544,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9535,
											"end": 9541,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9531,
											"end": 9545,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9524,
											"end": 9566,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9407,
											"end": 9573,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9407,
											"end": 9573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9945,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 9579,
											"end": 9945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9721,
											"end": 9724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9742,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 9806,
											"end": 9808,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 9801,
											"end": 9804,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9742,
											"end": 9809,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 9742,
											"end": 9809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9742,
											"end": 9809,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 9742,
											"end": 9809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9735,
											"end": 9809,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9735,
											"end": 9809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9818,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 9907,
											"end": 9910,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9818,
											"end": 9911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 9818,
											"end": 9911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9818,
											"end": 9911,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 9818,
											"end": 9911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9936,
											"end": 9938,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9927,
											"end": 9939,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9920,
											"end": 9939,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9920,
											"end": 9939,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9945,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9945,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9579,
											"end": 9945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 10370,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 9951,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10155,
											"end": 10157,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10153,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10140,
											"end": 10158,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10132,
											"end": 10158,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10132,
											"end": 10158,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10204,
											"end": 10213,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10198,
											"end": 10202,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10194,
											"end": 10214,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10190,
											"end": 10191,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10179,
											"end": 10188,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10175,
											"end": 10192,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10168,
											"end": 10215,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10232,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 10358,
											"end": 10362,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10232,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 10232,
											"end": 10363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10232,
											"end": 10363,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 10232,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10224,
											"end": 10363,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10224,
											"end": 10363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 10370,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 10370,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 10370,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 10370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10708,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 10376,
											"end": 10708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10497,
											"end": 10501,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10535,
											"end": 10537,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10524,
											"end": 10533,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10520,
											"end": 10538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10512,
											"end": 10538,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10512,
											"end": 10538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10548,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 10616,
											"end": 10617,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10605,
											"end": 10614,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10601,
											"end": 10618,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10592,
											"end": 10598,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10548,
											"end": 10619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 10548,
											"end": 10619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10548,
											"end": 10619,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 10548,
											"end": 10619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10629,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 10697,
											"end": 10699,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10686,
											"end": 10695,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10682,
											"end": 10700,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10673,
											"end": 10679,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10629,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 10629,
											"end": 10701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10629,
											"end": 10701,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 10629,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10708,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10708,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10708,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10714,
											"end": 11156,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 10714,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10863,
											"end": 10867,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10901,
											"end": 10903,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 10890,
											"end": 10899,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10886,
											"end": 10904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10878,
											"end": 10904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10878,
											"end": 10904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10914,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 10982,
											"end": 10983,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10971,
											"end": 10980,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10967,
											"end": 10984,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10958,
											"end": 10964,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10914,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 10914,
											"end": 10985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10914,
											"end": 10985,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 10914,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 11063,
											"end": 11065,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11052,
											"end": 11061,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11048,
											"end": 11066,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11039,
											"end": 11045,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11067,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 10995,
											"end": 11067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10995,
											"end": 11067,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 10995,
											"end": 11067,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11077,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 11145,
											"end": 11147,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11134,
											"end": 11143,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11130,
											"end": 11148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11121,
											"end": 11127,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11077,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 11077,
											"end": 11149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11077,
											"end": 11149,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 11077,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10714,
											"end": 11156,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 10714,
											"end": 11156,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 10714,
											"end": 11156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10714,
											"end": 11156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10714,
											"end": 11156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10714,
											"end": 11156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10714,
											"end": 11156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimRewards()": "372500ab",
							"depositRewards(uint256,uint256)": "bdd071fb",
							"earned(address)": "008cc262",
							"lastUpdateTime()": "c8f33c91",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewardToken()": "f7c618c1",
							"rewards(address)": "0700037d",
							"stake(uint256)": "a694fc3a",
							"stakes(address)": "16934fc4",
							"stakingToken()": "72f702f3",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"unstake(uint256)": "2e17de78",
							"userRewardPerTokenPaid(address)": "8b876347"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"depositRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"StakingContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"staking.sol\":{\"keccak256\":\"0x22009fd149903208a491e4df157f14cca2e32551d2dbcc394dae3f36536fa694\",\"urls\":[\"bzz-raw://f364a89b75142959bfb146669bf510e5d973584cd6e3be43802f52bf4987b475\",\"dweb:/ipfs/QmaJUnjZVoQ7u9n7C3f9dxsew5dGk6ZEPSzTwfKtQ288FN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "staking.sol:StakingContract",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1063,
								"contract": "staking.sol:StakingContract",
								"label": "stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 1066,
								"contract": "staking.sol:StakingContract",
								"label": "rewardToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 1068,
								"contract": "staking.sol:StakingContract",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1070,
								"contract": "staking.sol:StakingContract",
								"label": "rewardRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1072,
								"contract": "staking.sol:StakingContract",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1074,
								"contract": "staking.sol:StakingContract",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1078,
								"contract": "staking.sol:StakingContract",
								"label": "stakes",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1082,
								"contract": "staking.sol:StakingContract",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1086,
								"contract": "staking.sol:StakingContract",
								"label": "rewards",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)315": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> staking.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "staking.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1015
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1016,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1015,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1015,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1015
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1049
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1049,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1049,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1049,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1049
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1050,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1049,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							985
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							726
						]
					},
					"id": 727,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 986,
							"src": "238:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 322,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "246:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 324,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 726,
							"linearizedBaseContracts": [
								726
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 329,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "875:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:5"
									},
									"src": "844:46:5"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 338,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1011:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1028:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1054:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:5"
									},
									"src": "972:109:5"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "1343:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "1373:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 353,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "1395:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1395:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 355,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1412:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 356,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "1416:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 351,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 349,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1353:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:5"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1293:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1293:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1293:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1307:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1319:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:5"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:5"
									},
									"scope": 726,
									"src": "1271:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "1760:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "1790:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 379,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "1812:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1812:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 381,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1833:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 382,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1839:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 383,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "1843:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 384,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 377,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 375,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1770:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:5"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1696:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 364,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1696:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1696:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1710:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1724:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1736:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:5"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:5"
									},
									"scope": 726,
									"src": "1670:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "2600:139:5",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "2610:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 410,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 406,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$726",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$726",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 404,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "2664:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 402,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2633:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "2633:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 412,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2695:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 413,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "2702:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2711:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 415,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "2726:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2682:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:5"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2545:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 391,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2545:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2545:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2559:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2576:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:5"
									},
									"scope": 726,
									"src": "2514:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "3505:370:5",
										"statements": [
											{
												"id": 461,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:5",
												"statements": [
													{
														"assignments": [
															432
														],
														"declarations": [
															{
																"constant": false,
																"id": 432,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 461,
																"src": "3539:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 431,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 441,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 437,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$726",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$726",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 435,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 439,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "3597:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 433,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3566:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "3566:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 442,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "3623:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 443,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "3642:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 452,
														"nodeType": "IfStatement",
														"src": "3619:160:5",
														"trueBody": {
															"id": 451,
															"nodeType": "Block",
															"src": "3661:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 446,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "3719:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 447,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "3728:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 448,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 428,
																				"src": "3746:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 445,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "3686:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 450,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 454,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3805:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 455,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "3812:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 456,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "3821:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 457,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "3840:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 453,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "3792:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 460,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3438:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 422,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3438:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3452:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3469:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:5"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:5"
									},
									"scope": 726,
									"src": "3407:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "4529:303:5",
										"statements": [
											{
												"assignments": [
													475
												],
												"declarations": [
													{
														"constant": false,
														"id": 475,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 509,
														"src": "4539:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 474,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 478,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "4582:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4582:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 480,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4598:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 481,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "4607:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 482,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 476,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:5"
											},
											{
												"condition": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 486,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "4654:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 487,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "4661:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 485,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4630:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 508,
												"nodeType": "IfStatement",
												"src": "4625:201:5",
												"trueBody": {
													"id": 507,
													"nodeType": "Block",
													"src": "4676:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 491,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "4710:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 494,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 467,
																					"src": "4732:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "4732:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 496,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 469,
																						"src": "4748:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 498,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 492,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 490,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "4690:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 501,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 503,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "4795:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 504,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "4802:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 502,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "4775:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 506,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4474:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 466,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 465,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4474:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4474:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4488:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4505:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:5"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:5"
									},
									"scope": 726,
									"src": "4452:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5279:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 523,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "5293:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 537,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "5402:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 538,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "5406:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 539,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "5413:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 535,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "5380:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5380:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 550,
													"nodeType": "IfStatement",
													"src": "5375:117:5",
													"trueBody": {
														"id": 549,
														"nodeType": "Block",
														"src": "5420:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 545,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 514,
																					"src": "5474:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 543,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 542,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "5441:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 548,
																"nodeType": "RevertStatement",
																"src": "5434:47:5"
															}
														]
													}
												},
												"id": 551,
												"nodeType": "IfStatement",
												"src": "5289:203:5",
												"trueBody": {
													"id": 534,
													"nodeType": "Block",
													"src": "5314:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 529,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "5341:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 530,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "5348:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 531,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 518,
																		"src": "5352:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 528,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "5328:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 533,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5208:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 512,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5208:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5208:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5224:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5236:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5251:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:5"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:5"
									},
									"scope": 726,
									"src": "5176:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "6017:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 568,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "6031:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 583,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6154:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 584,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "6160:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 585,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "6164:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 586,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "6171:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 581,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "6128:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6128:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 597,
													"nodeType": "IfStatement",
													"src": "6123:127:5",
													"trueBody": {
														"id": 596,
														"nodeType": "Block",
														"src": "6178:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 592,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 557,
																					"src": "6232:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 590,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 589,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "6199:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 595,
																"nodeType": "RevertStatement",
																"src": "6192:47:5"
															}
														]
													}
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6027:223:5",
												"trueBody": {
													"id": 580,
													"nodeType": "Block",
													"src": "6052:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 574,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "6083:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 575,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "6090:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 576,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "6096:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 577,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "6100:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 573,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "6066:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 579,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5895:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 556,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 555,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5895:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5895:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5919:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5941:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5961:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5984:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:5"
									},
									"scope": 726,
									"src": "5850:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "7023:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 613,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "7037:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 627,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "7145:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 628,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "7149:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 629,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "7156:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 625,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "7124:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7124:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 640,
													"nodeType": "IfStatement",
													"src": "7119:116:5",
													"trueBody": {
														"id": 639,
														"nodeType": "Block",
														"src": "7163:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 635,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 604,
																					"src": "7217:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 633,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 632,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "7184:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 638,
																"nodeType": "RevertStatement",
																"src": "7177:47:5"
															}
														]
													}
												},
												"id": 641,
												"nodeType": "IfStatement",
												"src": "7033:202:5",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "7058:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 619,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "7085:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 620,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "7092:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "7096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 618,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "7072:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6952:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 602,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6952:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6952:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6968:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6980:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6995:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:5"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:5"
									},
									"scope": 726,
									"src": "6921:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "7808:650:5",
										"statements": [
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "7818:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:5"
											},
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "7846:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:5"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:5",
													"nodeType": "YulBlock",
													"src": "7900:396:5",
													"statements": [
														{
															"nativeSrc": "7914:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:5"
																		},
																		"nativeSrc": "7934:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:5",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:5"
																		},
																		"nativeSrc": "7951:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:5"
																		},
																		"nativeSrc": "7968:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:5"
																},
																"nativeSrc": "7929:60:5",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:5",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:5",
																"nodeType": "YulBlock",
																"src": "8050:157:5",
																"statements": [
																	{
																		"nativeSrc": "8068:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:5"
																			},
																			"nativeSrc": "8079:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:5"
																					},
																					"nativeSrc": "8130:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:5"
																			},
																			"nativeSrc": "8107:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:5"
																		},
																		"nativeSrc": "8107:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:5"
																					},
																					"nativeSrc": "8176:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:5"
																			},
																			"nativeSrc": "8164:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:5"
																		},
																		"nativeSrc": "8164:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:5"
																},
																"nativeSrc": "8034:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:5"
															},
															"nativeSrc": "8031:176:5",
															"nodeType": "YulIf",
															"src": "8031:176:5"
														},
														{
															"nativeSrc": "8220:30:5",
															"nodeType": "YulAssignment",
															"src": "8220:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:5"
																},
																"nativeSrc": "8234:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:5"
																}
															]
														},
														{
															"nativeSrc": "8263:23:5",
															"nodeType": "YulAssignment",
															"src": "8263:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:5"
																},
																"nativeSrc": "8278:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 649,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:5",
														"valueSize": 1
													},
													{
														"declaration": 649,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:5",
														"valueSize": 1
													},
													{
														"declaration": 653,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:5",
														"valueSize": 1
													},
													{
														"declaration": 656,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:5",
														"valueSize": 1
													},
													{
														"declaration": 647,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 658,
												"nodeType": "InlineAssembly",
												"src": "7875:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 659,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "8310:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 670,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "8362:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 664,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "8336:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 662,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"nodeType": "IfStatement",
												"src": "8306:146:5",
												"trueBody": {
													"id": 681,
													"nodeType": "Block",
													"src": "8380:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 677,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "8434:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 675,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 674,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "8401:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 680,
															"nodeType": "RevertStatement",
															"src": "8394:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 646,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 645,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "7767:6:5"
													},
													"referencedDeclaration": 315,
													"src": "7767:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7781:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:5"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:5"
									},
									"scope": 726,
									"src": "7738:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "9049:391:5",
										"statements": [
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9059:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 695,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:5"
											},
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9081:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 698,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 700,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:5"
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9109:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 703,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:5",
													"nodeType": "YulBlock",
													"src": "9163:174:5",
													"statements": [
														{
															"nativeSrc": "9177:71:5",
															"nodeType": "YulAssignment",
															"src": "9177:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:5"
																		},
																		"nativeSrc": "9193:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:5"
																		},
																		"nativeSrc": "9210:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:5"
																		},
																		"nativeSrc": "9227:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:5"
																},
																"nativeSrc": "9188:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:5"
																}
															]
														},
														{
															"nativeSrc": "9261:30:5",
															"nodeType": "YulAssignment",
															"src": "9261:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:5"
																},
																"nativeSrc": "9275:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:5"
																}
															]
														},
														{
															"nativeSrc": "9304:23:5",
															"nodeType": "YulAssignment",
															"src": "9304:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:5"
																},
																"nativeSrc": "9319:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 690,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:5",
														"valueSize": 1
													},
													{
														"declaration": 690,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:5",
														"valueSize": 1
													},
													{
														"declaration": 699,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:5",
														"valueSize": 1
													},
													{
														"declaration": 696,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:5",
														"valueSize": 1
													},
													{
														"declaration": 688,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 704,
												"nodeType": "InlineAssembly",
												"src": "9138:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 705,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "9353:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 706,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "9365:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 717,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "9416:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 711,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 688,
																						"src": "9391:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 710,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 709,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 712,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 721,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 694,
												"id": 723,
												"nodeType": "Return",
												"src": "9346:87:5"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8993:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 687,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 686,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8993:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8993:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "9007:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:5"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "9043:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:5"
									},
									"scope": 726,
									"src": "8960:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 727,
							"src": "750:8692:5",
							"usedErrors": [
								329,
								338
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							985
						],
						"Errors": [
							1037
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 728,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1038,
							"src": "127:36:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 729,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1037,
										"src": "135:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "Address",
							"nameLocation": "241:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:6",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 736,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "358:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:6"
									},
									"src": "335:39:6"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "1361:278:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 746,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																],
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 744,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 749,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "1399:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "1371:125:6",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "1407:89:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 756,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				],
																				"id": 755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 754,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 759,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "1478:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 751,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "1428:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:6",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "1428:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 761,
															"nodeType": "RevertStatement",
															"src": "1421:64:6"
														}
													]
												}
											},
											{
												"assignments": [
													765,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "1507:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 764,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 772,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 766,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "1525:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 768,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "1547:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:6"
											},
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:6",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "1573:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "1568:65:6",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "1582:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 775,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "1603:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:6",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1028,
																	"src": "1603:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "1596:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1309:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1336:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:6"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:6"
									},
									"scope": 985,
									"src": "1290:349:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "2573:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "2612:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "2620:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 793,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "2590:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 792,
												"id": 798,
												"nodeType": "Return",
												"src": "2583:45:6"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2506:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2522:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:6"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2559:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 790,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:6"
									},
									"scope": 985,
									"src": "2484:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "3072:294:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 814,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 812,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 817,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "3110:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 831,
												"nodeType": "IfStatement",
												"src": "3082:123:6",
												"trueBody": {
													"id": 830,
													"nodeType": "Block",
													"src": "3117:88:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 824,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				],
																				"id": 823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 822,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 827,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "3188:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 819,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "3138:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:6",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "3138:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 829,
															"nodeType": "RevertStatement",
															"src": "3131:63:6"
														}
													]
												}
											},
											{
												"assignments": [
													833,
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "3215:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 832,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "3229:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 834,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [
														{
															"id": 840,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3282:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 836,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "3256:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 838,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "3275:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3331:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "3339:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 846,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3348:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 843,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3304:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 811,
												"id": 848,
												"nodeType": "Return",
												"src": "3297:62:6"
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "2990:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3006:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3025:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:6"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3058:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:6"
									},
									"scope": 985,
									"src": "2959:407:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "3605:154:6",
										"statements": [
											{
												"assignments": [
													861,
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "3616:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 860,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "3630:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 862,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"arguments": [
														{
															"id": 866,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3675:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 864,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3657:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3724:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3732:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 872,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "3741:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 869,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3697:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 859,
												"id": 874,
												"nodeType": "Return",
												"src": "3690:62:6"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3533:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3549:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:6"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3591:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:6"
									},
									"scope": 985,
									"src": "3505:254:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "3997:156:6",
										"statements": [
											{
												"assignments": [
													887,
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "4008:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 886,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "4022:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 888,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 894,
												"initialValue": {
													"arguments": [
														{
															"id": 892,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "4069:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 890,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "4049:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "4118:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "4126:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 898,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "4135:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 895,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "4091:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 885,
												"id": 900,
												"nodeType": "Return",
												"src": "4084:62:6"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3930:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3946:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 880,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:6"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3983:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:6"
									},
									"scope": 985,
									"src": "3900:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "4579:424:6",
										"statements": [
											{
												"condition": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:6",
													"subExpression": {
														"id": 914,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "4594:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 939,
													"nodeType": "Block",
													"src": "4653:344:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 921,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "4841:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 925,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 905,
																				"src": "4867:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 936,
															"nodeType": "IfStatement",
															"src": "4837:119:6",
															"trueBody": {
																"id": 935,
																"nodeType": "Block",
																"src": "4892:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 932,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "4934:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 931,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "4917:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 934,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 937,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "4976:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 913,
															"id": 938,
															"nodeType": "Return",
															"src": "4969:17:6"
														}
													]
												},
												"id": 940,
												"nodeType": "IfStatement",
												"src": "4589:408:6",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "4603:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 917,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "4625:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 916,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "4617:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4466:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4490:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4512:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:6"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4565:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:6"
									},
									"scope": 985,
									"src": "4421:582:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "5307:122:6",
										"statements": [
											{
												"condition": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:6",
													"subExpression": {
														"id": 952,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "5322:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "5381:42:6",
													"statements": [
														{
															"expression": {
																"id": 959,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "5402:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 951,
															"id": 960,
															"nodeType": "Return",
															"src": "5395:17:6"
														}
													]
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "5317:106:6",
												"trueBody": {
													"id": 958,
													"nodeType": "Block",
													"src": "5331:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 955,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "5353:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 954,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "5345:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 957,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:6",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "5231:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "5245:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 946,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:6"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "5293:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:6"
									},
									"scope": 985,
									"src": "5205:224:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "5598:432:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 970,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "5674:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "5973:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 976,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "5994:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:6",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1028,
																	"src": "5994:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 980,
															"nodeType": "RevertStatement",
															"src": "5987:26:6"
														}
													]
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "5670:354:6",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "5697:270:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:6",
																"nodeType": "YulBlock",
																"src": "5824:133:6",
																"statements": [
																	{
																		"nativeSrc": "5842:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:6"
																			},
																			"nativeSrc": "5865:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:6",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:6",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:6"
																					},
																					"nativeSrc": "5906:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:6"
																			},
																			"nativeSrc": "5899:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:6"
																		},
																		"nativeSrc": "5899:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:6"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 967,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 967,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:6",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 974,
															"nodeType": "InlineAssembly",
															"src": "5799:158:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:6",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "5560:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:6"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:6"
									},
									"scope": 985,
									"src": "5543:487:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 986,
							"src": "233:5799:6",
							"usedErrors": [
								736
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1015
						]
					},
					"id": 1016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 988,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1015,
							"linearizedBaseContracts": [
								1015
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 993,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 992,
												"id": 995,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1015,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1002,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1004,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1015,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1010,
												"id": 1012,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1015,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1016,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1037
						]
					},
					"id": 1038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1018,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:8",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1037,
							"linearizedBaseContracts": [
								1037
							],
							"name": "Errors",
							"nameLocation": "419:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1025,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "557:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "574:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:8"
									},
									"src": "531:59:8"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1028,
									"name": "FailedCall",
									"nameLocation": "696:10:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:8"
									},
									"src": "690:19:8"
								},
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:8",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1031,
									"name": "FailedDeployment",
									"nameLocation": "772:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:8"
									},
									"src": "766:25:8"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:8",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1036,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "884:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:8"
									},
									"src": "860:33:8"
								}
							],
							"scope": 1038,
							"src": "411:484:8",
							"usedErrors": [
								1025,
								1028,
								1031,
								1036
							],
							"usedEvents": []
						}
					],
					"src": "100:796:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1049
						]
					},
					"id": 1050,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1039,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1040,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1049,
							"linearizedBaseContracts": [
								1049
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1045,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1049,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1050,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"Address": [
							985
						],
						"Context": [
							1015
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							726
						],
						"StakingContract": [
							1366
						]
					},
					"id": 1367,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1051,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1367,
							"sourceUnit": 316,
							"src": "27:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1053,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1367,
							"sourceUnit": 727,
							"src": "85:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1367,
							"sourceUnit": 148,
							"src": "152:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1055,
										"name": "Ownable",
										"nameLocations": [
											"236:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "236:7:10"
									},
									"id": 1056,
									"nodeType": "InheritanceSpecifier",
									"src": "236:7:10"
								}
							],
							"canonicalName": "StakingContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1366,
							"linearizedBaseContracts": [
								1366,
								147,
								1015
							],
							"name": "StakingContract",
							"nameLocation": "217:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1060,
									"libraryName": {
										"id": 1057,
										"name": "SafeERC20",
										"nameLocations": [
											"257:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 726,
										"src": "257:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "251:27:10",
									"typeName": {
										"id": 1059,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1058,
											"name": "IERC20",
											"nameLocations": [
												"271:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "271:6:10"
										},
										"referencedDeclaration": 315,
										"src": "271:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 1063,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "300:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1366,
									"src": "286:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1062,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1061,
											"name": "IERC20",
											"nameLocations": [
												"286:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "286:6:10"
										},
										"referencedDeclaration": 315,
										"src": "286:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 1066,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "333:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1366,
									"src": "319:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1065,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1064,
											"name": "IERC20",
											"nameLocations": [
												"319:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "319:6:10"
										},
										"referencedDeclaration": 315,
										"src": "319:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1068,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "368:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1366,
									"src": "353:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1067,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "353:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 1070,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "401:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1366,
									"src": "386:25:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1069,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "386:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 1072,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "473:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1366,
									"src": "458:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1071,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "458:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 1074,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "509:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 1366,
									"src": "494:35:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1073,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "494:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 1078,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "573:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1366,
									"src": "538:41:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1077,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1075,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "546:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "538:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1076,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "557:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 1082,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "621:22:10",
									"nodeType": "VariableDeclaration",
									"scope": 1366,
									"src": "586:57:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1081,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1079,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "594:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "586:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1080,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "605:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 1086,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "685:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1366,
									"src": "650:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1085,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1083,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "658:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "650:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1084,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "669:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "800:84:10",
										"statements": [
											{
												"expression": {
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1100,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1063,
														"src": "811:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1101,
														"name": "_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "826:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "811:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 1103,
												"nodeType": "ExpressionStatement",
												"src": "811:28:10"
											},
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1104,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "850:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1105,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "864:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$315",
															"typeString": "contract IERC20"
														}
													},
													"src": "850:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "850:26:10"
											}
										]
									},
									"id": 1109,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1097,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1094,
													"src": "786:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1098,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1096,
												"name": "Ownable",
												"nameLocations": [
													"778:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "778:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "778:21:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "_stakingToken",
												"nameLocation": "720:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "713:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1087,
														"name": "IERC20",
														"nameLocations": [
															"713:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "713:6:10"
													},
													"referencedDeclaration": 315,
													"src": "713:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "742:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "735:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1091,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1090,
														"name": "IERC20",
														"nameLocations": [
															"735:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "735:6:10"
													},
													"referencedDeclaration": 315,
													"src": "735:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "764:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "756:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "756:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "712:65:10"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:10"
									},
									"scope": 1366,
									"src": "701:183:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "931:282:10",
										"statements": [
											{
												"expression": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1113,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "942:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1114,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "965:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "965:16:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "942:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1117,
												"nodeType": "ExpressionStatement",
												"src": "942:39:10"
											},
											{
												"expression": {
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1118,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "992:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1119,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1009:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1015:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1009:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "992:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "992:32:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1123,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "1041:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1060:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1052:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1124,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1052:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1052:10:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1041:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1144,
												"nodeType": "IfStatement",
												"src": "1037:157:10",
												"trueBody": {
													"id": 1143,
													"nodeType": "Block",
													"src": "1064:130:10",
													"statements": [
														{
															"expression": {
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1129,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "1079:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1131,
																	"indexExpression": {
																		"id": 1130,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "1087:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1079:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1133,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1111,
																			"src": "1105:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1132,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "1098:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1098:15:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1079:34:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1136,
															"nodeType": "ExpressionStatement",
															"src": "1079:34:10"
														},
														{
															"expression": {
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1137,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1082,
																		"src": "1128:22:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1139,
																	"indexExpression": {
																		"id": 1138,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "1151:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1128:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1140,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "1162:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1128:54:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1142,
															"nodeType": "ExpressionStatement",
															"src": "1128:54:10"
														}
													]
												}
											},
											{
												"id": 1145,
												"nodeType": "PlaceholderStatement",
												"src": "1204:1:10"
											}
										]
									},
									"id": 1147,
									"name": "updateReward",
									"nameLocation": "901:12:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "922:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "914:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:17:10"
									},
									"src": "892:321:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "1277:244:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1152,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "1292:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1307:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1292:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1158,
												"nodeType": "IfStatement",
												"src": "1288:76:10",
												"trueBody": {
													"id": 1157,
													"nodeType": "Block",
													"src": "1310:54:10",
													"statements": [
														{
															"expression": {
																"id": 1155,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1074,
																"src": "1332:20:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1151,
															"id": 1156,
															"nodeType": "Return",
															"src": "1325:27:10"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1159,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "1394:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1166,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1160,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "1432:5:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1161,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1438:9:10",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "1432:15:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 1162,
																						"name": "lastUpdateTime",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1072,
																						"src": "1450:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1432:32:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1164,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "1431:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1165,
																			"name": "rewardRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1070,
																			"src": "1468:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1431:47:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1481:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "1431:54:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1169,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1430:56:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1170,
															"name": "totalStaked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "1502:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1430:83:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1394:119:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1173,
												"nodeType": "Return",
												"src": "1374:139:10"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "1230:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:2:10"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1268:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1268:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:9:10"
									},
									"scope": 1366,
									"src": "1221:300:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "1592:180:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1182,
																			"name": "stakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1078,
																			"src": "1624:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1184,
																		"indexExpression": {
																			"id": 1183,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "1631:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1624:15:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1185,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1175,
																						"src": "1660:14:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1186,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1660:16:10",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"baseExpression": {
																						"id": 1187,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1082,
																						"src": "1679:22:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 1189,
																					"indexExpression": {
																						"id": 1188,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1177,
																						"src": "1702:7:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "1679:31:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1660:50:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1191,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1659:52:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1624:87:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1193,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1623:89:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "1623:109:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 1196,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "1748:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1198,
														"indexExpression": {
															"id": 1197,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "1756:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1748:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1623:141:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1181,
												"id": 1200,
												"nodeType": "Return",
												"src": "1603:161:10"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "1538:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1553:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1545:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1544:17:10"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1583:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1582:9:10"
									},
									"scope": 1366,
									"src": "1529:243:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "1845:202:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1212,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1204,
																"src": "1864:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1873:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1864:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1876:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 1211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1856:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "1856:37:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1221,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1934:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1938:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1934:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1225,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1954:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$1366",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$1366",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1946:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1223,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1946:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1227,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "1961:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1218,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "1904:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1917:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 389,
														"src": "1904:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1904:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "1904:64:10"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1230,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "1979:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1233,
														"indexExpression": {
															"expression": {
																"id": 1231,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1986:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1990:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1986:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1979:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1234,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "2001:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1979:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "1979:28:10"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1237,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "2018:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1238,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1204,
														"src": "2033:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2018:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "2018:21:10"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1207,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1833:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1837:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1833:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1206,
												"name": "updateReward",
												"nameLocations": [
													"1820:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1147,
												"src": "1820:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1820:24:10"
										}
									],
									"name": "stake",
									"nameLocation": "1789:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1803:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "1795:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1794:16:10"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1845:0:10"
									},
									"scope": 1366,
									"src": "1780:267:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "2122:268:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1252,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "2141:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2150:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2141:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420756e7374616b652030",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2153:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d",
																"typeString": "literal_string \"Cannot unstake 0\""
															},
															"value": "Cannot unstake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_60c3b85c2858b749249639924b0ba23e1522e0624567f639b0999f025505527d",
																"typeString": "literal_string \"Cannot unstake 0\""
															}
														],
														"id": 1251,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2133:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2133:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "2133:39:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1259,
																	"name": "stakes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "2191:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1262,
																"indexExpression": {
																	"expression": {
																		"id": 1260,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2198:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2202:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2198:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2191:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1263,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1244,
																"src": "2213:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2191:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420756e7374616b65206d6f7265207468616e207374616b6564",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2221:33:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac",
																"typeString": "literal_string \"Cannot unstake more than staked\""
															},
															"value": "Cannot unstake more than staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ccb436404c7aa6ea9c3157f2fea6dcdf06a72762de82f97e7576309fbe81dac",
																"typeString": "literal_string \"Cannot unstake more than staked\""
															}
														],
														"id": 1258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2183:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2183:72:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "2183:72:10"
											},
											{
												"expression": {
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1268,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1078,
															"src": "2266:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1271,
														"indexExpression": {
															"expression": {
																"id": 1269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2273:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2277:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2273:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2266:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1272,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "2288:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2266:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1274,
												"nodeType": "ExpressionStatement",
												"src": "2266:28:10"
											},
											{
												"expression": {
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1275,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "2305:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1276,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "2320:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2305:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "2305:21:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1282,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2363:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2367:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2363:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1284,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2375:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1279,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "2337:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2350:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 362,
														"src": "2337:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2337:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "2337:45:10"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1247,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2110:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2114:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2110:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1249,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1246,
												"name": "updateReward",
												"nameLocations": [
													"2097:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1147,
												"src": "2097:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2097:24:10"
										}
									],
									"name": "unstake",
									"nameLocation": "2064:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2080:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "2072:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2072:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2071:16:10"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2122:0:10"
									},
									"scope": 1366,
									"src": "2055:335:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "2456:197:10",
										"statements": [
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2475:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1324,
														"src": "2467:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2467:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1301,
												"initialValue": {
													"baseExpression": {
														"id": 1297,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "2484:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1300,
													"indexExpression": {
														"expression": {
															"id": 1298,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2492:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2496:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2492:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2484:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2467:36:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1303,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1296,
																"src": "2522:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2531:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2522:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320746f20636c61696d",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															},
															"value": "No rewards to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
																"typeString": "literal_string \"No rewards to claim\""
															}
														],
														"id": 1302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2514:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "2514:42:10"
											},
											{
												"expression": {
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1309,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "2567:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1312,
														"indexExpression": {
															"expression": {
																"id": 1310,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2575:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2579:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2575:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2567:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2589:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2567:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "2567:23:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1319,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2626:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2630:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2626:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1321,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "2638:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1316,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "2601:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2613:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 362,
														"src": "2601:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2601:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "2601:44:10"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2444:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2448:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2444:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1293,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1290,
												"name": "updateReward",
												"nameLocations": [
													"2431:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1147,
												"src": "2431:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2431:24:10"
										}
									],
									"name": "claimRewards",
									"nameLocation": "2407:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2419:2:10"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2456:0:10"
									},
									"scope": 1366,
									"src": "2398:255:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "2738:216:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1335,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "2757:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2766:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2757:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74206465706f7369742030",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866",
																"typeString": "literal_string \"Cannot deposit 0\""
															},
															"value": "Cannot deposit 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_334dcbea42167a8744f62ce1d7fbdb69a6aedb63b43f5c02e49c5d4de0e00866",
																"typeString": "literal_string \"Cannot deposit 0\""
															}
														],
														"id": 1334,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2749:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2749:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "2749:39:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1344,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2828:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2832:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2828:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1348,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2848:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingContract_$1366",
																		"typeString": "contract StakingContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingContract_$1366",
																		"typeString": "contract StakingContract"
																	}
																],
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2840:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1346,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2840:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2840:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1350,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "2855:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1341,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "2799:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2811:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 389,
														"src": "2799:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$315_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2799:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "2799:63:10"
											},
											{
												"expression": {
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1353,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "2873:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1354,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "2886:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1355,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "2895:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2886:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2873:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "2873:30:10"
											},
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1359,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "2914:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1360,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2931:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2937:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2931:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2914:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "2914:32:10"
											}
										]
									},
									"functionSelector": "bdd071fb",
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1332,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1331,
												"name": "onlyOwner",
												"nameLocations": [
													"2728:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2728:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2728:9:10"
										}
									],
									"name": "depositRewards",
									"nameLocation": "2670:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2693:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2685:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "2709:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2701:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:34:10"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2738:0:10"
									},
									"scope": 1366,
									"src": "2661:293:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1367,
							"src": "208:2749:10",
							"usedErrors": [
								13,
								18,
								329
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "0:2959:10"
				},
				"id": 10
			}
		}
	}
}